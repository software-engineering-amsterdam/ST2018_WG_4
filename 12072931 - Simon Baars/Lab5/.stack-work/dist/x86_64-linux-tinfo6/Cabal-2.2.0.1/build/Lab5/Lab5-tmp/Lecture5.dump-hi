
==================== FINAL INTERFACE ====================
2018-10-04 10:44:29.348747283 UTC

interface main:Lecture5 8043
  interface hash: 37656b6a9d368fc773ba48b84f6c3a4b
  ABI hash: e31b65d11016f675333b2ddfa266bde1
  export-list hash: dcc35f988d58f240c30394e7a0489561
  orphan hash: ae86adf9ab717afc4d2cad9239bdbc0f
  flag hash: 9ae8a699cb106faa4356352859ff4048
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lecture5.bl
  Lecture5.blockConstrnt
  Lecture5.blocks
  Lecture5.colInjective
  Lecture5.columnConstrnt
  Lecture5.consistent
  Lecture5.constraints
  Lecture5.count
  Lecture5.createBlock
  Lecture5.emptyN
  Lecture5.eraseN
  Lecture5.eraseS
  Lecture5.example1
  Lecture5.example2
  Lecture5.example3
  Lecture5.example4
  Lecture5.example5
  Lecture5.exmple1
  Lecture5.exmple2
  Lecture5.extend
  Lecture5.extendNode
  Lecture5.filledPositions
  Lecture5.freeAtPos
  Lecture5.freeAtPos'
  Lecture5.freeAtPositions
  Lecture5.freeInColumn
  Lecture5.freeInNrcSubgrid
  Lecture5.freeInRow
  Lecture5.freeInSeq
  Lecture5.freeInSubgrid
  Lecture5.freePosTest
  Lecture5.genProblem
  Lecture5.genRandomSudoku
  Lecture5.genSudokuPositions
  Lecture5.getRandomCnstr
  Lecture5.getRandomInt
  Lecture5.getRandomItem
  Lecture5.grid2sud
  Lecture5.grow
  Lecture5.initNode
  Lecture5.injective
  Lecture5.length3rd
  Lecture5.minimalize
  Lecture5.nrcBl
  Lecture5.nrcBlocks
  Lecture5.nrcConstrnt
  Lecture5.nrcExample
  Lecture5.nrcSameBlock
  Lecture5.nrcSubGrid
  Lecture5.nrcSubgridInjective
  Lecture5.openPositions
  Lecture5.positions
  Lecture5.prune
  Lecture5.randomS
  Lecture5.randomize
  Lecture5.rowConstrnt
  Lecture5.rowInjective
  Lecture5.rsearch
  Lecture5.rsolveNs
  Lecture5.rsuccNode
  Lecture5.sameBlock
  Lecture5.sameLen
  Lecture5.search
  Lecture5.showGrid
  Lecture5.showNode
  Lecture5.showRow
  Lecture5.showSudoku
  Lecture5.showVal
  Lecture5.solveAndShow
  Lecture5.solveNs
  Lecture5.solveShowNs
  Lecture5.solved
  Lecture5.subGrid
  Lecture5.subgridInjective
  Lecture5.succNode
  Lecture5.sud2grid
  Lecture5.takeT
  Lecture5.uniqueSol
  Lecture5.update
  Lecture5.values
  Lecture5.Column
  Lecture5.Constraint
  Lecture5.Constrnt
  Lecture5.Grid
  Lecture5.Node
  Lecture5.Position
  Lecture5.Row
  Lecture5.Sudoku
  Lecture5.Tree{Lecture5.T}
  Lecture5.Value
module dependencies:
package dependencies: QuickCheck-2.11.3 array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 pretty-1.1.3.6
                      primitive-0.6.3.0 random-1.1 template-haskell-2.13.0.0
                      tf-random-0.5 time-1.8.0.2 transformers-0.5.5.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.11.3:Test.QuickCheck e00d138ee3234e83a31cc3113c8c8ffb
import  -/  QuickCheck-2.11.3:Test.QuickCheck.Arbitrary 749c030890709ce50a65277c8ad56400
import  -/  QuickCheck-2.11.3:Test.QuickCheck.Gen 18d7f741d47ea7234320fe42d69d1321
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:Debug.Trace 7d99b5cfd8ae9f4b50938e4fedeaadef
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO 1c239be44126f7b1ba512ea61300f4dc
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  random-1.1:System.Random 31994b60c33f032d578c64a928f735f7
d08eed8db65524a395f0f0bfb83d73e2
  $fEqTree :: GHC.Classes.Eq a => GHC.Classes.Eq (Lecture5.Tree a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a).
                  @ (Lecture5.Tree a)
                  (Lecture5.$fEqTree_$c== @ a v)
                  (Lecture5.$fEqTree_$c/= @ a v) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fEqTree_$c/= ::
    GHC.Classes.Eq a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><L,U><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (x :: Lecture5.Tree a)
                   (y :: Lecture5.Tree a) ->
                 case Lecture5.$fEqTree_$c== @ a $dEq x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fEqTree_$c== ::
    GHC.Classes.Eq a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)> -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree :: GHC.Classes.Ord a => GHC.Classes.Ord (Lecture5.Tree a)
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Ord a).
                  @ (Lecture5.Tree a)
                  (Lecture5.$fOrdTree_$cp1Ord @ a v)
                  (Lecture5.$fOrdTree_$ccompare @ a v)
                  (Lecture5.$fOrdTree_$c< @ a v)
                  (Lecture5.$fOrdTree_$c<= @ a v)
                  (\ (a1 :: Lecture5.Tree a) (b :: Lecture5.Tree a) ->
                   Lecture5.$fOrdTree_$c< @ a v b a1)
                  (Lecture5.$fOrdTree_$c>= @ a v)
                  (Lecture5.$fOrdTree_$cmax @ a v)
                  (Lecture5.$fOrdTree_$cmin @ a v) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$c< ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)> -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$c<= ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Lecture5.Tree a)
                   (b :: Lecture5.Tree a) ->
                 case Lecture5.$fOrdTree_$c< @ a $dOrd b a1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$c>= ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Lecture5.Tree a)
                   (b :: Lecture5.Tree a) ->
                 case Lecture5.$fOrdTree_$c< @ a $dOrd a1 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$ccompare ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Ordering
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)> -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$cmax ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> Lecture5.Tree a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)><L,U(U,U)><L,U(U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lecture5.Tree a)
                   (y :: Lecture5.Tree a) ->
                 case Lecture5.$fOrdTree_$c< @ a $dOrd y x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$cmin ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> Lecture5.Tree a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)><L,U(U,U)><L,U(U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lecture5.Tree a)
                   (y :: Lecture5.Tree a) ->
                 case Lecture5.$fOrdTree_$c< @ a $dOrd y x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$cp1Ord ::
    GHC.Classes.Ord a => GHC.Classes.Eq (Lecture5.Tree a)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 Lecture5.$fEqTree @ a (GHC.Classes.$p1Ord @ a $dOrd)) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fShowTree :: GHC.Show.Show a => GHC.Show.Show (Lecture5.Tree a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(C(U))),A,A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (Lecture5.Tree a)
                  (Lecture5.$fShowTree_$cshowsPrec @ a v)
                  (Lecture5.$fShowTree_$cshow @ a v)
                  (Lecture5.$fShowTree_$cshowList @ a v) -}
5ef60241ac0c1dea570d87c1d81b758e
  $fShowTree1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fShowTree_$cshow ::
    GHC.Show.Show a => Lecture5.Tree a -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U(U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dShow :: GHC.Show.Show a) (x :: Lecture5.Tree a) ->
                 Lecture5.$fShowTree_$cshowsPrec
                   @ a
                   $dShow
                   Lecture5.$fShowTree1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fShowTree_$cshowList ::
    GHC.Show.Show a => [Lecture5.Tree a] -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Lecture5.Tree a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Lecture5.Tree a)
                   (Lecture5.$fShowTree_$cshowsPrec @ a $dShow Lecture5.$fShowTree1)
                   ls
                   s) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fShowTree_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Lecture5.Tree a -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(C(U))),A,A)><S(S),1*U(U)><S,1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Lecture5.Tree a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Lecture5.T ww3 ww4 ->
                 Lecture5.$w$cshowsPrec @ a w ww1 ww3 ww4 } }) -}
c5e1cb02b56d8a10d6d422a3859000af
  $s$fEq(,) :: GHC.Classes.Eq (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEqInt)
                  Lecture5.$s$fEq(,)_$s$fEq(,)_$c/= -}
8fcbf8cc29218b7d62e1ffcabdf02bb3
  $s$fEq(,)_$s$fEq(,)_$c/= ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (GHC.Types.Int, GHC.Types.Int))
                   (y :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case GHC.Classes.eqInt a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.eqInt a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
095540183a79fd431494b94dae136eac
  $tc'T :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17467278147681253827##
                   3107323041781491241##
                   Lecture5.$trModule
                   Lecture5.$tc'T2
                   1#
                   Lecture5.$tc'T1) -}
40774a29f099d98eed3ee2eff3cf3ba3
  $tc'T1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2ebaa1dcf4544840973ca59fc064c677
  $tc'T2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lecture5.$tc'T3) -}
8f38096b73ccce46d6daf3f8df864af6
  $tc'T3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T"#) -}
c9c8002c65e6d1e85942f92f5fa445d2
  $tcTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3531523477867271013##
                   17004540309598925330##
                   Lecture5.$trModule
                   Lecture5.$tcTree1
                   0#
                   GHC.Types.krep$*Arr*) -}
9cb7f2b793579aa0ca0c78aa9cbe2b8e
  $tcTree1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lecture5.$tcTree2) -}
a9d9f05d1e7635b5e4de714544c1a849
  $tcTree2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tree"#) -}
c4c83e82b39bbd1efff189c1de3d50b4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Lecture5.$trModule3
                   Lecture5.$trModule1) -}
2651aa90a5790779e2ead9d5ef1f4f67
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lecture5.$trModule2) -}
497bea39d102eecc2a4b6df5eda48d83
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lecture5"#) -}
a76f3c9e197f7a91971e5865c61a529b
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lecture5.$trModule4) -}
ade7fd6233e77f9769eaa7f22c2f6cc4
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
d08eed8db65524a395f0f0bfb83d73e2
  $w$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Prim.Int# -> a -> [Lecture5.Tree a] -> GHC.Show.ShowS
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(C(C1(C(U))),A,A)><S,U><L,U><L,U>, Inline: [0] -}
1332641170695a38af9cfe552c32d347
  $wc ::
    GHC.Types.Int
    -> [[Lecture5.Position]]
    -> (# [Lecture5.Position], [[Lecture5.Position]] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(U)><L,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int) (w1 :: [[Lecture5.Position]]) ->
                 (# case w of ww { GHC.Types.I# ww1 ->
                    Lecture5.$wcreateBlock
                      ww1
                      Lecture5.blockConstrnt2
                      3#
                      Lecture5.blockConstrnt3 },
                    letrec {
                      go_up :: GHC.Prim.Int# -> [[Lecture5.Position]]
                        {- Arity: 1, Strictness: <S,U> -}
                      = \ (x :: GHC.Prim.Int#) ->
                        case GHC.Prim.># x 6# of lwild1 {
                          DEFAULT
                          -> GHC.Types.:
                               @ [Lecture5.Position]
                               (case w of ww { GHC.Types.I# ww1 ->
                                Lecture5.$wcreateBlock
                                  ww1
                                  (GHC.Types.I# x)
                                  3#
                                  Lecture5.blockConstrnt3 })
                               (go_up (GHC.Prim.+# x 3#))
                          1#
                          -> GHC.Types.:
                               @ [Lecture5.Position]
                               (case w of ww { GHC.Types.I# ww1 ->
                                Lecture5.$wcreateBlock
                                  ww1
                                  (GHC.Types.I# x)
                                  3#
                                  Lecture5.blockConstrnt3 })
                               w1 }
                    } in
                    go_up 4# #)) -}
d2149aaf8610acffdcde7657d2fe00a5
  $wcreateBlock ::
    GHC.Prim.Int#
    -> Lecture5.Column
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> [Lecture5.Position]
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,U(U)><S,U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 let {
                   y :: GHC.Prim.Int# = GHC.Prim.+# (GHC.Prim.-# ww 1#) ww2
                 } in
                 case GHC.Prim.># ww y of lwild {
                   DEFAULT
                   -> letrec {
                        go1 :: GHC.Prim.Int# -> [Lecture5.Position]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Prim.Int#) ->
                          case ww1 of wild { GHC.Types.I# x1 ->
                          case ww3 of wild1 { GHC.Types.I# y1 ->
                          let {
                            y2 :: GHC.Prim.Int# = GHC.Prim.+# (GHC.Prim.-# x1 1#) y1
                          } in
                          let {
                            n :: [Lecture5.Position]
                            = case GHC.Prim.==# x y of lwild1 {
                                DEFAULT -> go1 (GHC.Prim.+# x 1#)
                                1# -> GHC.Types.[] @ Lecture5.Position }
                          } in
                          case GHC.Prim.># x1 y2 of lwild1 {
                            DEFAULT
                            -> let {
                                 ds :: Lecture5.Row = GHC.Types.I# x
                               } in
                               letrec {
                                 go2 :: GHC.Prim.Int# -> [Lecture5.Position]
                                   {- Arity: 1, Strictness: <L,U> -}
                                 = \ (x2 :: GHC.Prim.Int#) ->
                                   GHC.Types.:
                                     @ Lecture5.Position
                                     (ds, GHC.Types.I# x2)
                                     (case GHC.Prim.==# x2 y2 of lwild2 {
                                        DEFAULT -> go2 (GHC.Prim.+# x2 1#) 1# -> n })
                               } in
                               go2 x1
                            1# -> n } } }
                      } in
                      go1 ww
                   1# -> GHC.Types.[] @ Lecture5.Position }) -}
96628af919808b8d887966361e3afa5c
  $weraseN ::
    Lecture5.Node
    -> Lecture5.Row
    -> Lecture5.Column
    -> (# Lecture5.Sudoku, [Lecture5.Constraint] #)
  {- Arity: 3, Strictness: <L,U(C(U(U)),A)><L,U(U)><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lecture5.Node)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   $ws :: GHC.Prim.Int# -> Lecture5.Column -> Lecture5.Value
                     {- Arity: 2, Strictness: <S,U><L,U(U)>, Inline: [0] -}
                   = \ (ww2 :: GHC.Prim.Int#) (ww3 :: Lecture5.Column)[OneShot] ->
                     case ww of wild { GHC.Types.I# x ->
                     case GHC.Prim.==# x ww2 of lwild {
                       DEFAULT
                       -> case w of wild1 { (,) x1 ds1 -> x1 (GHC.Types.I# ww2, ww3) }
                       1#
                       -> case ww1 of wild1 { GHC.Types.I# x1 ->
                          case ww3 of wild2 { GHC.Types.I# y ->
                          case GHC.Prim.==# x1 y of lwild1 {
                            DEFAULT
                            -> case w of wild3 { (,) x2 ds1 -> x2 (GHC.Types.I# ww2, wild2) }
                            1# -> Lecture5.$fShowTree1 } } } } }
                 } in
                 let {
                   s :: Lecture5.Sudoku
                     {- Arity: 1, Strictness: <S(S(S)L),1*U(1*U(U),U(U))>, Inline: [0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                                    case w1 of ww2 { (,) ww3 ww4 ->
                                    case ww3 of ww5 { GHC.Types.I# ww6 -> $ws ww6 ww4 } }) -}
                   = \ (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                     case w1 of ww2 { (,) ww3 ww4 ->
                     case ww3 of ww5 { GHC.Types.I# ww6 -> $ws ww6 ww4 } }
                 } in
                 (# s, Lecture5.constraints s #)) -}
bbecd6c9ac214ca40651e18159619cc5
  $weraseS ::
    Lecture5.Sudoku
    -> GHC.Prim.Int#
    -> Lecture5.Column
    -> GHC.Prim.Int#
    -> Lecture5.Column
    -> Lecture5.Value
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,1*C1(U(U))><S,U><L,1*U(U)><S,U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Lecture5.Column) ->
                 case GHC.Prim.==# ww ww2 of lwild {
                   DEFAULT -> w (GHC.Types.I# ww2, ww3)
                   1#
                   -> case ww1 of wild { GHC.Types.I# x ->
                      case ww3 of wild1 { GHC.Types.I# y ->
                      case GHC.Prim.==# x y of lwild1 {
                        DEFAULT -> w (GHC.Types.I# ww2, wild1)
                        1# -> Lecture5.$fShowTree1 } } } }) -}
c3c511fead1ec88f57be9b066cc92adf
  $wextend ::
    Lecture5.Sudoku
    -> GHC.Prim.Int#
    -> Lecture5.Column
    -> Lecture5.Value
    -> GHC.Prim.Int#
    -> Lecture5.Column
    -> Lecture5.Value
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,1*C1(U(U))><S,U><L,1*U(U)><L,1*U(U)><S,U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: Lecture5.Value)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Lecture5.Column) ->
                 case GHC.Prim.==# ww3 ww of lwild {
                   DEFAULT -> w (GHC.Types.I# ww3, ww4)
                   1#
                   -> case ww4 of wild { GHC.Types.I# x ->
                      case ww1 of wild1 { GHC.Types.I# y ->
                      case GHC.Prim.==# x y of lwild1 {
                        DEFAULT -> w (GHC.Types.I# ww3, wild) 1# -> ww2 } } } }) -}
837c05073513648089b801c7ac824a8f
  $wextendNode ::
    Lecture5.Sudoku
    -> [Lecture5.Constraint]
    -> Lecture5.Row
    -> Lecture5.Column
    -> [Lecture5.Value]
    -> [Lecture5.Node]
  {- Arity: 5, Strictness: <L,C(U)><L,U><L,U(U)><L,U(U)><S,1*U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Sudoku)
                   (ww1 :: [Lecture5.Constraint])
                   (ww2 :: Lecture5.Row)
                   (ww3 :: Lecture5.Column)
                   (ww4 :: [Lecture5.Value]) ->
                 letrec {
                   go1 :: [Lecture5.Value] -> [Lecture5.Node]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Lecture5.Value]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Node
                       : y ys
                       -> GHC.Types.:
                            @ Lecture5.Node
                            (\ (x :: (Lecture5.Row, Lecture5.Column)) ->
                             case x of ww5 { (,) ww6 ww7 ->
                             case ww6 of wild1 { GHC.Types.I# x1 ->
                             case ww2 of wild2 { GHC.Types.I# y1 ->
                             case GHC.Prim.==# x1 y1 of lwild {
                               DEFAULT -> ww ww5
                               1#
                               -> case ww7 of wild3 { GHC.Types.I# x2 ->
                                  case ww3 of wild4 { GHC.Types.I# y2 ->
                                  case GHC.Prim.==# x2 y2 of lwild1 {
                                    DEFAULT -> ww ww5 1# -> y } } } } } } },
                             Data.OldList.sortBy
                               @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                               (Lecture5.length3rd
                                  @ Lecture5.Row
                                  @ Lecture5.Column
                                  @ Lecture5.Value)
                               (Lecture5.prune (ww2, ww3, y) ww1))
                            (go1 ys) }
                 } in
                 go1 ww4) -}
1b4acd5dc0b2cc0192cc095676c8b1e3
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (GHC.Magic.noinline
                    @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                    GHC.IO.failIO1
                      `cast`
                    (forall (a :: <*>_N).
                     <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                    @ Lecture5.Node
                    Lecture5.genRandomSudoku2)
                   `cast`
                 (GHC.Types.N:IO[0] <Lecture5.Node>_R)
                   w) -}
2e1de094a219fdae22bce819ca8d18d0
  $wfreeAtPos ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 Data.OldList.intersectBy
                   @ Lecture5.Value
                   GHC.Classes.eqInt
                   (Data.OldList.intersectBy
                      @ Lecture5.Value
                      GHC.Classes.eqInt
                      (Data.OldList.intersectBy
                         @ Lecture5.Value
                         GHC.Classes.eqInt
                         (Lecture5.freeInRow w ww)
                         (Lecture5.freeInColumn w ww1))
                      (Lecture5.constraints_go
                         (Lecture5.$wsubGrid w ww ww1)
                         Lecture5.positions))
                   (Lecture5.constraints_go
                      (Lecture5.$wnrcSubGrid w ww ww1)
                      Lecture5.positions)) -}
227b26f3fcbdb3bd6fc0da31901acb37
  $wfreeAtPos' ::
    Lecture5.Sudoku
    -> Lecture5.Row
    -> Lecture5.Column
    -> Lecture5.Constrnt
    -> [Lecture5.Value]
  {- Arity: 4, Strictness: <L,C(U)><L,U><L,U><S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column)
                   (w1 :: Lecture5.Constrnt) ->
                 case GHC.List.filter
                        @ [(Lecture5.Row, Lecture5.Column)]
                        (GHC.List.elem
                           @ (Lecture5.Row, Lecture5.Column)
                           Lecture5.$s$fEq(,)
                           (ww, ww1))
                        w1 of wild {
                   [] -> Lecture5.positions
                   : ds1 ds2
                   -> letrec {
                        go1 :: [[(Lecture5.Row, Lecture5.Column)]] -> [GHC.Types.Int]
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ (ds :: [[(Lecture5.Row, Lecture5.Column)]]) ->
                          case ds of wild1 {
                            [] -> GHC.Types.[] @ GHC.Types.Int
                            : y ys
                            -> GHC.Base.++
                                 @ GHC.Types.Int
                                 (Lecture5.constraints_go
                                    (GHC.Base.map
                                       @ (Lecture5.Row, Lecture5.Column)
                                       @ GHC.Types.Int
                                       w
                                       y)
                                    Lecture5.positions)
                                 (go1 ys) }
                      } in
                      go1 wild }) -}
782ee656165d508d84bec17aaf5f9542
  $wfreeAtPositions ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 Lecture5.constraints_go1
                   (GHC.Types.:
                      @ [Lecture5.Value]
                      (Lecture5.$wfreeAtPos' w ww ww1 Lecture5.columnConstrnt)
                      (GHC.Types.:
                         @ [Lecture5.Value]
                         (Lecture5.$wfreeAtPos' w ww ww1 Lecture5.blockConstrnt)
                         (GHC.Types.:
                            @ [Lecture5.Value]
                            (Lecture5.$wfreeAtPos' w ww ww1 Lecture5.nrcConstrnt)
                            (GHC.Types.[] @ [Lecture5.Value]))))
                   (Lecture5.$wfreeAtPos' w ww ww1 Lecture5.rowConstrnt)) -}
d8f81204d59ae56cf1015cda5b77f027
  $wfreePosTest :: Lecture5.Row -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Row) (ww1 :: Lecture5.Column) ->
                 GHC.Classes.$fEq[]_$s$c==
                   (Lecture5.$wfreeAtPositions Lecture5.freePosTest1 ww ww1)
                   (Lecture5.$wfreeAtPos Lecture5.freePosTest1 ww ww1)) -}
b38c236d95b90933b4c02aff22576c43
  $wgenSudokuPositions ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Lecture5.Position
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Word#)
                   (ww2 :: GHC.Prim.Word#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 Test.QuickCheck.Gen.$wsuchThat
                   @ Lecture5.Position
                   Lecture5.genSudokuPositions3
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <(GHC.Types.Int, GHC.Types.Int)>_R))
                   Lecture5.genSudokuPositions2
                   ww
                   ww1
                   ww2
                   ww3
                   ww4) -}
0860021efc6e38b6fa80036308daca2d
  $wgenSudokuPositions1 ::
    Lecture5.Row -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Row) (ww1 :: Lecture5.Column) ->
                 case GHC.List.elem
                        @ Lecture5.Row
                        GHC.Classes.$fEqInt
                        ww
                        Lecture5.positions of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> GHC.List.elem
                        @ Lecture5.Column
                        GHC.Classes.$fEqInt
                        ww1
                        Lecture5.positions }) -}
d4120ffb2dc125b6b0713b0902ef96c2
  $wgenSudokuPositions2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Word#)
                   (ww2 :: GHC.Prim.Word#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: GHC.Types.Int) ->
                 case System.Random.TF.Gen.$wtfGenSplit
                        ww
                        ww1
                        ww2
                        ww3 of ww7 { (#,#) ww8 ww9 ->
                 case ww9 of ww4 { System.Random.TF.Gen.TFGen ww5 ww6 ww10 ww11 ww12 ww13 ->
                 case System.Random.TF.Gen.$wtfGenSplit
                        ww5
                        ww6
                        ww10
                        ww11 of ww14 { (#,#) ww15 ww16 ->
                 (# Test.QuickCheck.Arbitrary.$fArbitrary1IntMap_$sarbitrarySizedIntegral
                      ww8 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))
                      w,
                    Test.QuickCheck.Arbitrary.$fArbitrary1IntMap_$sarbitrarySizedIntegral
                      ww15 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))
                      w #) } } }) -}
6a84b4d11a0ab2ca06807fa7a2dfe1f8
  $wgrid2sud ::
    Lecture5.Grid -> GHC.Prim.Int# -> GHC.Prim.Int# -> Lecture5.Value
  {- Arity: 3, Strictness: <S,1*U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Grid)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#) ->
                 GHC.List.$w!!
                   @ Lecture5.Value
                   (GHC.List.$w!! @ [Lecture5.Value] w (GHC.Prim.-# ww 1#))
                   (GHC.Prim.-# ww1 1#)) -}
464b69a55d0f6a716458e9e1e4ce6778
  $wgrow ::
    (node -> [node]) -> node -> (# node, [Lecture5.Tree node] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><L,U>,
     Inline: [0] -}
5d43d0e49a29737f29ad6a6457764ea0
  $wlength3rd :: [c] -> [c] -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a @ b @ c (ww :: [c]) (ww1 :: [c]) ->
                 case GHC.List.$wlenAcc @ c ww 0# of ww2 { DEFAULT ->
                 case GHC.List.$wlenAcc @ c ww1 0# of ww3 { DEFAULT ->
                 case GHC.Prim.<# ww2 ww3 of lwild {
                   DEFAULT
                   -> case GHC.Prim.==# ww2 ww3 of lwild1 {
                        DEFAULT -> GHC.Types.GT 1# -> GHC.Types.EQ }
                   1# -> GHC.Types.LT } } }) -}
15e149551bc8d3d37339c1627546084d
  $wnrcSameBlock ::
    GHC.Prim.Int#
    -> Lecture5.Column
    -> Lecture5.Row
    -> Lecture5.Column
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <S,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: Lecture5.Row)
                   (ww3 :: Lecture5.Column) ->
                 case ww of wild {
                   DEFAULT
                   -> case ww1 of wild1 { GHC.Types.I# x ->
                      case x of wild2 {
                        DEFAULT
                        -> case ww2 of wild3 { GHC.Types.I# x1 ->
                           case x1 of wild4 {
                             DEFAULT
                             -> case ww3 of wild5 { GHC.Types.I# x2 ->
                                case x2 of wild6 {
                                  DEFAULT
                                  -> case GHC.Classes.$fEq[]_$s$c==
                                            (Lecture5.nrcBl (GHC.Types.I# wild))
                                            (Lecture5.nrcBl wild3) of wild7 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.$fEq[]_$s$c==
                                            (Lecture5.nrcBl wild1)
                                            (Lecture5.nrcBl wild5) }
                                  1# -> GHC.Types.False
                                  5# -> GHC.Types.False
                                  9# -> GHC.Types.False } }
                             1# -> GHC.Types.False
                             5# -> GHC.Types.False
                             9# -> GHC.Types.False } }
                        1# -> GHC.Types.False
                        5# -> GHC.Types.False
                        9# -> GHC.Types.False } }
                   1# -> GHC.Types.False
                   5# -> GHC.Types.False
                   9# -> GHC.Types.False }) -}
92a34c92d64daa54ca7d9e8c5a42502c
  $wnrcSubGrid ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   lvl13 :: [GHC.Types.Int] = Lecture5.nrcBl ww1
                 } in
                 letrec {
                   go1 :: [GHC.Types.Int] -> [Lecture5.Value]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Value
                       : y ys
                       -> let {
                            z :: [Lecture5.Value] = go1 ys
                          } in
                          letrec {
                            go2 :: [GHC.Types.Int] -> [Lecture5.Value]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1 -> GHC.Types.: @ Lecture5.Value (w (y, y1)) (go2 ys1) }
                          } in
                          go2 lvl13 }
                 } in
                 go1 (Lecture5.nrcBl ww)) -}
e37db9ede8930f67ef6dc85114e7ed40
  $wnrcSubgridInjective ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   xs :: [Lecture5.Value]
                   = GHC.List.filter
                       @ GHC.Types.Int
                       Lecture5.consistent4
                       (Lecture5.$wnrcSubGrid w ww ww1)
                 } in
                 GHC.Classes.$fEq[]_$s$c==
                   (Data.OldList.nubBy @ Lecture5.Value GHC.Classes.eqInt xs)
                   xs) -}
3a2cd432bf45848657886c370c8332e0
  $wrsuccNode ::
    Lecture5.Sudoku
    -> [Lecture5.Constraint]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 3, Strictness: <L,C(U)><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Sudoku)
                   (ww1 :: [Lecture5.Constraint])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genRandomSudoku7 ww1 w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> (# ipv, GHC.Types.[] @ Lecture5.Node #)
                   : ds2 ds3
                   -> (# ipv,
                         case ds2 of ww2 { (,,) ww3 ww4 ww5 ->
                         Lecture5.$wextendNode
                           ww
                           (Lecture5.genRandomSudoku_go wild ww1)
                           ww3
                           ww4
                           ww5 } #) } }) -}
79ce52c6cc42100fb60c5791c19b5c2b
  $wsameBlock ::
    Lecture5.Row
    -> Lecture5.Column
    -> Lecture5.Row
    -> Lecture5.Column
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: Lecture5.Row)
                   (ww3 :: Lecture5.Column) ->
                 case GHC.Classes.$fEq[]_$s$c==
                        (Lecture5.bl ww)
                        (Lecture5.bl ww2) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> GHC.Classes.$fEq[]_$s$c==
                        (Lecture5.bl ww1)
                        (Lecture5.bl ww3) }) -}
390def26b60683e5365fc9575050ba0b
  $wsameLen :: [Lecture5.Value] -> [Lecture5.Value] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: [Lecture5.Value]) (ww1 :: [Lecture5.Value]) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Int ww 0# of ww2 { DEFAULT ->
                 case GHC.List.$wlenAcc @ GHC.Types.Int ww1 0# of ww3 { DEFAULT ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# ww2 ww3) } }) -}
730b36c29b3d67b54cc0bc775e99e985
  $wshowVal :: GHC.Prim.Int# -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             ds
                             (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                      GHC.Types.: @ GHC.Types.Char ww5 ww6 }
                   0# -> Lecture5.showVal1 }) -}
1b034d0f52071951f52f48408eaf0071
  $wsubGrid ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   lvl13 :: [GHC.Types.Int] = Lecture5.bl ww1
                 } in
                 letrec {
                   go1 :: [GHC.Types.Int] -> [Lecture5.Value]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Value
                       : y ys
                       -> let {
                            z :: [Lecture5.Value] = go1 ys
                          } in
                          letrec {
                            go2 :: [GHC.Types.Int] -> [Lecture5.Value]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1 -> GHC.Types.: @ Lecture5.Value (w (y, y1)) (go2 ys1) }
                          } in
                          go2 lvl13 }
                 } in
                 go1 (Lecture5.bl ww)) -}
445b8566a6036d509d2c557f163d8161
  $wsubgridInjective ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   xs :: [Lecture5.Value]
                   = GHC.List.filter
                       @ GHC.Types.Int
                       Lecture5.consistent4
                       (Lecture5.$wsubGrid w ww ww1)
                 } in
                 GHC.Classes.$fEq[]_$s$c==
                   (Data.OldList.nubBy @ Lecture5.Value GHC.Classes.eqInt xs)
                   xs) -}
18e58c86bc85ab5e3336588e2792c4eb
  $wtakeT ::
    GHC.Prim.Int#
    -> a -> [Lecture5.Tree a] -> (# a, [Lecture5.Tree a] #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U><L,1*U>,
     Inline: [0] -}
25d8bbb1961346a4d762b1b6fee64a1d
  type Column = GHC.Types.Int
f40e8d607585c1f0789630ff340aa80f
  type Constraint = (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
1d25a9f0a3710cc8e8f5395b8d8bdfaf
  type Constrnt = [[Lecture5.Position]]
9c0b60f99140a33c30cbff75b8488d1a
  type Grid = [[Lecture5.Value]]
cc584e322355f8115508dfa59b7192df
  type Node = (Lecture5.Sudoku, [Lecture5.Constraint])
a431caf604fb347e136a0d3c8fb3a69b
  type Position = (Lecture5.Row, Lecture5.Column)
8b54be91e21ace619aafd6de10418606
  type Row = GHC.Types.Int
977d8c5f5b671a22c8332a134939329e
  type Sudoku = (Lecture5.Row, Lecture5.Column) -> Lecture5.Value
d08eed8db65524a395f0f0bfb83d73e2
  data Tree a = T a [Lecture5.Tree a]
1b11e40a7ce70e3c8b21fbe0dfea5a4f
  type Value = GHC.Types.Int
853461b03b9a6055bbb0683d192be88a
  bl :: GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 letrec {
                   go1 :: [[GHC.Types.Int]] -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [[GHC.Types.Int]]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Int
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Int
                                 GHC.Classes.$fEqInt
                                 x
                                 y of wild1 {
                            GHC.Types.False -> go1 ys
                            GHC.Types.True -> GHC.Base.++ @ GHC.Types.Int y (go1 ys) } }
                 } in
                 go1 Lecture5.blocks) -}
5fdce49433dc3d936cd6e99e7318609b
  blockConstrnt :: [[Lecture5.Position]]
  {- Unfolding: (case Lecture5.$wc
                        Lecture5.blockConstrnt2
                        Lecture5.blockConstrnt1 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.: @ [Lecture5.Position] ww1 ww2 }) -}
00489c7afcabcf89b66cf91d088944ba
  blockConstrnt1 :: [[Lecture5.Position]]
  {- Unfolding: (Lecture5.blockConstrnt_go_up 4#) -}
43561107e4375585aac9cfb97258a60c
  blockConstrnt2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
58651205f45a726deb7b79649b59a7fd
  blockConstrnt3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
695438ac32bf0ccd0c96915e8c2cdd55
  blockConstrnt_go_up :: GHC.Prim.Int# -> [[Lecture5.Position]]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>m2 -}
ef3792ea5e60da6c4e30264dfad8a8c6
  blocks :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.blocks5
                   Lecture5.blocks1) -}
da14f1646ffc1de6a9f4ef26f9d4935e
  blocks1 :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.blocks4
                   Lecture5.blocks2) -}
3f18cbf36293c0c00e26595c64d4712a
  blocks2 :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.blocks3
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
323b7418bb7b73ef010750e191e747bf
  blocks3 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 7# 9#) -}
0cb483d416bf3ef01a39acb3d513c3ef
  blocks4 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 4# 6#) -}
2da786eedc8bbdd21c2e558d6d32a5a9
  blocks5 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1# 3#) -}
8ff779d28e83be271e44c8903ef3e732
  colInjective ::
    Lecture5.Sudoku -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,C(U(U))><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (c :: Lecture5.Column) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Int
                       : y ys
                       -> case s (y, c) of wild1 { GHC.Types.I# x ->
                          case x of wild2 {
                            DEFAULT -> GHC.Types.: @ GHC.Types.Int wild1 (go1 ys)
                            0# -> go1 ys } } }
                 } in
                 let {
                   xs :: [Lecture5.Value] = go1 Lecture5.positions
                 } in
                 GHC.Classes.$fEq[]_$s$c==
                   (Data.OldList.nubBy @ Lecture5.Value GHC.Classes.eqInt xs)
                   xs) -}
f9a0fbefe2ec471d2d5feab0bc0d53c2
  columnConstrnt :: [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Unfolding: (Lecture5.columnConstrnt_go Lecture5.positions) -}
1be4b7d2582d80095f6f7713389895d4
  columnConstrnt_go ::
    [GHC.Types.Int] -> [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Arity: 1, Strictness: <S,1*U> -}
156698efd20e7156180f1b7772755876
  consistent :: Lecture5.Sudoku -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,C(U(U))>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.consistent1
                  `cast`
                (<Lecture5.Sudoku>_R ->_R Data.Semigroup.Internal.N:All[0]) -}
9fa0299f8f45e8126bd5ff69e1f35a06
  consistent1 :: Lecture5.Sudoku -> Data.Semigroup.Internal.All
  {- Arity: 1, Strictness: <L,C(U(U))>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 let {
                   z :: Data.Semigroup.Internal.All <join 0>
                   = let {
                       exit :: Data.Semigroup.Internal.All <join 0>
                       = let {
                           c :: Lecture5.Row -> Data.Semigroup.Internal.All -> GHC.Types.Bool
                             {- Arity: 2, Strictness: <L,U><L,1*U> -}
                           = \ (ds :: Lecture5.Row)
                               (ds1 :: Data.Semigroup.Internal.All)[OneShot] ->
                             case Lecture5.$wsubgridInjective
                                    s
                                    ds
                                    Lecture5.blockConstrnt2 of wild {
                               GHC.Types.False -> GHC.Types.False
                               GHC.Types.True
                               -> case Lecture5.$wsubgridInjective
                                         s
                                         ds
                                         Lecture5.consistent6 of wild1 {
                                    GHC.Types.False -> GHC.Types.False
                                    GHC.Types.True
                                    -> case Lecture5.$wsubgridInjective
                                              s
                                              ds
                                              Lecture5.consistent5 of wild2 {
                                         GHC.Types.False -> GHC.Types.False
                                         GHC.Types.True
                                         -> ds1 `cast` (Data.Semigroup.Internal.N:All[0]) } } }
                         } in
                         (c Lecture5.blockConstrnt2
                            (c Lecture5.consistent6
                               (c Lecture5.consistent5
                                  (case Lecture5.$wnrcSubgridInjective
                                          s
                                          Lecture5.consistent3
                                          Lecture5.consistent3 of wild {
                                     GHC.Types.False
                                     -> GHC.Types.False
                                          `cast`
                                        (Sym (Data.Semigroup.Internal.N:All[0]))
                                     GHC.Types.True
                                     -> case Lecture5.$wnrcSubgridInjective
                                               s
                                               Lecture5.consistent3
                                               Lecture5.consistent2 of wild1 {
                                          GHC.Types.False
                                          -> GHC.Types.False
                                               `cast`
                                             (Sym (Data.Semigroup.Internal.N:All[0]))
                                          GHC.Types.True
                                          -> case Lecture5.$wnrcSubgridInjective
                                                    s
                                                    Lecture5.consistent2
                                                    Lecture5.consistent3 of wild2 {
                                               GHC.Types.False
                                               -> GHC.Types.False
                                                    `cast`
                                                  (Sym (Data.Semigroup.Internal.N:All[0]))
                                               GHC.Types.True
                                               -> (Lecture5.$wnrcSubgridInjective
                                                     s
                                                     Lecture5.consistent2
                                                     Lecture5.consistent2)
                                                    `cast`
                                                  (Sym (Data.Semigroup.Internal.N:All[0])) } } }))
                                 `cast`
                               (Sym (Data.Semigroup.Internal.N:All[0])))
                              `cast`
                            (Sym (Data.Semigroup.Internal.N:All[0])))
                           `cast`
                         (Sym (Data.Semigroup.Internal.N:All[0]))
                     } in
                     letrec {
                       go1 :: [GHC.Types.Int] -> Data.Semigroup.Internal.All
                         <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                       = \ (ds :: [GHC.Types.Int]) ->
                         case ds of wild {
                           [] -> exit
                           : y ys
                           -> case Lecture5.colInjective s y of wild1 {
                                GHC.Types.False
                                -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                                GHC.Types.True -> go1 ys } }
                     } in
                     go1 Lecture5.positions
                 } in
                 letrec {
                   go1 :: [GHC.Types.Int] -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> z
                       : y ys
                       -> case Lecture5.rowInjective s y of wild1 {
                            GHC.Types.False
                            -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                            GHC.Types.True -> go1 ys } }
                 } in
                 go1 Lecture5.positions) -}
5fc829d6ec6f77b45e7f36f7adf6b061
  consistent2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
5b13b59cdba3a71a2885d4d487db838b
  consistent3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
0a0b70ee722b4d188117b0df39035d45
  consistent4 :: Lecture5.Value -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lecture5.Value) ->
                 case ds of wild { GHC.Types.I# x ->
                 case x of wild1 {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } }) -}
049ea4afcc8a413d7b82b23d31b473b0
  consistent5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
14904b55e50f1b82f78e9bf5a91532aa
  consistent6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
ad22e7e04f305feee9ae2e1887079015
  constraints :: Lecture5.Sudoku -> [Lecture5.Constraint]
  {- Arity: 1, Strictness: <L,C(U(U))>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 letrec {
                   go1 :: [(Lecture5.Row, Lecture5.Column)]
                          -> [(Lecture5.Row, Lecture5.Column, [Lecture5.Value])]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [(Lecture5.Row, Lecture5.Column)]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.[] @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                       : y ys
                       -> case y of wild1 { (,) r c ->
                          GHC.Types.:
                            @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                            (r, c, Lecture5.$wfreeAtPositions s r c)
                            (go1 ys) } }
                 } in
                 Data.OldList.sortBy
                   @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                   (Lecture5.length3rd
                      @ Lecture5.Row
                      @ Lecture5.Column
                      @ Lecture5.Value)
                   (go1 (Lecture5.openPositions s))) -}
1f55a819339f809e9d8dbab5cd71cd35
  constraints_go ::
    [GHC.Types.Int] -> [GHC.Types.Int] -> [Lecture5.Value]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
7f87d990aba441acf7afd72a3be60f62
  constraints_go1 ::
    [[Lecture5.Value]] -> [Lecture5.Value] -> [Lecture5.Value]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
5744f9418de78c92524b1a5b0f228f33
  count :: Lecture5.Tree a -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: Lecture5.Tree a) ->
                 case w of ww { Lecture5.T ww1 ww2 ->
                 case Lecture5.count1 @ a ww2 0# of ww3 { DEFAULT ->
                 GHC.Types.I# ww3 } }) -}
88a247c277145d10cc72f35a96704c7b
  count1 :: [Lecture5.Tree a] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
a804c64eb342ccc245ad711128a2567e
  createBlock ::
    Lecture5.Position
    -> (GHC.Types.Int, GHC.Types.Int) -> [Lecture5.Position]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),U(U))><S(S(S)L),1*U(1*U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Position)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Lecture5.$wcreateBlock ww4 ww2 ww9 ww7 } } } }) -}
aec25175686cb0d4716ef48baf5bfd88
  emptyN :: Lecture5.Node
  {- Strictness: m,
     Unfolding: ((Lecture5.emptyN2, Lecture5.emptyN1)) -}
9401916daa699094cbfc7efb215fdd1a
  emptyN1 :: [Lecture5.Constraint]
  {- Unfolding: (Lecture5.constraints Lecture5.emptyN2) -}
77c22a187f55150aef674b518fa8abae
  emptyN2 :: (Lecture5.Row, Lecture5.Column) -> Lecture5.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: (Lecture5.Row, Lecture5.Column)) ->
                 Lecture5.$fShowTree1) -}
7df98a0c45b0f66f2025ff34ae57b7c7
  eraseN ::
    Lecture5.Node -> (Lecture5.Row, Lecture5.Column) -> Lecture5.Node
  {- Arity: 2, Strictness: <L,U(C(U(U)),A)><S,1*U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Node) (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case Lecture5.$weraseN w ww1 ww2 of ww3 { (#,#) ww4 ww5 ->
                 (ww4, ww5) } }) -}
7e31eb75ab093f94247a8edf70a6824f
  eraseS ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> Lecture5.Sudoku
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U(U))><S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column))
                   (w2 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w2 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Lecture5.$weraseS w ww4 ww2 ww9 ww7 } } } }) -}
327e3ab5c158ada322c3d2c03c104c06
  example1 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example88
                   Lecture5.example7) -}
82efe3eae921c29c5eafd9b3566ced8f
  example10 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example54
                   Lecture5.example11) -}
51948466dd4b87f63071f61f8c67a3fd
  example100 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example115
                   Lecture5.example101) -}
4d25ff858757f9cfa4d1f4161080b72f
  example101 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example110
                   Lecture5.example102) -}
d64bb8b42aa63d62442e0384d50cfa47
  example102 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example103
                   (GHC.Types.[] @ [Lecture5.Value])) -}
b1eef162a3f9ae51d456cbfc958e975d
  example103 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example104) -}
58a96f1d8e8aa73b307258d5da67a1df
  example104 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   Lecture5.example105) -}
3ce7aa8e1256b13fb01be54bfe38f9fc
  example105 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example106) -}
92025abb1c9148cf7a49c0dafb0e132c
  example106 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example107) -}
4fc0aa4e75b42cf698e616b083947444
  example107 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example108) -}
1ddf084dfcfc6959413aee17180f36e2
  example108 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example109) -}
d864f7bcf781057434c93bc38f121ca2
  example109 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example87) -}
a0d9a38406586c42ec7911bf93b3506d
  example11 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example45
                   Lecture5.example12) -}
14d04fb437442bebcd71f9efcef6f996
  example110 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example111) -}
3516d16cc2dedd72660bad1dfb6fe2b3
  example111 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example112) -}
bb84dc415085995312bc5ce683195089
  example112 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example113) -}
2513f3d909df9d128c5068fb0a86b643
  example113 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example114) -}
961fac60f4052023ba46aee736c0440f
  example114 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example93) -}
7014d4a1c604a633cb5d20f8d158c9d6
  example115 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example116) -}
6fe74d73bc3c2452bdea07a8d8bf480c
  example116 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example117) -}
46f2c2cbac72d91f3354a7cdbf6c2c9e
  example117 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.example118) -}
e9d4193a5c8727ea0717942a370cad8d
  example118 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   Lecture5.example92) -}
bf263afd3eb555ffcb7a8ba9f1e54bfc
  example119 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example120) -}
efe3d2f6728435352c293205b8490f5c
  example12 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example36
                   Lecture5.example13) -}
3e5dab1c4becea1027325b52612690ca
  example120 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example121) -}
cec8b5238d89e2c5679c407331142873
  example121 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example122) -}
dbc4e4c3a5b1fea962f88c324355f92a
  example122 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example123) -}
ca7b19d35952e88eb1bf42798f717636
  example123 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example124) -}
ccc89ce432e1261c63677355834a64c0
  example124 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.example78) -}
6e19e2593a6470c94e6fc45d48c6c929
  example125 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example126) -}
457558faac6068c7914c0fe4b4d27b37
  example126 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example127) -}
0002887ae7a891faf9c625898bb19af0
  example127 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example128) -}
54a43eacdfbe24023434a2c5b9846164
  example128 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example129) -}
a7756f65c59fef3979d75d8fa23dca74
  example129 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example130) -}
706432c59be487b993410fc470019cb9
  example13 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example26
                   Lecture5.example14) -}
0b272ac002625538a73fffc991d0d8f5
  example130 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example131) -}
614225c9294f206333c06a8b6bc4e231
  example131 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example132) -}
401ea753d1b8545db127ed96e13f1be5
  example132 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example133) -}
c2cf0f410b56af4c6d87155ae446975a
  example133 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   (GHC.Types.[] @ Lecture5.Value)) -}
80069314ade5b1e2f849d372445850d8
  example134 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example135) -}
672d6ad551dc15c4bf6bf83237501bf8
  example135 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example136) -}
e1a522e268f4a05b96e411af32b7f920
  example136 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example137) -}
5726d4530e6985371fdc5128d5563b78
  example137 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example138) -}
e14116d7f0f5bf8fffb4f661efd64318
  example138 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example139) -}
ee485c95ffb5a7436a3ee21261513e70
  example139 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example140) -}
88ff8a5af17b0d9fec3546ea04baa00b
  example14 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example15
                   (GHC.Types.[] @ [Lecture5.Value])) -}
fc3f17934a9fedf47d27a0f7ef711592
  example140 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example141) -}
92b9f88f026da70a2d52a88bef8eede5
  example141 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example44) -}
277a5e8c3657dbd3c6d6d6ccfc096477
  example142 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example143) -}
a3b5408c65f1fb5ce20d49c89b3b122c
  example143 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example144) -}
1cb66c0473f77e15cc32c900305ba87f
  example144 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example145) -}
e497b4dd731a80a9901bed53ef7344d3
  example145 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example146) -}
025751d70414815833bf3471eb96998c
  example146 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example147) -}
1733522c519bbb37558f18102496c094
  example147 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example148) -}
64b611dc917939d25a7388424d290413
  example148 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example149) -}
27e26ed3f7f3e92b27a5db68823d4de1
  example149 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example150) -}
670641d5c3c71fc8baaa5680027687bc
  example15 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example16) -}
399bc92497154849539efea07fe1fd99
  example150 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   (GHC.Types.[] @ Lecture5.Value)) -}
dbe31a22a3ae1ec89c7526a69c8531af
  example151 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example152) -}
6e1058264d64340eb7a955b6bedf7b8f
  example152 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example153) -}
acca2f16aa6f8551d32774d39c733862
  example153 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example154) -}
e25148ee5f773d5e9ccb1bb24fb628e4
  example154 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example155) -}
b663a6e99bcd13af4a1d377ca4a9b860
  example155 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example68) -}
36c95470e5a0327d2c5122b86d79a99a
  example156 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.example157) -}
ef063000d4694b2e93e56420bd5ee4d5
  example157 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example158) -}
64ae423dfac6db463fdfbc43cd58e2bd
  example158 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example159) -}
304174d0be056c55ac2a3228313138c1
  example159 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example160) -}
72c1fb2a10ad09a5972a2a0ed910cd7a
  example16 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example17) -}
356c176691c031cf7a311bc304b31131
  example160 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example161) -}
79ad68ad2e49838d3bfbd24e0c004217
  example161 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example162) -}
36dff3ae8cf44c44d105d6fce3cb923d
  example162 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example163) -}
e8c57bd2bd8fdd70ab5f5710836a5e41
  example163 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example164) -}
ee14f85753ac63174de5e5bc8ab4a92f
  example164 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   (GHC.Types.[] @ Lecture5.Value)) -}
1ceebee7b8ff47d09441bb9a0e25346b
  example165 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example183
                   Lecture5.example166) -}
88e4fabfa88bfbab4591165409583d9e
  example166 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example182
                   Lecture5.example167) -}
7f7bdb028170b1abe589d34b11cd5c34
  example167 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example181
                   Lecture5.example168) -}
1403907698f71f47aa5dcb9df642cf92
  example168 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example180
                   Lecture5.example169) -}
82c2f9b163775624c04bef8aa87efc8d
  example169 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example179
                   Lecture5.example170) -}
79b7438fb452eeed0da0303b6f8ae2e2
  example17 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example18) -}
200850a9fb669eeab667297212c67433
  example170 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example178
                   Lecture5.example171) -}
10562dd4f84ebcc1fdf47069f61ca413
  example171 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example177
                   Lecture5.example172) -}
850d2b22c3be906207c85460a8ea3a6e
  example172 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example173
                   (GHC.Types.[] @ [Lecture5.Value])) -}
6c251360297e17905fb4806791bba641
  example173 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example174) -}
bef6eefa000975149e7a25f7a0578743
  example174 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example175) -}
38740a8c43c89ed8c0130374aafb4f24
  example175 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example176) -}
b868629bc9e79de53098cd9a3fc4af22
  example176 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example114) -}
36c9fcc81bbcab972440b9a74982f60e
  example177 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example174) -}
f2aff3e0ceda9783f076d728c8a3d74a
  example178 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example174) -}
2ee6f345540dc738d1079f5cefeb1e40
  example179 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.example174) -}
d8e66c434e8dd14c0c603e8a569c5332
  example18 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example19) -}
dc68abcfcc1399d14874ed23e68f0c81
  example180 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example174) -}
dffcf57a0786b6c52388dedb0a8be9de
  example181 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   Lecture5.example174) -}
043dc268bd51b7ad7fe567f650812953
  example182 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example174) -}
9821d05433a04febb7d1d9620a753602
  example183 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example174) -}
614b18471c519dd9be6655fd7fbaadf2
  example184 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.example185) -}
a005e12feeae58611da1a7611c893e56
  example185 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example186) -}
ffc608cf6cf04730003ddc5c47a92532
  example186 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example187) -}
f0b22e584ebf6002ca5363e588f60f10
  example187 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   Lecture5.example188) -}
f74bf7ff6c16514f5fb2b0bf61744cf1
  example188 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example189) -}
df8db0ef9c8b7ede868e04a35c7595db
  example189 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.example190) -}
87ccd0160983cba5e63342e629afbd89
  example19 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example20) -}
994be455912a3ce4aa816b43ab5fb34b
  example190 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example191) -}
35beb6ea6d9e7c1d09d99ea111617b6c
  example191 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example23) -}
e1459b0ca84bea75ef92354f229d0d55
  example192 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example239
                   Lecture5.example193) -}
53e5c030a2d22205fdc2ae65ca795058
  example193 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example236
                   Lecture5.example194) -}
72e7a80b87d1a46cbab9608e34b6aa50
  example194 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example232
                   Lecture5.example195) -}
13e2e095ebff2633d8d323d6737f959b
  example195 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example227
                   Lecture5.example196) -}
b1a40acbc40e7281e6a0d324ff71cfc2
  example196 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example221
                   Lecture5.example197) -}
c54e358250df6f3e04b5e6c00985d473
  example197 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example215
                   Lecture5.example198) -}
c0d7f4bf2add08d5c3bb8ab002375edf
  example198 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example208
                   Lecture5.example199) -}
e977d24c63a8a5d6c0e79eda9d72e9d8
  example199 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example200
                   (GHC.Types.[] @ [Lecture5.Value])) -}
512524e5d497d7835ac816aa15b35a7e
  example2 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example94
                   Lecture5.example7) -}
cfe94bd51f3c758d155cf600ea4ffedc
  example20 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example21) -}
5524f9fd0d4d6eda24a31e1eb032dd03
  example200 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example201) -}
84c74d6e4190827fa4fc1ae5cbd8d05d
  example201 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example202) -}
0067b0dbd733e8fa24474c2becee66f9
  example202 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example203) -}
a6b544c5a9cebe9e40ce0d7c827256b0
  example203 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example204) -}
1453c2861322e097733e14a6f7cbf792
  example204 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example205) -}
2faa70f9f4848449e7a4b50f95aefd24
  example205 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example206) -}
f4ac49bd371332ab7c0aa71c7f43126f
  example206 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example207) -}
dfd01030cc46284d33c7953a0729987e
  example207 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example23) -}
b63b0b43ca80343a95e4cb1417fdc356
  example208 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example209) -}
1a8ec578ca9bdf32ca63dd2e9769be7f
  example209 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example210) -}
98ab45217b866b9797af0df1910cf77d
  example21 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example22) -}
4fada279ccfa5e62176bbfaed50c3557
  example210 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example211) -}
98ce933ec93bfc7ce655628310595846
  example211 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example212) -}
150dc4d7f0d4dd8b300bf642f879d28a
  example212 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example213) -}
2de715dfdb5b964284be9d22b2d82da4
  example213 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example214) -}
793712c876460db4c54b87ae88d5179c
  example214 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example43) -}
1cb776e0dacbef475ee6697c45d62970
  example215 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example216) -}
b5299bb446224930f76cbe3ac3a28807
  example216 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example217) -}
f747d2600b6b84ddaf8ed2a086721752
  example217 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example218) -}
3bbc63db01e63a2cbc8a79129986b526
  example218 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example219) -}
f1f52973ad62b1c0095dda3cfd764950
  example219 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example220) -}
c5bb7fd3240c34ae7ce13f27a2ca866d
  example22 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example23) -}
49862dde34cb865e104ba63610d48b86
  example220 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example109) -}
3507a8aa3127317cb5c22886a29cc687
  example221 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example222) -}
0c97a5e8debd40f978b890a118639e47
  example222 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example223) -}
85a28e82dc1db8c2ff2906d4a7088e45
  example223 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example224) -}
ff4e17cdcdfc659ff0d738aebaebc584
  example224 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example225) -}
e346924db12d2344d35051c5822086a7
  example225 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example226) -}
c626c46da7ba003286d61b08dcbccc64
  example226 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.example86) -}
50ac75c3409d9ab9323082f46b5111b9
  example227 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example228) -}
ba84454284cdc403428b5dfa17c2b6b6
  example228 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example229) -}
1bed9eaa1d985436faab0b1c0cfd6841
  example229 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example230) -}
5a7f2c9eba95f0bf7baac1f619831e72
  example23 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   (GHC.Types.[] @ Lecture5.Value)) -}
f5d60b7c735c6a84bd4364bede038195
  example230 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example231) -}
b2e166788440bbf61f8233fca6a4ba81
  example231 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example93) -}
79860f2aeba09290b12b1c3cf028b33b
  example232 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example233) -}
a600159107f28f2496de2c9b7efb01ca
  example233 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example234) -}
bac5c2546b1d4bbc091e5b63a36d11e2
  example234 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example235) -}
d9dbd2b99d0038567a912e9572398233
  example235 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   Lecture5.example114) -}
cba5fa2a62469f8fbcc24508e928e07c
  example236 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example237) -}
5a66fbdc29772e59f2d3c2b5c257cb94
  example237 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example238) -}
3df862dafa39d5bfb1d6e874c65c2533
  example238 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example176) -}
57bf77e819905f75b93d3cd4f2da5aec
  example239 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example240) -}
eb9969cdc31bcce210351dfaf750fc60
  example24 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 9#) -}
c64d1fc061728e6cb138c03145d48251
  example240 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example175) -}
9f180c1f95e23c5093180cb587706267
  example241 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.example174) -}
996171cd9c6d53436c8a38c166f2bde0
  example25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
7db41776c6755bc3d9e244dc2f1ca752
  example26 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example27) -}
b79c315e589f61352ad7214025ad80f6
  example27 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example28) -}
d0800bb2abd181faadd5e9a0202e2036
  example28 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example29) -}
655b3cf297302f2952b23a0841281082
  example29 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   Lecture5.example30) -}
e355f3185cc9a7c87d76a1428c24b351
  example3 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example156
                   Lecture5.example95) -}
1462db0e3c0ffbf363a71b5feb63651f
  example30 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.example31) -}
bb4f042b687737a57ecff64f7db54d5d
  example31 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example32) -}
3af198d1acab0007cc7bb706b485e78b
  example32 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example33) -}
59b1b6b76d6f9ad41be02820d86635d9
  example33 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example34) -}
b89bc0cc764afd91df784b96fc859e29
  example34 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   (GHC.Types.[] @ Lecture5.Value)) -}
1cf4b0ff7b522bb0452e7ec0b40e828f
  example35 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
a5e2029b571f5b0ee79efa0a7bf46704
  example36 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example37) -}
e971fdb06d98512c69ff4fb1c6683f18
  example37 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.example38) -}
34b8ab19fb66c45f7640a9771576ede4
  example38 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example39) -}
273474684df71c896bc4c6d9f92445e9
  example39 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example40) -}
af129966a59335c37a565f5d422ffc44
  example4 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example184
                   Lecture5.example165) -}
e44998db97a283f97274bf9421904c6c
  example40 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example41) -}
647c0d374cfdf19dadaab6777b2ea877
  example41 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example42) -}
a59601c3a6694251be37173355ed423e
  example42 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example43) -}
a0e7fbab809abf64c7fd46490a25aea9
  example43 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example44) -}
85c582674dca755fb32ad56e6271ba0e
  example44 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   (GHC.Types.[] @ Lecture5.Value)) -}
1eab703841fdb98fdd160b7a1c98a475
  example45 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example46) -}
2a8254f91f2d6ecb9121ab04984169e3
  example46 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example47) -}
6ae5fec7a3d26d45d7cd4f58244cd01b
  example47 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example48) -}
bd26433b40728d84f5cb7dfeb71b9806
  example48 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example49) -}
e3a12fb82bec047ed5eb0b07a71bea24
  example49 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example50) -}
8a4f15e8bb07d173e68d3a62255cf90f
  example5 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example241
                   Lecture5.example192) -}
70b39a9cabc63aa29ae23e1454857c41
  example50 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example51) -}
289467fa88e6edd7a1550ac6824d2ec5
  example51 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example52) -}
543e518dacfb3e52c07b1304804ce83d
  example52 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example53) -}
9d681dd39497880f4dfb0390cd5e9b5f
  example53 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   (GHC.Types.[] @ Lecture5.Value)) -}
18718a9ec28ff2df5dc893dac8fd046e
  example54 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   Lecture5.example55) -}
0fd71956c268e2d1bbee091429465b74
  example55 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example56) -}
64d1daa6490eba96e310563ebef7e87c
  example56 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example57) -}
3414ac58dce17648759abc14c2b400a5
  example57 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example58) -}
c3d7affcf6e97af855fff5ff1a8ef467
  example58 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example59) -}
48347943499045352d5551cb412d615b
  example59 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example60) -}
64a7f736458d9e38e1d6ff580387283f
  example60 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example61) -}
7ddefe677c2353c6a6c25c7c4fec00c1
  example61 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example62) -}
174c86862fd1cdd1475b72f95746e81c
  example62 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   (GHC.Types.[] @ Lecture5.Value)) -}
d71037e3fef3a8446d013907438140e8
  example63 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example64) -}
c238f71a7da6b6c5bb5f983916f9ad7b
  example64 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example65) -}
a3cbfec5cb873ea0a136b96ebf58c7bb
  example65 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example66) -}
a78707eb8071ac966d560e459628b7de
  example66 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example67) -}
4125cd4e75c928eafe8b9e26fc0c7fdb
  example67 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.example68) -}
63b40c79d35b174a7774f91715321bc0
  example68 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example69) -}
a0e7cbb618c9e41f11b368bf8c05ed27
  example69 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example70) -}
5b2fc1015991af20d7ee87db48115af1
  example7 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example80
                   Lecture5.example8) -}
593261ec0a804c322175c23faa07d79a
  example70 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example71) -}
c208747b800bca8adfaf7af2ef7a6401
  example71 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   (GHC.Types.[] @ Lecture5.Value)) -}
6d8fa346645918492748bbccb338e508
  example72 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example73) -}
aad5026da515fe6aff6003ceb83aeabb
  example73 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example74) -}
eb9bc2a0f50798884459b94e0e3f14a4
  example74 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example75) -}
c359f66590c203473c865b245eb12bba
  example75 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example76) -}
dd7a2816622b19782ff971e0df985f95
  example76 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example77) -}
9731873dfd5b8fb151c8cd068514d647
  example77 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example78) -}
b3e8873d4b7d1becfbfad8b7ef66dfb4
  example78 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example79) -}
d8762281bbb5438cc0fceac0e9fe698e
  example79 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.example44) -}
0838bfe22cd8a1fa3f506f0eea053267
  example8 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example72
                   Lecture5.example9) -}
461883766c8c9bd062be12fc36901ac3
  example80 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.example81) -}
85df5626526b43870aafc6abc9cdc86e
  example81 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example82) -}
8ea65570b0216f4390247f55e78d88fe
  example82 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example83) -}
e90034ed350bb69bba26d4ece7f27465
  example83 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.example84) -}
cc0f64d6ddab1c81092377bf75f3b6f1
  example84 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example85) -}
ee0ad4f136528302b30c1889941be06c
  example85 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example86) -}
7e9b67ddbda5d275a28b5133388ba91e
  example86 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example87) -}
a87900269f2bcc632c91df52540b66ca
  example87 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example44) -}
434f12fbcaa6c067be32a785f2781e07
  example88 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example89) -}
fdf3b18c8b5013678c47d88344a73b71
  example89 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example90) -}
7a479e456303d53fc939841be603867c
  example9 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example63
                   Lecture5.example10) -}
50266820fb396728139894354c879cdd
  example90 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example91) -}
53481e6e7ef9aed52f9dd7bd1f8f401d
  example91 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example92) -}
3fc0092543ff028660239d9638eb8f72
  example92 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example93) -}
f6c80b3a0506fdc989231bb63da77827
  example93 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example86) -}
64e90a3ef43f54ba0e0dd44f94b47a3d
  example94 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example89) -}
6b3473526fc85e1010a87efbea8a2e2d
  example95 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example151
                   Lecture5.example96) -}
8712db704764e86aa475628ba63dc0bf
  example96 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example142
                   Lecture5.example97) -}
1421948489ab2d66cf76bcfe3d995e02
  example97 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example134
                   Lecture5.example98) -}
5dd1d125f7dabd21c43341a81fcb1c87
  example98 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example125
                   Lecture5.example99) -}
397fb93bda085bbfe25c917a49cd03bc
  example99 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example119
                   Lecture5.example100) -}
58da13c4f1aa580d466fccc89517326a
  exmple1 :: Lecture5.Tree GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lecture5.T
                   @ GHC.Integer.Type.Integer
                   Lecture5.exmple10
                   Lecture5.exmple4) -}
53135d1b3f064880eb316166c449870b
  exmple10 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
c49edd4183f17446856fc42c879ca477
  exmple11 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple1
                   Lecture5.exmple12) -}
15632d54b695aabf778fcf22e02d90dd
  exmple12 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple1
                   Lecture5.exmple13) -}
bf2bc8d6da7cfbf31c0ce72580675522
  exmple13 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple1
                   (GHC.Types.[] @ (Lecture5.Tree GHC.Integer.Type.Integer))) -}
b651c311b1005e685a0b5910e0fd90b5
  exmple2 :: Lecture5.Tree GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lecture5.T
                   @ GHC.Integer.Type.Integer
                   Lecture5.exmple2_w2
                   Lecture5.exmple11) -}
cd85bd523e827b1e196d882585b1f4e0
  exmple2_w2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
51038b7e25d8f1e402205b447f6f6009
  exmple4 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple8
                   Lecture5.exmple5) -}
d88f7d1eda3d7057aefc01ccc33d329a
  exmple5 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple6
                   (GHC.Types.[] @ (Lecture5.Tree GHC.Integer.Type.Integer))) -}
9c21a87ebd85371629d52356c629aa0f
  exmple6 :: Lecture5.Tree GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lecture5.T
                   @ GHC.Integer.Type.Integer
                   Lecture5.exmple7
                   (GHC.Types.[] @ (Lecture5.Tree GHC.Integer.Type.Integer))) -}
3fbfe75663de692454d6a93380aa2a31
  exmple7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
3ca387d7ec85874b8f9905bb88de55fb
  exmple8 :: Lecture5.Tree GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lecture5.T
                   @ GHC.Integer.Type.Integer
                   Lecture5.exmple9
                   (GHC.Types.[] @ (Lecture5.Tree GHC.Integer.Type.Integer))) -}
8548e11abeeeda2e203422d6f7b88bb7
  exmple9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
6edbac86109ade751b477779d4bfeb38
  extend ::
    Lecture5.Sudoku
    -> ((Lecture5.Row, Lecture5.Column), Lecture5.Value)
    -> Lecture5.Sudoku
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U(U))><S(S(S(S)L)L),1*U(1*U(1*U(U),1*U(U)),1*U(U))><S(S(S)L),1*U(1*U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: ((Lecture5.Row, Lecture5.Column), Lecture5.Value))
                   (w2 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { (,) ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.I# ww7 ->
                 case w2 of ww8 { (,) ww9 ww10 ->
                 case ww9 of ww11 { GHC.Types.I# ww12 ->
                 Lecture5.$wextend w ww7 ww5 ww2 ww12 ww10 } } } } }) -}
887e764418ea5127af2849f25ab4f8e7
  extendNode ::
    Lecture5.Node -> Lecture5.Constraint -> [Lecture5.Node]
  {- Arity: 2,
     Strictness: <S,1*U(C(U),U)><S(LLS),1*U(U(U),U(U),1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Node) (w1 :: Lecture5.Constraint) ->
                 case w of ww { (,) ww1 ww2 ->
                 case w1 of ww3 { (,,) ww4 ww5 ww6 ->
                 Lecture5.$wextendNode ww1 ww2 ww4 ww5 ww6 } }) -}
d7423e9d9ca1183455f25559c48d2467
  filledPositions ::
    Lecture5.Sudoku -> [(Lecture5.Row, Lecture5.Column)]
  {- Arity: 1, Strictness: <L,C(U(1*U))>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [(Lecture5.Row, Lecture5.Column)]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ (Lecture5.Row, Lecture5.Column)
                       : y ys
                       -> let {
                            z :: [(Lecture5.Row, Lecture5.Column)] = go1 ys
                          } in
                          letrec {
                            go2 :: [GHC.Types.Int] -> [(Lecture5.Row, Lecture5.Column)]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1
                                -> case s (y, y1) of wild2 { GHC.Types.I# x ->
                                   case x of wild3 {
                                     DEFAULT
                                     -> GHC.Types.:
                                          @ (Lecture5.Row, Lecture5.Column)
                                          (y, y1)
                                          (go2 ys1)
                                     0# -> go2 ys1 } } }
                          } in
                          go2 Lecture5.positions }
                 } in
                 go1 Lecture5.positions) -}
0a64b68dff8def0d8cb2eebd222831c6
  freeAtPos ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 -> Lecture5.$wfreeAtPos w ww1 ww2 }) -}
5e925f28f45685f5662c348f5de16ceb
  freeAtPos' ::
    Lecture5.Sudoku
    -> Lecture5.Position -> Lecture5.Constrnt -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><S,1*U(U,U)><S,1*U>, Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: Lecture5.Position)
                   (w2 :: Lecture5.Constrnt) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wfreeAtPos' w ww1 ww2 w2 }) -}
8fc1ecf4a658ac1ca670a89fc4d9736d
  freeAtPositions ::
    Lecture5.Sudoku -> Lecture5.Position -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku) (w1 :: Lecture5.Position) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wfreeAtPositions w ww1 ww2 }) -}
5d3729f26a06d258d95779924ce25d91
  freeInColumn ::
    Lecture5.Sudoku -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (c :: Lecture5.Column) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [Lecture5.Value]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Value
                       : y ys -> GHC.Types.: @ Lecture5.Value (s (y, c)) (go1 ys) }
                 } in
                 Lecture5.constraints_go
                   (go1 Lecture5.positions)
                   Lecture5.positions) -}
7868350620266ae9ed7db5f0d1f95018
  freeInNrcSubgrid ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (s :: Lecture5.Sudoku)
                   (ds :: (Lecture5.Row, Lecture5.Column)) ->
                 case ds of wild { (,) r c ->
                 Lecture5.constraints_go
                   (Lecture5.nrcSubGrid s (r, c))
                   Lecture5.positions }) -}
e06702c80042b5163d04a6a4a4f86b43
  freeInRow :: Lecture5.Sudoku -> Lecture5.Row -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (r :: Lecture5.Row) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [Lecture5.Value]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Value
                       : y ys -> GHC.Types.: @ Lecture5.Value (s (r, y)) (go1 ys) }
                 } in
                 Lecture5.constraints_go
                   (go1 Lecture5.positions)
                   Lecture5.positions) -}
e8bfa6d2c4e6bd24ee60ec1cae566b08
  freeInSeq :: [Lecture5.Value] -> [Lecture5.Value]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (seq :: [Lecture5.Value]) ->
                 Lecture5.constraints_go seq Lecture5.positions) -}
7f74f26bc87086538545ec12f0e5e7c9
  freeInSubgrid ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (s :: Lecture5.Sudoku)
                   (ds :: (Lecture5.Row, Lecture5.Column)) ->
                 case ds of wild { (,) r c ->
                 Lecture5.constraints_go
                   (Lecture5.subGrid s (r, c))
                   Lecture5.positions }) -}
ca797243952937e419b446a73bb724b1
  freePosTest :: Lecture5.Position -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lecture5.Position) ->
                 case w of ww { (,) ww1 ww2 -> Lecture5.$wfreePosTest ww1 ww2 }) -}
e07aab2cf0b42cea5547338396081a56
  freePosTest1 :: Lecture5.Sudoku
  {- Arity: 1, Strictness: <S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
     Unfolding: (\ (w :: (Lecture5.Row, Lecture5.Column)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 GHC.List.$w!!
                   @ Lecture5.Value
                   (GHC.List.$w!!
                      @ [Lecture5.Value]
                      Lecture5.nrcExample
                      (GHC.Prim.-# ww4 1#))
                   (GHC.Prim.-# ww6 1#) } } }) -}
c62b5a801610c25580d00fc1d071fab1
  genProblem :: Lecture5.Node -> GHC.Types.IO Lecture5.Node
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genProblem1
                  `cast`
                (<Lecture5.Node>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
853138a56b119876c316667dce2d3aed
  genProblem1 ::
    Lecture5.Node
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (n :: Lecture5.Node)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genProblem_$srandomize
                        (Lecture5.filledPositions (case n of wild { (,) x ds1 -> x }))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, Lecture5.minimalize n ipv1 #) }) -}
2dcb6c63370119454709c77a116edbea
  genProblem_$srandomize ::
    [(Lecture5.Row, Lecture5.Column)]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Lecture5.Row, Lecture5.Column)] #)
  {- Arity: 2, Strictness: <S,U><S,U> -}
f0148b9b9a6ace46cdbd4bc798bff0a3
  genRandomSudoku :: GHC.Types.IO Lecture5.Node
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
bd7d9bf40339ef84fbbfa54931753bcb
  genRandomSudoku1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genRandomSudoku10
                        @ Lecture5.Node
                        Lecture5.genRandomSudoku6
                          `cast`
                        (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        Lecture5.solved
                        Lecture5.genRandomSudoku4
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> Lecture5.$wfail ipv
                   : r ds
                   -> case ds of wild1 {
                        [] -> (# ipv, r #) : ipv2 ipv3 -> Lecture5.$wfail ipv } } }) -}
37a47cf2f9e4126ade38bcb157aa7d0c
  genRandomSudoku10 ::
    (node -> GHC.Types.IO [node])
    -> (node -> GHC.Types.Bool)
    -> GHC.Types.IO [node]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [node] #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,1*U)))><L,C(U)><C(S(SS)),1*C1(U(U,1*U))><S,U> -}
93da4ef149a70fc7f3ea057ca7535d68
  genRandomSudoku2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lecture5.genRandomSudoku3) -}
6c499683943079f7159d821c9ba3b0de
  genRandomSudoku3 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at Lecture5.hs:305:22-24"#) -}
724a55279a201eb8789a6e76a609ee7e
  genRandomSudoku4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Lecture5.genRandomSudoku5 #)) -}
c8be20963a25b8bba2e5230a3a86251e
  genRandomSudoku5 :: [Lecture5.Node]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Node
                   Lecture5.emptyN
                   (GHC.Types.[] @ Lecture5.Node)) -}
9a5b7c0a5c438b1d773bed2109aa71ba
  genRandomSudoku6 ::
    (Lecture5.Sudoku, [Lecture5.Constraint])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 2, Strictness: <S(LS),1*U(C(U),U)><S,U>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Lecture5.Sudoku, [Lecture5.Constraint]))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { (,) ww1 ww2 -> Lecture5.$wrsuccNode ww1 ww2 w1 }) -}
1dc6ea38e0b5e3c17cac9bf712138e00
  genRandomSudoku7 ::
    [Lecture5.Constraint]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Constraint] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (cs :: [Lecture5.Constraint])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case cs of wild {
                   []
                   -> Lecture5.genRandomSudoku8
                        @ Lecture5.Constraint
                        (GHC.Types.[] @ Lecture5.Constraint)
                        eta
                   : x xs
                   -> Lecture5.genRandomSudoku8
                        @ Lecture5.Constraint
                        (GHC.List.takeWhile
                           @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                           (Lecture5.sameLen x)
                           wild)
                        eta }) -}
cbe31795721caff1571bb684ad094e64
  genRandomSudoku8 ::
    [a]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ @ a
                   (ds :: [a])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds of wild {
                   [] -> (# eta, GHC.Types.[] @ a #)
                   : ipv ipv1
                   -> case Lecture5.genRandomSudoku9
                             (case GHC.List.$wlenAcc @ a wild 0# of ww2 { DEFAULT ->
                              GHC.Types.I# (GHC.Prim.-# ww2 1#) })
                             eta of ds1 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         GHC.Types.:
                           @ a
                           (case ipv3 of ww { GHC.Types.I# ww1 ->
                            GHC.List.$w!! @ a wild ww1 })
                           (GHC.Types.[] @ a) #) } }) -}
ab92dd280c7e970577fde6765e2229eb
  genRandomSudoku9 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>m,
     Unfolding: (\ (n :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Random.theStdGen
                        `cast`
                      (GHC.IORef.N:IORef[0] <System.Random.StdGen>_N) of wild { GHC.STRef.STRef r# ->
                 let {
                   w1 :: GHC.Integer.Type.Integer
                   = case n of wild1 { GHC.Types.I# i ->
                     GHC.Integer.Type.smallInteger i }
                 } in
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.StdGen
                        @ (System.Random.StdGen, GHC.Types.Int)
                        @ GHC.Types.Int
                        r#
                        (\ (a1 :: System.Random.StdGen) ->
                         case System.Random.$wrandomIvalInteger
                                @ System.Random.StdGen
                                @ GHC.Types.Int
                                System.Random.$fRandomGenStdGen
                                GHC.Num.$fNumInt
                                Lecture5.exmple2_w2
                                w1
                                a1 of ww2 { (#,#) ww3 ww4 ->
                         case ww4 of a'1 { System.Random.StdGen ipv ipv1 -> (a'1, ww3) } })
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of b1 { GHC.Types.I# ipv2 -> ds1 } } }) -}
f20de70cd32d22526dcc2f342b17e975
  genRandomSudoku_go ::
    [Lecture5.Constraint]
    -> [Lecture5.Constraint] -> [Lecture5.Constraint]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
2dc2f33ea1904cba57db08b4957a6c9d
  genSudokuPositions :: Test.QuickCheck.Gen.Gen Lecture5.Position
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genSudokuPositions1
                  `cast`
                (Sym (Test.QuickCheck.Gen.N:Gen[0] <Lecture5.Position>_R)) -}
247133598c3a1aba5477b81e9a9f7ae2
  genSudokuPositions1 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> Lecture5.Position
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 case w `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { GHC.Types.I# ww8 ->
                 Lecture5.$wgenSudokuPositions ww1 ww2 ww3 ww4 ww8 } }) -}
f9c1d7e2c57b2c4ecf5fac84d1ed2b2e
  genSudokuPositions2 ::
    (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (Lecture5.Row, Lecture5.Column)) ->
                 case w of ww { (,) ww1 ww2 ->
                 Lecture5.$wgenSudokuPositions1 ww1 ww2 }) -}
07e57a88238cf83c2481c55277a26917
  genSudokuPositions3 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U(U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 case w `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Lecture5.$wgenSudokuPositions2
                        ww1
                        ww2
                        ww3
                        ww4
                        w1 of ww7 { (#,#) ww8 ww9 ->
                 (ww8, ww9) } }) -}
cc81ca8da730188663d93571f45cee6b
  getRandomCnstr ::
    [Lecture5.Constraint] -> GHC.Types.IO [Lecture5.Constraint]
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku7
                  `cast`
                (<[Lecture5.Constraint]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Constraint]>_R)) -}
9f61d16255a58e6307c5658ab91d88f7
  getRandomInt :: GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>m,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku9
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Int>_R)) -}
a9ac002349877049dde3477f3b9ef7f0
  getRandomItem :: [a] -> GHC.Types.IO [a]
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku8
                  `cast`
                (forall (a :: <*>_N).
                 <[a]>_R ->_R Sym (GHC.Types.N:IO[0] <[a]>_R)) -}
09ae6c40e251f2a29d31a0c9497b95ee
  grid2sud :: Lecture5.Grid -> Lecture5.Sudoku
  {- Arity: 2, Strictness: <S,1*U><S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Grid) (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Lecture5.$wgrid2sud w ww4 ww6 } } }) -}
812b3e203da143b3b54a082e3e885bc5
  grow :: (node -> [node]) -> node -> Lecture5.Tree node
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ node (w :: node -> [node]) (w1 :: node) ->
                 case Lecture5.$wgrow @ node w w1 of ww { (#,#) ww1 ww2 ->
                 Lecture5.T @ node ww1 ww2 }) -}
18af56fe5a04500f54390f121b9397ff
  initNode :: Lecture5.Grid -> [Lecture5.Node]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (gr :: Lecture5.Grid) ->
                 let {
                   s :: Lecture5.Sudoku {- Arity: 1 -} = Lecture5.grid2sud gr
                 } in
                 case (Lecture5.consistent1 s)
                        `cast`
                      (Data.Semigroup.Internal.N:All[0]) of wild {
                   GHC.Types.False -> GHC.Types.[] @ Lecture5.Node
                   GHC.Types.True
                   -> GHC.Types.:
                        @ Lecture5.Node
                        (s, Lecture5.constraints s)
                        (GHC.Types.[] @ Lecture5.Node) }) -}
e2e5a7d260380220d6fbd2e4c32820de
  injective :: GHC.Classes.Eq a => [a] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dEq :: GHC.Classes.Eq a) (xs :: [a]) ->
                 GHC.Classes.$fEq[]_$c==
                   @ a
                   $dEq
                   (Data.OldList.nubBy @ a (GHC.Classes.== @ a $dEq) xs)
                   xs) -}
61ab057d31a3634be175e3e98b31c687
  length3rd :: (a, b, [c]) -> (a, b, [c]) -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS),1*U(A,A,1*U)><S(LLS),1*U(A,A,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ b @ c (w :: (a, b, [c])) (w1 :: (a, b, [c])) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 case w1 of ww4 { (,,) ww5 ww6 ww7 ->
                 Lecture5.$wlength3rd @ a @ b @ c ww3 ww7 } }) -}
c7a1770a2f41e9cfc8762681ce30985b
  minimalize ::
    Lecture5.Node -> [(Lecture5.Row, Lecture5.Column)] -> Lecture5.Node
  {- Arity: 2, Strictness: <L,U(U,U)><S,1*U> -}
19c0d0dbfb2dae36fddfdd41a6d7ab91
  nrcBl :: GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 letrec {
                   go1 :: [[GHC.Types.Int]] -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [[GHC.Types.Int]]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Int
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Int
                                 GHC.Classes.$fEqInt
                                 x
                                 y of wild1 {
                            GHC.Types.False -> go1 ys
                            GHC.Types.True -> GHC.Base.++ @ GHC.Types.Int y (go1 ys) } }
                 } in
                 go1 Lecture5.nrcBlocks) -}
66c6ffd3f9cdc312e8bea10460701ae8
  nrcBlocks :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.nrcBlocks3
                   Lecture5.nrcBlocks1) -}
e8716cf0dfb06c12876cef3776762fbb
  nrcBlocks1 :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.nrcBlocks2
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
980cba81a6c10de3672f6412f273eb6f
  nrcBlocks2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 6# 8#) -}
15918330cf838ed7ee3f9c9ca6cf35c9
  nrcBlocks3 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 2# 4#) -}
959a13f39c46e3a15f93597e04e729e7
  nrcConstrnt :: [[Lecture5.Position]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Position]
                   Lecture5.nrcConstrnt7
                   Lecture5.nrcConstrnt1) -}
1ee8ee465e134ba328535f53f928186e
  nrcConstrnt1 :: [[Lecture5.Position]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Position]
                   Lecture5.nrcConstrnt6
                   Lecture5.nrcConstrnt2) -}
d8e197f145c382b52231f2180e84cf43
  nrcConstrnt2 :: [[Lecture5.Position]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Position]
                   Lecture5.nrcConstrnt5
                   Lecture5.nrcConstrnt3) -}
151aa8f6fee29057eae304ac81bc5c16
  nrcConstrnt3 :: [[Lecture5.Position]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Position]
                   Lecture5.nrcConstrnt4
                   (GHC.Types.[] @ [Lecture5.Position])) -}
64cf3f9d292072f2e726cebd96013b18
  nrcConstrnt4 :: [Lecture5.Position]
  {- Unfolding: (Lecture5.$wcreateBlock
                   6#
                   Lecture5.consistent2
                   3#
                   Lecture5.blockConstrnt3) -}
93d5bfb60c8599cfaa653b5020a67cf9
  nrcConstrnt5 :: [Lecture5.Position]
  {- Unfolding: (Lecture5.$wcreateBlock
                   6#
                   Lecture5.consistent3
                   3#
                   Lecture5.blockConstrnt3) -}
f961ef253898b497dc21327a988faf82
  nrcConstrnt6 :: [Lecture5.Position]
  {- Unfolding: (Lecture5.$wcreateBlock
                   2#
                   Lecture5.consistent2
                   3#
                   Lecture5.blockConstrnt3) -}
b2bc6e551f9cc2ab227490562a03b744
  nrcConstrnt7 :: [Lecture5.Position]
  {- Unfolding: (Lecture5.$wcreateBlock
                   2#
                   Lecture5.consistent3
                   3#
                   Lecture5.blockConstrnt3) -}
2b9f8c1bf4511e73fcdbabf3b33206c8
  nrcExample :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example110
                   Lecture5.nrcExample1) -}
1e138e404321bb146d49e153ccf336f2
  nrcExample1 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample49
                   Lecture5.nrcExample2) -}
20dc7890bdfbfc8bb09d13c6262bf20c
  nrcExample10 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample11) -}
89098d5b2d8677eaa8fd2746cdbe7161
  nrcExample11 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example176) -}
d486d9e11c7e1393cc2023ee161e41dc
  nrcExample12 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample13) -}
1978bc1d9d3aa22c6ddb9fab4fcea832
  nrcExample13 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.nrcExample14) -}
369682a981939f7ee5935075f4b1cad1
  nrcExample14 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample15) -}
7c20eaf0208507ffa02734b8cc668962
  nrcExample15 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample16) -}
c88888ef09c7fbf6784224bd606f4815
  nrcExample16 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent6
                   Lecture5.example93) -}
a10b22a9361bb1d47365873aa13b1b9c
  nrcExample17 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample18) -}
6c6d38212d3854b6d394d731157091ff
  nrcExample18 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample19) -}
a3b5f3035d02c848d3433b126990cc8f
  nrcExample19 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample20) -}
9441619efbd68d9c22aedde86c0b127b
  nrcExample2 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample41
                   Lecture5.nrcExample3) -}
1a3ca374053ff011721db4ac9884f1ff
  nrcExample20 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample21) -}
778773152291699ceaf3d6e36119fe79
  nrcExample21 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample22) -}
eb28ddd983bc42ff9a3c6a80f2d0fa34
  nrcExample22 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample23) -}
bf49df52280b3bebcdb780dcdddb0b65
  nrcExample23 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample24) -}
e6a1007449646130cb95db9ff9082d7e
  nrcExample24 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example62) -}
3987777116ea0ccee3d45b042e05bb60
  nrcExample25 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.nrcExample26) -}
58b4618e1cb437aa16965706db557507
  nrcExample26 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample27) -}
b947cb49146048256135c1d43ed4321a
  nrcExample27 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample28) -}
da77855920cdd83530f7f30415b7607b
  nrcExample28 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample29) -}
38b0d9c4a464f192fce461a107d9e8e7
  nrcExample29 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.nrcExample30) -}
9590fe1c0bd2dfcf22310d4ff9782fd3
  nrcExample3 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample36
                   Lecture5.nrcExample4) -}
e9fe6fda1fe851a35d86a74dd1be79dd
  nrcExample30 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.nrcExample31) -}
3579a114f06d216413461a327b41f94d
  nrcExample31 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example87) -}
7aeceb16f1a1ef40902011ec062a5256
  nrcExample32 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample33) -}
6e10f5e271bc2ced8a3a60f7afeba597
  nrcExample33 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.nrcExample34) -}
006021a04a2d57ce2151984cc48eb600
  nrcExample34 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt2
                   Lecture5.nrcExample35) -}
96db2e6958b798afbf4b300a06c740d6
  nrcExample35 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.example114) -}
3044b5ea3ce959c104fcb0830801dd8e
  nrcExample36 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample37) -}
19b73f67909adfb80a2278b786355900
  nrcExample37 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample38) -}
84e6faca5ba629eb9a671437acd8fb51
  nrcExample38 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent2
                   Lecture5.nrcExample39) -}
d9e4d88d39de364c969cc862e08917bb
  nrcExample39 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample40) -}
67f079b3f17a7f404d023994d27063b6
  nrcExample4 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample32
                   Lecture5.nrcExample5) -}
6592ebc34076eafbd0ad56c7803f5d3f
  nrcExample40 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example85) -}
8e24fba40ec5b88dd984d337b864685e
  nrcExample41 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.nrcExample42) -}
362ac93414e99aa300e44a3fc471ef08
  nrcExample42 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample43) -}
450b719861b5990ae964a0d4fb0a4cae
  nrcExample43 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample44) -}
83f68a918c78949e819cbd17a8c73d9b
  nrcExample44 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample45) -}
4ed47712b87d97ae18faa7d0c66059d3
  nrcExample45 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample46) -}
50dbe5a4613428ee03457052dab6fae9
  nrcExample46 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample47) -}
427200e5f51b6d9946e035fcf657ffc1
  nrcExample47 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample48) -}
cec50b9966fb7f25b26b3b61f81bba3a
  nrcExample48 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example150) -}
aac8fc0ac34c5ccb0e099290f060896a
  nrcExample49 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample50) -}
b0d0f9e662ff8c06c84cd70872c8d756
  nrcExample5 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample25
                   Lecture5.nrcExample6) -}
18b429a16ec7dc646087fb3eee7e1591
  nrcExample50 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample51) -}
89211a3607cc82a4267df8c1cc3c18f2
  nrcExample51 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample52) -}
ef199fe472279624e58ef17a6b6c4580
  nrcExample52 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.nrcExample53) -}
0d8e42a3fe1dfbc0ad6a0e145c84409b
  nrcExample53 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample54) -}
1427be18de6f7f10d9ea5fa7c2903d53
  nrcExample54 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample55) -}
5304d405aa8a2680d042bbb4cb27e2f9
  nrcExample55 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.blockConstrnt3
                   Lecture5.example87) -}
9f1e50dc52e779b2ea8b8393d92ae85c
  nrcExample6 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample17
                   Lecture5.nrcExample7) -}
bf620f83048dfb76789c9e61da5acf60
  nrcExample7 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample12
                   Lecture5.nrcExample8) -}
ee9a76b859a9575840692e090ab7da18
  nrcExample8 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample9
                   (GHC.Types.[] @ [Lecture5.Value])) -}
d1d6003c1bc5fb1cd034acfb04fc36d1
  nrcExample9 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample10) -}
3be90e571b565737c6b7652c6690496d
  nrcSameBlock ::
    (Lecture5.Row, Lecture5.Column)
    -> (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(S(S)L),1*U(1*U(1*U),1*U(U))><S,1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Lecture5.Row, Lecture5.Column))
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { (,) ww6 ww7 ->
                 Lecture5.$wnrcSameBlock ww4 ww2 ww6 ww7 } } }) -}
55ce4edfb5467bff6e781f0dff9d77a0
  nrcSubGrid ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wnrcSubGrid w ww1 ww2 }) -}
daba39ce0c5930756d221ef22043dadb
  nrcSubgridInjective ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wnrcSubgridInjective w ww1 ww2 }) -}
0cc10e49e172188cd6f976167f4e6f5c
  openPositions ::
    Lecture5.Sudoku -> [(Lecture5.Row, Lecture5.Column)]
  {- Arity: 1, Strictness: <L,C(U(1*U))>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [(Lecture5.Row, Lecture5.Column)]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ (Lecture5.Row, Lecture5.Column)
                       : y ys
                       -> let {
                            z :: [(Lecture5.Row, Lecture5.Column)] = go1 ys
                          } in
                          letrec {
                            go2 :: [GHC.Types.Int] -> [(Lecture5.Row, Lecture5.Column)]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1
                                -> case s (y, y1) of wild2 { GHC.Types.I# x ->
                                   case x of wild3 {
                                     DEFAULT -> go2 ys1
                                     0#
                                     -> GHC.Types.:
                                          @ (Lecture5.Row, Lecture5.Column)
                                          (y, y1)
                                          (go2 ys1) } } }
                          } in
                          go2 Lecture5.positions }
                 } in
                 go1 Lecture5.positions) -}
eb96e721ff771ee4d3230f1b96c26bcb
  positions :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1# 9#) -}
33599db2d237bd6aa418980885719dd2
  prune ::
    (Lecture5.Row, Lecture5.Column, Lecture5.Value)
    -> [Lecture5.Constraint] -> [Lecture5.Constraint]
  {- Arity: 2, Strictness: <L,1*U(U(U),U(U),U)><S,1*U> -}
3d4966617ca160a35f37644c4fe7458b
  randomS :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.randomS1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
2a9f3f7b189461d40839338fa179b84d
  randomS1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genRandomSudoku10
                        @ Lecture5.Node
                        Lecture5.genRandomSudoku6
                          `cast`
                        (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        Lecture5.solved
                        (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         (# s1,
                            GHC.Types.:
                              @ Lecture5.Node
                              Lecture5.emptyN
                              (GHC.Types.[] @ Lecture5.Node) #))
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> case Lecture5.$wfail ipv of ds2 { (#,#) ipv2 ipv3 ->
                      Lecture5.randomS2 ipv3 ipv2 }
                   : r ds
                   -> case ds of wild1 {
                        [] -> Lecture5.randomS2 r ipv
                        : ipv2 ipv3
                        -> case Lecture5.$wfail ipv of ds2 { (#,#) ipv4 ipv5 ->
                           Lecture5.randomS2 ipv5 ipv4 } } } }) -}
5e5b42064fae6b15ae009ad6022f53d6
  randomS2 ::
    (Lecture5.Sudoku, [Lecture5.Constraint])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(1*C(U),A)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: (Lecture5.Sudoku, [Lecture5.Constraint]))
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lecture5.randomS3
                   (Lecture5.sud2grid (case x of wild { (,) x1 ds1 -> x1 }))
                   eta) -}
64e055688c6cff7c935247220fe9ab5b
  randomS3 ::
    [[Lecture5.Value]]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: [[Lecture5.Value]])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds of wild {
                   []
                   -> case Lecture5.randomS6
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : as ds1
                   -> case ds1 of wild1 {
                        []
                        -> case Lecture5.randomS6
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        : bs ds2
                        -> case ds2 of wild2 {
                             []
                             -> case Lecture5.randomS6
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                of {}
                             : cs ds3
                             -> case ds3 of wild3 {
                                  []
                                  -> case Lecture5.randomS6
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                     of {}
                                  : ds4 ds5
                                  -> case ds5 of wild4 {
                                       []
                                       -> case Lecture5.randomS6
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          of {}
                                       : es ds6
                                       -> case ds6 of wild5 {
                                            []
                                            -> case Lecture5.randomS6
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                               of {}
                                            : fs ds7
                                            -> case ds7 of wild6 {
                                                 []
                                                 -> case Lecture5.randomS6
                                                    ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              () #)
                                                    of {}
                                                 : gs ds8
                                                 -> case ds8 of wild7 {
                                                      []
                                                      -> case Lecture5.randomS6
                                                         ret_ty (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   () #)
                                                         of {}
                                                      : hs ds9
                                                      -> case ds9 of wild8 {
                                                           []
                                                           -> case Lecture5.randomS6
                                                              ret_ty (# GHC.Prim.State#
                                                                          GHC.Prim.RealWorld,
                                                                        () #)
                                                              of {}
                                                           : is ds10
                                                           -> case ds10 of wild9 {
                                                                []
                                                                -> case GHC.IO.Handle.Text.hPutStr2
                                                                          GHC.IO.Handle.FD.stdout
                                                                          Lecture5.randomS4
                                                                          GHC.Types.True
                                                                          eta of ds11 { (#,#) ipv ipv1 ->
                                                                   case (Lecture5.showRow as)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv of ds12 { (#,#) ipv2 ipv3 ->
                                                                   case (Lecture5.showRow bs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv2 of ds13 { (#,#) ipv4 ipv5 ->
                                                                   case (Lecture5.showRow cs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv4 of ds14 { (#,#) ipv6 ipv7 ->
                                                                   case GHC.IO.Handle.Text.hPutStr2
                                                                          GHC.IO.Handle.FD.stdout
                                                                          Lecture5.randomS4
                                                                          GHC.Types.True
                                                                          ipv6 of ds15 { (#,#) ipv8 ipv9 ->
                                                                   case (Lecture5.showRow ds4)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv8 of ds16 { (#,#) ipv10 ipv11 ->
                                                                   case (Lecture5.showRow es)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv10 of ds17 { (#,#) ipv12 ipv13 ->
                                                                   case (Lecture5.showRow fs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv12 of ds18 { (#,#) ipv14 ipv15 ->
                                                                   case GHC.IO.Handle.Text.hPutStr2
                                                                          GHC.IO.Handle.FD.stdout
                                                                          Lecture5.randomS4
                                                                          GHC.Types.True
                                                                          ipv14 of ds19 { (#,#) ipv16 ipv17 ->
                                                                   case (Lecture5.showRow gs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv16 of ds20 { (#,#) ipv18 ipv19 ->
                                                                   case (Lecture5.showRow hs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv18 of ds21 { (#,#) ipv20 ipv21 ->
                                                                   case (Lecture5.showRow is)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv20 of ds22 { (#,#) ipv22 ipv23 ->
                                                                   GHC.IO.Handle.Text.hPutStr2
                                                                     GHC.IO.Handle.FD.stdout
                                                                     Lecture5.randomS4
                                                                     GHC.Types.True
                                                                     ipv22 } } } } } } } } } } } }
                                                                : ipv ipv1
                                                                -> case Lecture5.randomS6
                                                                   ret_ty (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             () #)
                                                                   of {} } } } } } } } } } }) -}
0e0c9dc0333bf278bfbe0376a01e9b3c
  randomS4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lecture5.randomS5) -}
22e547ad6a832e40bac01e1f198e2a3c
  randomS5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("+-------+-------+-------+"#) -}
072db1c152bf0df1333ac8a434cf3c97
  randomS6 :: GHC.Types.IO ()
  {- Strictness: x -}
8af411acf9f8a2d349d26fa78d2a4cf7
  randomize :: GHC.Classes.Eq a => [a] -> GHC.Types.IO [a]
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A)><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.randomize1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Classes.Eq a>_R
                 ->_R <[a]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[a]>_R)) -}
f20b444a74d06aaed952c63a3adda3c9
  randomize1 ::
    GHC.Classes.Eq a =>
    [a]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A)><S,U><S,U> -}
26ce75c2ea76fa5249b741f06386fddd
  rowConstrnt :: [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Unfolding: (Lecture5.rowConstrnt_go Lecture5.positions) -}
7fca9a91104c9d3c2ca3517ccc4c4769
  rowConstrnt_go ::
    [GHC.Types.Int] -> [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Arity: 1, Strictness: <S,1*U> -}
ab85abc49486f3f895c96a2b89085fe7
  rowInjective :: Lecture5.Sudoku -> Lecture5.Row -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,C(U(U))><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (r :: Lecture5.Row) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Int
                       : y ys
                       -> case s (r, y) of wild1 { GHC.Types.I# x ->
                          case x of wild2 {
                            DEFAULT -> GHC.Types.: @ GHC.Types.Int wild1 (go1 ys)
                            0# -> go1 ys } } }
                 } in
                 let {
                   xs :: [Lecture5.Value] = go1 Lecture5.positions
                 } in
                 GHC.Classes.$fEq[]_$s$c==
                   (Data.OldList.nubBy @ Lecture5.Value GHC.Classes.eqInt xs)
                   xs) -}
07b6c4a4f22a3705b8e8a81809d34ee8
  rsearch ::
    (node -> GHC.Types.IO [node])
    -> (node -> GHC.Types.Bool)
    -> GHC.Types.IO [node]
    -> GHC.Types.IO [node]
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,1*U)))><L,C(U)><C(S(SS)),1*C1(U(U,1*U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku10
                  `cast`
                (forall (node :: <*>_N).
                 <node -> GHC.Types.IO [node]>_R
                 ->_R <node -> GHC.Types.Bool>_R
                 ->_R <GHC.Types.IO [node]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[node]>_R)) -}
a430ef39cf9296626ec1c03064899a6f
  rsolveNs :: [Lecture5.Node] -> GHC.Types.IO [Lecture5.Node]
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.rsolveNs1
                  `cast`
                (<[Lecture5.Node]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R)) -}
2a6967aab75165e7229009423be08de2
  rsolveNs1 ::
    [Lecture5.Node]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ns :: [Lecture5.Node])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lecture5.genRandomSudoku10
                   @ Lecture5.Node
                   Lecture5.genRandomSudoku6
                     `cast`
                   (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                    ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                   Lecture5.solved
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, ns #))
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                   eta) -}
437a4cf845908b686cf16a1637d628b3
  rsuccNode :: Lecture5.Node -> GHC.Types.IO [Lecture5.Node]
  {- Arity: 2, Strictness: <S(LS),1*U(C(U),U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku6
                  `cast`
                (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R)) -}
7bb5e46da24cc4025765ca93eedd59a0
  sameBlock ::
    (Lecture5.Row, Lecture5.Column)
    -> (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Lecture5.Row, Lecture5.Column))
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case w1 of ww3 { (,) ww4 ww5 ->
                 Lecture5.$wsameBlock ww1 ww2 ww4 ww5 } }) -}
b6218ff423df2dcac333724411e2f46d
  sameLen ::
    Lecture5.Constraint -> Lecture5.Constraint -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS),1*U(A,A,1*U)><S(LLS),1*U(A,A,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Constraint) (w1 :: Lecture5.Constraint) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 case w1 of ww4 { (,,) ww5 ww6 ww7 ->
                 Lecture5.$wsameLen ww3 ww7 } }) -}
a9f91518ac6bab7927918debfbfc4733
  search ::
    (node -> [node]) -> (node -> GHC.Types.Bool) -> [node] -> [node]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,C(U)><S,1*U> -}
3fb73e48d6de545ad5e49120cdf40133
  showGrid :: Lecture5.Grid -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.randomS3
                  `cast`
                (<[[Lecture5.Value]]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
54c9093a7f186b07532c581589c7941f
  showNode :: Lecture5.Node -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(1*C(U),A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.randomS2
                  `cast`
                (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d2e71026d52ba47b06540ff7906bdcd5
  showRow :: [Lecture5.Value] -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,1*U> -}
d9c8bc4093146cbea740cc83720592dd
  showSudoku :: Lecture5.Sudoku -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.showSudoku1
                  `cast`
                (<Lecture5.Sudoku>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b9cad0d2b57883d907bbf824f2b3ccf1
  showSudoku1 ::
    Lecture5.Sudoku
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,C(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lecture5.Sudoku)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lecture5.randomS3 (Lecture5.sud2grid x) eta) -}
cf0101f8f7d7145db240498970898242
  showVal :: Lecture5.Value -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lecture5.Value) ->
                 case w of ww { GHC.Types.I# ww1 -> Lecture5.$wshowVal ww1 }) -}
562a41945a907c753ad968a58a817c5d
  showVal1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lecture5.showVal2) -}
48c0139f39ba489287acc30fdd30ce12
  showVal2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" "#) -}
ea6906b073db6e35f99cc8365ebe2fd5
  solveAndShow :: Lecture5.Grid -> GHC.Types.IO [()]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.solveAndShow1
                  `cast`
                (<Lecture5.Grid>_R ->_R Sym (GHC.Types.N:IO[0] <[()]>_R)) -}
85f9c4df608f00a4eba2d8e6dd0939ca
  solveAndShow1 ::
    Lecture5.Grid
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (gr :: Lecture5.Grid)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   s :: Lecture5.Sudoku {- Arity: 1 -} = Lecture5.grid2sud gr
                 } in
                 case (Lecture5.consistent1 s)
                        `cast`
                      (Data.Semigroup.Internal.N:All[0]) of wild {
                   GHC.Types.False
                   -> Lecture5.solveAndShow3 Lecture5.solveAndShow2 eta
                   GHC.Types.True
                   -> Lecture5.solveAndShow3
                        (Lecture5.search
                           @ Lecture5.Node
                           Lecture5.succNode
                           Lecture5.solved
                           (GHC.Types.:
                              @ Lecture5.Node
                              (s, Lecture5.constraints s)
                              (GHC.Types.[] @ Lecture5.Node)))
                        eta }) -}
edcf844c698457cd6c29bbb5c1a1035b
  solveAndShow2 :: [Lecture5.Node]
  {- Unfolding: (Lecture5.search
                   @ Lecture5.Node
                   Lecture5.succNode
                   Lecture5.solved
                   (GHC.Types.[] @ Lecture5.Node)) -}
cebdf78c7b7bae464c2c3b32c7fdb07c
  solveAndShow3 ::
    [Lecture5.Node]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
6baf8cd78d589cedf27fb99cafe20173
  solveNs :: [Lecture5.Node] -> [Lecture5.Node]
  {- Arity: 1,
     Unfolding: (Lecture5.search
                   @ Lecture5.Node
                   Lecture5.succNode
                   Lecture5.solved) -}
ac3a5d66d926387da301ef58ca47fcf3
  solveShowNs :: [Lecture5.Node] -> GHC.Types.IO [()]
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.solveShowNs1
                  `cast`
                (<[Lecture5.Node]>_R ->_R Sym (GHC.Types.N:IO[0] <[()]>_R)) -}
920e0c4c8380e4c2759f18aa2a9afe28
  solveShowNs1 ::
    [Lecture5.Node]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (x :: [Lecture5.Node])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lecture5.solveAndShow3
                   (Lecture5.search
                      @ Lecture5.Node
                      Lecture5.succNode
                      Lecture5.solved
                      x)
                   eta) -}
a48772541d3c5ca4885c383fd4273635
  solved :: Lecture5.Node -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (Lecture5.Sudoku, [Lecture5.Constraint])) ->
                 case x of wild { (,) ds1 y ->
                 case y of wild1 {
                   [] -> GHC.Types.True : ds2 ds3 -> GHC.Types.False } }) -}
b690c23bb7656b4d227fd30d3861ba08
  subGrid ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 -> Lecture5.$wsubGrid w ww1 ww2 }) -}
aebf219e280c0acba0057d33cf7f5b0e
  subgridInjective ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wsubgridInjective w ww1 ww2 }) -}
24a8c3aa0e9d7f943ca727601ca62fae
  succNode :: Lecture5.Node -> [Lecture5.Node]
  {- Arity: 1, Strictness: <S(LS),1*U(C(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (Lecture5.Sudoku, [Lecture5.Constraint])) ->
                 case ds of wild { (,) s ds1 ->
                 case ds1 of wild1 {
                   [] -> GHC.Types.[] @ Lecture5.Node
                   : p ps -> Lecture5.extendNode (s, ps) p } }) -}
f2af699618ecf9c765352b36ea28425f
  sud2grid :: Lecture5.Sudoku -> Lecture5.Grid
  {- Arity: 1, HasNoCafRefs, Strictness: <L,C(U)>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 letrec {
                   go1 :: GHC.Prim.Int# -> [[Lecture5.Value]]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Prim.Int#) ->
                     GHC.Types.:
                       @ [Lecture5.Value]
                       (let {
                          ds :: Lecture5.Row = GHC.Types.I# x
                        } in
                        letrec {
                          go2 :: GHC.Prim.Int# -> [Lecture5.Value]
                            {- Arity: 1, Strictness: <L,U> -}
                          = \ (x1 :: GHC.Prim.Int#) ->
                            GHC.Types.:
                              @ Lecture5.Value
                              (s (ds, GHC.Types.I# x1))
                              (case x1 of wild {
                                 DEFAULT -> go2 (GHC.Prim.+# wild 1#)
                                 9# -> GHC.Types.[] @ Lecture5.Value })
                        } in
                        go2 1#)
                       (case x of wild {
                          DEFAULT -> go1 (GHC.Prim.+# wild 1#)
                          9# -> GHC.Types.[] @ [Lecture5.Value] })
                 } in
                 go1 1#) -}
dfc4741deee89cd7b85e56d5d97b3ceb
  takeT :: GHC.Types.Int -> Lecture5.Tree a -> Lecture5.Tree a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S,1*U(U,1*U)>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: Lecture5.Tree a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lecture5.T ww3 ww4 ->
                 case Lecture5.$wtakeT @ a ww1 ww3 ww4 of ww5 { (#,#) ww6 ww7 ->
                 Lecture5.T @ a ww6 ww7 } } }) -}
7be9c60bd6e2641fd7218e56ad0213a0
  uniqueSol :: Lecture5.Node -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (node :: Lecture5.Node) ->
                 case Lecture5.search
                        @ Lecture5.Node
                        Lecture5.succNode
                        Lecture5.solved
                        (GHC.Types.:
                           @ Lecture5.Node
                           node
                           (GHC.Types.[] @ Lecture5.Node)) of wild {
                   [] -> GHC.Types.False
                   : x ds
                   -> case ds of wild1 {
                        [] -> GHC.Types.True : y zs -> GHC.Types.False } }) -}
d3244ce4833cb8b2467a914bdff76532
  update :: GHC.Classes.Eq a => (a -> b) -> (a, b) -> a -> b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,1*U)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   ($dEq :: GHC.Classes.Eq a)
                   (f :: a -> b)
                   (ds :: (a, b))
                   (x :: a) ->
                 case ds of wild { (,) y z ->
                 case GHC.Classes.== @ a $dEq x y of wild1 {
                   GHC.Types.False -> f x GHC.Types.True -> z } }) -}
7fdf92bca77b3523b219d2985349772f
  values :: [GHC.Types.Int]
  {- Unfolding: (Lecture5.positions) -}
instance GHC.Classes.Eq [Lecture5.Tree] = Lecture5.$fEqTree
instance GHC.Classes.Ord [Lecture5.Tree] = Lecture5.$fOrdTree
instance GHC.Show.Show [Lecture5.Tree] = Lecture5.$fShowTree
"SPEC randomize @ (Row, Column)" forall ($dEq :: GHC.Classes.Eq
                                                   (Lecture5.Row, Lecture5.Column))
  Lecture5.randomize1 @ (Lecture5.Row, Lecture5.Column) $dEq
  = Lecture5.genProblem_$srandomize
"SPEC/Lecture5 $fEq(,) @ Int @ Int" [orphan] forall (v1 :: GHC.Classes.Eq
                                                             GHC.Types.Int)
                                                    (v :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,) @ GHC.Types.Int @ GHC.Types.Int v v1
  = Lecture5.$s$fEq(,)
"SPEC/Lecture5 $fEq(,)_$c/= @ Int @ Int" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                     GHC.Types.Int)
                                                         ($dEq :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,)_$c/= @ GHC.Types.Int @ GHC.Types.Int $dEq $dEq1
  = Lecture5.$s$fEq(,)_$s$fEq(,)_$c/=
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

