
==================== FINAL INTERFACE ====================
2018-10-11 09:39:10.299174133 UTC

interface main:Main 8043
  interface hash: e4e084a8f982d7d463029e72116c9d6e
  ABI hash: caf6b4bdcd9f440fa43ba84944949dd8
  export-list hash: 69ac4d4117b149365b28937518ec53d7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f3fa5c76493036586b6cf05d250b0635
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.exM
  Main.listFoldl
  Main.main
  Main.toBin
module dependencies:
package dependencies: QuickCheck-2.11.3 array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 pretty-1.1.3.6
                      primitive-0.6.3.0 random-1.1 template-haskell-2.13.0.0
                      tf-random-0.5 time-1.8.0.2 transformers-0.5.5.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.11.3:Test.QuickCheck e00d138ee3234e83a31cc3113c8c8ffb
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:Debug.Trace 7d99b5cfd8ae9f4b50938e4fedeaadef
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO 1c239be44126f7b1ba512ea61300f4dc
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type f3d5169c3d3830854b19f6565b265403
import  -/  random-1.1:System.Random 31994b60c33f032d578c64a928f735f7
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
2227abfddc09c50ef394e5f3bb661d95
  exM ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
  {- Arity: 3, Strictness: <L,U><S,U><S,U>,
     Unfolding: (\ (x :: GHC.Integer.Type.Integer)
                   (y :: GHC.Integer.Type.Integer)
                   (n :: GHC.Integer.Type.Integer) ->
                 case GHC.Integer.Type.eqInteger# n Main.exM4 of wild {
                   DEFAULT
                   -> case GHC.Show.$w$cshowsPrec4
                             0#
                             (Main.toBin y)
                             (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                      letrec {
                        go2 :: [GHC.Types.Char]
                               -> [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]
                               -> GHC.Integer.Type.Integer
                          {- Arity: 2, Strictness: <S,1*U><L,1*U> -}
                        = \ (ds :: [GHC.Types.Char])
                            (_ys :: [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]) ->
                          case ds of wild1 {
                            [] -> Main.exM3
                            : ipv ipv1
                            -> case _ys of wild2 {
                                 [] -> Main.exM3
                                 : ipv2 ipv3
                                 -> case ipv of wild3 { GHC.Types.C# x1 ->
                                    case x1 of wild4 {
                                      DEFAULT -> go2 ipv1 ipv3
                                      '1'#
                                      -> case ipv2 of wild5 { (,) ds1 y1 ->
                                         GHC.Integer.Type.modInteger
                                           (GHC.Integer.Type.timesInteger (go2 ipv1 ipv3) y1)
                                           n } } } } }
                      } in
                      GHC.Integer.Type.modInteger
                        (go2
                           (GHC.List.reverse1
                              @ GHC.Types.Char
                              (GHC.Types.: @ GHC.Types.Char ww3 ww4)
                              (GHC.Types.[] @ GHC.Types.Char))
                           (Main.listFoldl
                              @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                              Main.exM1
                              (GHC.Types.:
                                 @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                                 (Main.exM3, x)
                                 (GHC.Types.[]
                                    @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)))))
                        n }
                   1# -> GHC.Real.divZeroError @ GHC.Integer.Type.Integer }) -}
3f482678879db98eed155bb74ad854f8
  exM1 ::
    [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]
    -> (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Arity: 1, Strictness: <L,U>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]) ->
                 (case w of wild {
                    [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                    : x ds1
                    -> case x of wild1 { (,) x1 ds2 ->
                       GHC.Integer.Type.timesInteger x1 Main.exM2 } },
                  case w of wild {
                    [] -> case GHC.List.badHead ret_ty GHC.Integer.Type.Integer of {}
                    : x ds1
                    -> case x of wild1 { (,) ds2 y ->
                       GHC.Integer.Type.timesInteger y y } })) -}
a9f8e0e2425ef37a43d0538e82c53cf6
  exM2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
8642b161e30d8a07ad0355b58cd42b31
  exM3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
f99e6dd0389b961b539def78833defec
  exM4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
b4d8ad4ee71f65323218292e8246ae51
  listFoldl :: ([a] -> a) -> [a] -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><S,U> -}
b4ccbff7b84f8bd0e6f046822547773e
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
df3825b013a4f5dd426eee47f60ba3c1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main6
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv }) -}
55f7723849fbf936bda200bf7753a593
  main2 :: GHC.Base.String
  {- Unfolding: (case GHC.Show.$w$cshowsPrec4
                        0#
                        (Main.exM Main.main5 Main.main4 Main.main3)
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
4da7c28a55a831a13cb0aa1470e1bb0f
  main3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (50) -}
76c53e4a265a7d447bdab15fe4f48954
  main4 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (200) -}
80f28a2aee1aeede5786028982aee237
  main5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
bef19fe821ad473a989bba64b1743bd6
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main7) -}
af1a300851b03cd70d26771760b5dd58
  main7 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("\ESC[36m== Assignment 1 (Modular Exponentiation) ==\ESC[0m"#) -}
be3b6fbb5c022145e23c318d12ce4337
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
6440f828fba75be83bad511e4f3dee30
  toBin :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

