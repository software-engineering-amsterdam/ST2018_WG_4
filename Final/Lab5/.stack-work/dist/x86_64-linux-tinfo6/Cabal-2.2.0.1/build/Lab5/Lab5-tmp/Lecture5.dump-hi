
==================== FINAL INTERFACE ====================
2018-10-08 19:37:37.003136651 UTC

interface main:Lecture5 8043
  interface hash: a0654cd6b718fdb13b9d20b0f0fd4df9
  ABI hash: 89b2161074f67109d973af505c52eb48
  export-list hash: df0572af465b6393ac374929c126b33c
  orphan hash: ae86adf9ab717afc4d2cad9239bdbc0f
  flag hash: 9ae8a699cb106faa4356352859ff4048
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lecture5.bl
  Lecture5.blockConstrnt
  Lecture5.blocks
  Lecture5.checkAllErasedHints
  Lecture5.colInjective
  Lecture5.columnConstrnt
  Lecture5.consistent
  Lecture5.constraints
  Lecture5.constrnts
  Lecture5.count
  Lecture5.createBlock
  Lecture5.deleteN
  Lecture5.emptyN
  Lecture5.eraseN
  Lecture5.eraseN'
  Lecture5.eraseS
  Lecture5.eraseS'
  Lecture5.example1
  Lecture5.example2
  Lecture5.example3
  Lecture5.example4
  Lecture5.example5
  Lecture5.exmple1
  Lecture5.exmple2
  Lecture5.extend
  Lecture5.extendNode
  Lecture5.filledPositions
  Lecture5.freeAtPos
  Lecture5.freeAtPos'
  Lecture5.freeAtPositions
  Lecture5.freeInColumn
  Lecture5.freeInNrcSubgrid
  Lecture5.freeInRow
  Lecture5.freeInSeq
  Lecture5.freeInSubgrid
  Lecture5.freePosTest
  Lecture5.genNonSolvedSudoku
  Lecture5.genNonSolvedSudokuNRC
  Lecture5.genNumHints
  Lecture5.genNumHintsNRC
  Lecture5.genProblem
  Lecture5.genProblemType
  Lecture5.genRandomSudoku
  Lecture5.genRandomSudokuType
  Lecture5.genSudokuPositions
  Lecture5.generateSudokuProblem
  Lecture5.getPositionForBlock
  Lecture5.getRandomCnstr
  Lecture5.getRandomInt
  Lecture5.getRandomItem
  Lecture5.grid2sud
  Lecture5.grow
  Lecture5.initNode
  Lecture5.injective
  Lecture5.length3rd
  Lecture5.minimalize
  Lecture5.nrcBl
  Lecture5.nrcBlocks
  Lecture5.nrcConstrnt
  Lecture5.nrcExample
  Lecture5.nrcSameBlock
  Lecture5.nrcSubGrid
  Lecture5.nrcSubgridInjective
  Lecture5.openPositions
  Lecture5.positions
  Lecture5.prune
  Lecture5.randomS
  Lecture5.randomize
  Lecture5.removeBlocksFromSudoku
  Lecture5.rowConstrnt
  Lecture5.rowInjective
  Lecture5.rsearch
  Lecture5.rsolveNs
  Lecture5.rsuccNode
  Lecture5.sameBlock
  Lecture5.sameLen
  Lecture5.search
  Lecture5.showGrid
  Lecture5.showNode
  Lecture5.showRow
  Lecture5.showSudoku
  Lecture5.showVal
  Lecture5.solveAndShow
  Lecture5.solveNs
  Lecture5.solveNs'
  Lecture5.solveShowNs
  Lecture5.solved
  Lecture5.subGrid
  Lecture5.subgridInjective
  Lecture5.succNode
  Lecture5.sud2grid
  Lecture5.takeT
  Lecture5.testIsMinimal
  Lecture5.uniqueSol
  Lecture5.uniqueSol'
  Lecture5.update
  Lecture5.values
  Lecture5.Column
  Lecture5.Constraint
  Lecture5.Constrnt
  Lecture5.Grid
  Lecture5.Node
  Lecture5.Position
  Lecture5.Row
  Lecture5.Sudoku
  Lecture5.Tree{Lecture5.T}
  Lecture5.Value
module dependencies:
package dependencies: QuickCheck-2.11.3 array-0.5.2.0 base-4.11.1.0
                      containers-0.5.11.0 deepseq-1.4.3.0 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 integer-gmp-1.0.2.0 pretty-1.1.3.6
                      primitive-0.6.3.0 random-1.1 template-haskell-2.13.0.0
                      tf-random-0.5 time-1.8.0.2 transformers-0.5.5.0
orphans: transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.11.3:Test.QuickCheck e00d138ee3234e83a31cc3113c8c8ffb
import  -/  QuickCheck-2.11.3:Test.QuickCheck.Arbitrary 749c030890709ce50a65277c8ad56400
import  -/  QuickCheck-2.11.3:Test.QuickCheck.Gen 18d7f741d47ea7234320fe42d69d1321
import  -/  base-4.11.1.0:Control.Monad c5f960c67d822497578bffbd3e4c01cf
import  -/  base-4.11.1.0:Data.Foldable 8ed35c38958063956af33c935ea03444
import  -/  base-4.11.1.0:Data.List 83dc843e47bfc0c5af51e19c6f3476d5
import  -/  base-4.11.1.0:Data.Maybe 409c3da2b142470b68be39ce1d97a9f7
import  -/  base-4.11.1.0:Data.OldList 1b35aa3c6805ff7c8887a35a866fe006
import  -/  base-4.11.1.0:Data.Traversable 7ad4edb9184ea1ae8e73f6b94f115c8c
import  -/  base-4.11.1.0:Data.Tuple 3af66f3ac61ed95ba8a3a3f68ebc5003
import  -/  base-4.11.1.0:Debug.Trace 7d99b5cfd8ae9f4b50938e4fedeaadef
import  -/  base-4.11.1.0:GHC.Base 604111500e81281298777e721c75643b
import  -/  base-4.11.1.0:GHC.Err 5e26aa744981f14e0f1e4d29c44ac52e
import  -/  base-4.11.1.0:GHC.List 1e4357702d8d00cded0703bd293e50e8
import  -/  base-4.11.1.0:GHC.Num 8e54b26dce4495382dc4b50cf36ab754
import  -/  base-4.11.1.0:GHC.Real b4beb0389ba1ad5d9640aae67848c5d3
import  -/  base-4.11.1.0:GHC.Show 73be67392447c974f19c3befd83c46c0
import  -/  base-4.11.1.0:Prelude 0750c25585e2b797cd78291d423d39dd
import  -/  base-4.11.1.0:System.IO 1c239be44126f7b1ba512ea61300f4dc
import  -/  ghc-prim-0.5.2.0:GHC.Classes 122abfcd7450c6c11602933c9ca5f80d
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  random-1.1:System.Random 31994b60c33f032d578c64a928f735f7
d08eed8db65524a395f0f0bfb83d73e2
  $fEqTree :: GHC.Classes.Eq a => GHC.Classes.Eq (Lecture5.Tree a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Eq a).
                  @ (Lecture5.Tree a)
                  (Lecture5.$fEqTree_$c== @ a v)
                  (Lecture5.$fEqTree_$c/= @ a v) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fEqTree_$c/= ::
    GHC.Classes.Eq a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><L,U><L,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (3, False, False)
                (\ @ a
                   ($dEq :: GHC.Classes.Eq a)
                   (x :: Lecture5.Tree a)
                   (y :: Lecture5.Tree a) ->
                 case Lecture5.$fEqTree_$c== @ a $dEq x y of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fEqTree_$c== ::
    GHC.Classes.Eq a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)> -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree :: GHC.Classes.Ord a => GHC.Classes.Ord (Lecture5.Tree a)
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Classes.Ord a).
                  @ (Lecture5.Tree a)
                  (Lecture5.$fOrdTree_$cp1Ord @ a v)
                  (Lecture5.$fOrdTree_$ccompare @ a v)
                  (Lecture5.$fOrdTree_$c< @ a v)
                  (Lecture5.$fOrdTree_$c<= @ a v)
                  (\ (a1 :: Lecture5.Tree a) (b :: Lecture5.Tree a) ->
                   Lecture5.$fOrdTree_$c< @ a v b a1)
                  (Lecture5.$fOrdTree_$c>= @ a v)
                  (Lecture5.$fOrdTree_$cmax @ a v)
                  (Lecture5.$fOrdTree_$cmin @ a v) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$c< ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)> -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$c<= ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Lecture5.Tree a)
                   (b :: Lecture5.Tree a) ->
                 case Lecture5.$fOrdTree_$c< @ a $dOrd b a1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$c>= ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (a1 :: Lecture5.Tree a)
                   (b :: Lecture5.Tree a) ->
                 case Lecture5.$fOrdTree_$c< @ a $dOrd a1 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$ccompare ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> GHC.Types.Ordering
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)> -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$cmax ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> Lecture5.Tree a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)><L,U(U,U)><L,U(U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lecture5.Tree a)
                   (y :: Lecture5.Tree a) ->
                 case Lecture5.$fOrdTree_$c< @ a $dOrd y x of wild {
                   GHC.Types.False -> y GHC.Types.True -> x }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$cmin ::
    GHC.Classes.Ord a =>
    Lecture5.Tree a -> Lecture5.Tree a -> Lecture5.Tree a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A)><L,U(U,U)><L,U(U,U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (x :: Lecture5.Tree a)
                   (y :: Lecture5.Tree a) ->
                 case Lecture5.$fOrdTree_$c< @ a $dOrd y x of wild {
                   GHC.Types.False -> x GHC.Types.True -> y }) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fOrdTree_$cp1Ord ::
    GHC.Classes.Ord a => GHC.Classes.Eq (Lecture5.Tree a)
  {- Arity: 1, HasNoCafRefs,
     Strictness: <L,1*U(1*U(C(C1(U)),A),A,A,A,A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ a ($dOrd :: GHC.Classes.Ord a) ->
                 Lecture5.$fEqTree @ a (GHC.Classes.$p1Ord @ a $dOrd)) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fShowTree :: GHC.Show.Show a => GHC.Show.Show (Lecture5.Tree a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(C(U))),A,A)>m,
     Inline: CONLIKE,
     Unfolding: DFun: @ a (v :: GHC.Show.Show a).
                  @ (Lecture5.Tree a)
                  (Lecture5.$fShowTree_$cshowsPrec @ a v)
                  (Lecture5.$fShowTree_$cshow @ a v)
                  (Lecture5.$fShowTree_$cshowList @ a v) -}
5ef60241ac0c1dea570d87c1d81b758e
  $fShowTree1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fShowTree_$cshow ::
    GHC.Show.Show a => Lecture5.Tree a -> GHC.Base.String
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U(U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dShow :: GHC.Show.Show a) (x :: Lecture5.Tree a) ->
                 Lecture5.$fShowTree_$cshowsPrec
                   @ a
                   $dShow
                   Lecture5.$fShowTree1
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fShowTree_$cshowList ::
    GHC.Show.Show a => [Lecture5.Tree a] -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(C(U))),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (ls :: [Lecture5.Tree a])
                   (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Lecture5.Tree a)
                   (Lecture5.$fShowTree_$cshowsPrec @ a $dShow Lecture5.$fShowTree1)
                   ls
                   s) -}
d08eed8db65524a395f0f0bfb83d73e2
  $fShowTree_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Lecture5.Tree a -> GHC.Show.ShowS
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(C(U))),A,A)><S(S),1*U(U)><S,1*U(U,U)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Lecture5.Tree a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { Lecture5.T ww3 ww4 ->
                 Lecture5.$w$cshowsPrec @ a w ww1 ww3 ww4 } }) -}
c5e1cb02b56d8a10d6d422a3859000af
  $s$fEq(,) :: GHC.Classes.Eq (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Types.Int, GHC.Types.Int)
                  (GHC.Classes.$fEq(,)_$c==
                     @ GHC.Types.Int
                     @ GHC.Types.Int
                     GHC.Classes.$fEqInt
                     GHC.Classes.$fEqInt)
                  Lecture5.$s$fEq(,)_$s$fEq(,)_$c/= -}
8fcbf8cc29218b7d62e1ffcabdf02bb3
  $s$fEq(,)_$s$fEq(,)_$c/= ::
    (GHC.Types.Int, GHC.Types.Int)
    -> (GHC.Types.Int, GHC.Types.Int) -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),1*U(U))>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: (GHC.Types.Int, GHC.Types.Int))
                   (y :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case x of wild { (,) a1 a2 ->
                 case y of wild1 { (,) b1 b2 ->
                 case GHC.Classes.eqInt a1 b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True
                   -> case GHC.Classes.eqInt a2 b2 of wild3 {
                        GHC.Types.False -> GHC.Types.True
                        GHC.Types.True -> GHC.Types.False } } } }) -}
095540183a79fd431494b94dae136eac
  $tc'T :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17467278147681253827##
                   3107323041781491241##
                   Lecture5.$trModule
                   Lecture5.$tc'T2
                   1#
                   Lecture5.$tc'T1) -}
40774a29f099d98eed3ee2eff3cf3ba3
  $tc'T1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
2ebaa1dcf4544840973ca59fc064c677
  $tc'T2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lecture5.$tc'T3) -}
8f38096b73ccce46d6daf3f8df864af6
  $tc'T3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'T"#) -}
c9c8002c65e6d1e85942f92f5fa445d2
  $tcTree :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3531523477867271013##
                   17004540309598925330##
                   Lecture5.$trModule
                   Lecture5.$tcTree1
                   0#
                   GHC.Types.krep$*Arr*) -}
9cb7f2b793579aa0ca0c78aa9cbe2b8e
  $tcTree1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lecture5.$tcTree2) -}
a9d9f05d1e7635b5e4de714544c1a849
  $tcTree2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Tree"#) -}
c4c83e82b39bbd1efff189c1de3d50b4
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Lecture5.$trModule3
                   Lecture5.$trModule1) -}
2651aa90a5790779e2ead9d5ef1f4f67
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lecture5.$trModule2) -}
497bea39d102eecc2a4b6df5eda48d83
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Lecture5"#) -}
a76f3c9e197f7a91971e5865c61a529b
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Lecture5.$trModule4) -}
ade7fd6233e77f9769eaa7f22c2f6cc4
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
d08eed8db65524a395f0f0bfb83d73e2
  $w$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Prim.Int# -> a -> [Lecture5.Tree a] -> GHC.Show.ShowS
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(C(C1(C(U))),A,A)><S,U><L,U><L,U>, Inline: [0] -}
d2149aaf8610acffdcde7657d2fe00a5
  $wcreateBlock ::
    GHC.Prim.Int#
    -> Lecture5.Column
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> [Lecture5.Position]
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><L,U(U)><S,U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Types.Int) ->
                 let {
                   y :: GHC.Prim.Int# = GHC.Prim.+# (GHC.Prim.-# ww 1#) ww2
                 } in
                 case GHC.Prim.># ww y of lwild {
                   DEFAULT
                   -> letrec {
                        go1 :: GHC.Prim.Int# -> [Lecture5.Position]
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ (x :: GHC.Prim.Int#) ->
                          case ww1 of wild { GHC.Types.I# x1 ->
                          case ww3 of wild1 { GHC.Types.I# y1 ->
                          let {
                            y2 :: GHC.Prim.Int# = GHC.Prim.+# (GHC.Prim.-# x1 1#) y1
                          } in
                          let {
                            n :: [Lecture5.Position]
                            = case GHC.Prim.==# x y of lwild1 {
                                DEFAULT -> go1 (GHC.Prim.+# x 1#)
                                1# -> GHC.Types.[] @ Lecture5.Position }
                          } in
                          case GHC.Prim.># x1 y2 of lwild1 {
                            DEFAULT
                            -> let {
                                 ds :: Lecture5.Row = GHC.Types.I# x
                               } in
                               letrec {
                                 go2 :: GHC.Prim.Int# -> [Lecture5.Position]
                                   {- Arity: 1, Strictness: <L,U> -}
                                 = \ (x2 :: GHC.Prim.Int#) ->
                                   GHC.Types.:
                                     @ Lecture5.Position
                                     (ds, GHC.Types.I# x2)
                                     (case GHC.Prim.==# x2 y2 of lwild2 {
                                        DEFAULT -> go2 (GHC.Prim.+# x2 1#) 1# -> n })
                               } in
                               go2 x1
                            1# -> n } } }
                      } in
                      go1 ww
                   1# -> GHC.Types.[] @ Lecture5.Position }) -}
2abf05553d81a84758b8b34cfb19d2db
  $weraseN ::
    Lecture5.Node
    -> (Lecture5.Row, Lecture5.Column)
    -> (# Lecture5.Sudoku, [Lecture5.Constraint] #)
  {- Arity: 2, Strictness: <L,U(C(U(U)),A)><L,U(U(U),U(U))>,
     Inline: [0],
     Unfolding: (\ (w :: Lecture5.Node)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 let {
                   $ws :: GHC.Prim.Int# -> Lecture5.Column -> GHC.Types.Int
                     {- Arity: 2, Strictness: <S,U><L,U(U)>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Int#) (ww1 :: Lecture5.Column)[OneShot] ->
                     case w1 of ww2 { (,) ww3 ww4 ->
                     case ww3 of wild { GHC.Types.I# x ->
                     case GHC.Prim.==# x ww of lwild {
                       DEFAULT
                       -> case w of wild1 { (,) x1 ds1 -> x1 (GHC.Types.I# ww, ww1) }
                       1#
                       -> case ww4 of wild1 { GHC.Types.I# x1 ->
                          case ww1 of wild2 { GHC.Types.I# y ->
                          case GHC.Prim.==# x1 y of lwild1 {
                            DEFAULT
                            -> case w of wild3 { (,) x2 ds1 -> x2 (GHC.Types.I# ww, wild2) }
                            1# -> Lecture5.$fShowTree1 } } } } } }
                 } in
                 let {
                   s :: Lecture5.Sudoku
                     {- Arity: 1, Strictness: <S(S(S)L),1*U(1*U(U),U(U))>, Inline: [0],
                        Unfolding: InlineRule (1, True, False)
                                   (\ (w2 :: (Lecture5.Row, Lecture5.Column)) ->
                                    case w2 of ww { (,) ww1 ww2 ->
                                    case ww1 of ww3 { GHC.Types.I# ww4 -> $ws ww4 ww2 } }) -}
                   = \ (w2 :: (Lecture5.Row, Lecture5.Column)) ->
                     case w2 of ww { (,) ww1 ww2 ->
                     case ww1 of ww3 { GHC.Types.I# ww4 -> $ws ww4 ww2 } }
                 } in
                 (# s, Lecture5.constraints s #)) -}
df262040688e89624076c1c8d46b04a7
  $weraseN' ::
    Lecture5.Node
    -> [(Lecture5.Row, Lecture5.Column)]
    -> (# Lecture5.Sudoku, [Lecture5.Constraint] #)
  {- Arity: 2, Strictness: <L,1*U(1*U,A)><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Node)
                   (w1 :: [(Lecture5.Row, Lecture5.Column)]) ->
                 let {
                   s :: Lecture5.Sudoku
                   = let {
                       z :: Lecture5.Sudoku = case w of wild { (,) x ds1 -> x }
                     } in
                     letrec {
                       go1 :: [(Lecture5.Row, Lecture5.Column)] -> Lecture5.Sudoku
                         {- Arity: 1, Strictness: <S,1*U> -}
                       = \ (ds :: [(Lecture5.Row, Lecture5.Column)]) ->
                         case ds of wild {
                           [] -> z
                           : y ys
                           -> let {
                                y1 :: Lecture5.Sudoku = go1 ys
                              } in
                              \ (eta :: (Lecture5.Row, Lecture5.Column)) ->
                              Lecture5.eraseS y1 y eta }
                     } in
                     go1 w1
                 } in
                 (# s, Lecture5.constraints s #)) -}
5e6f7f6db463e560ddba1525e0e1c3be
  $weraseS ::
    Lecture5.Sudoku
    -> GHC.Prim.Int#
    -> Lecture5.Column
    -> GHC.Prim.Int#
    -> Lecture5.Column
    -> GHC.Types.Int
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,1*C1(U(U))><S,U><L,1*U(U)><S,U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Lecture5.Column) ->
                 case GHC.Prim.==# ww ww2 of lwild {
                   DEFAULT -> w (GHC.Types.I# ww2, ww3)
                   1#
                   -> case ww1 of wild { GHC.Types.I# x ->
                      case ww3 of wild1 { GHC.Types.I# y ->
                      case GHC.Prim.==# x y of lwild1 {
                        DEFAULT -> w (GHC.Types.I# ww2, wild1)
                        1# -> Lecture5.$fShowTree1 } } } }) -}
c3c511fead1ec88f57be9b066cc92adf
  $wextend ::
    Lecture5.Sudoku
    -> GHC.Prim.Int#
    -> Lecture5.Column
    -> Lecture5.Value
    -> GHC.Prim.Int#
    -> Lecture5.Column
    -> Lecture5.Value
  {- Arity: 6, HasNoCafRefs,
     Strictness: <L,1*C1(U(U))><S,U><L,1*U(U)><L,1*U(U)><S,U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: Lecture5.Value)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: Lecture5.Column) ->
                 case GHC.Prim.==# ww3 ww of lwild {
                   DEFAULT -> w (GHC.Types.I# ww3, ww4)
                   1#
                   -> case ww4 of wild { GHC.Types.I# x ->
                      case ww1 of wild1 { GHC.Types.I# y ->
                      case GHC.Prim.==# x y of lwild1 {
                        DEFAULT -> w (GHC.Types.I# ww3, wild) 1# -> ww2 } } } }) -}
d077f93c2f5a1d282f220bfa17ee5147
  $wextendNode ::
    Lecture5.Sudoku
    -> [Lecture5.Constraint]
    -> Lecture5.Row
    -> Lecture5.Column
    -> [Lecture5.Value]
    -> GHC.Types.Bool
    -> [Lecture5.Node]
  {- Arity: 6, Strictness: <L,C(U)><L,U><L,U(U)><L,U(U)><S,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Sudoku)
                   (ww1 :: [Lecture5.Constraint])
                   (ww2 :: Lecture5.Row)
                   (ww3 :: Lecture5.Column)
                   (ww4 :: [Lecture5.Value])
                   (w :: GHC.Types.Bool) ->
                 letrec {
                   go1 :: [Lecture5.Value] -> [Lecture5.Node]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [Lecture5.Value]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Node
                       : y ys
                       -> GHC.Types.:
                            @ Lecture5.Node
                            (\ (x :: (Lecture5.Row, Lecture5.Column)) ->
                             case x of ww5 { (,) ww6 ww7 ->
                             case ww6 of wild1 { GHC.Types.I# x1 ->
                             case ww2 of wild2 { GHC.Types.I# y1 ->
                             case GHC.Prim.==# x1 y1 of lwild {
                               DEFAULT -> ww ww5
                               1#
                               -> case ww7 of wild3 { GHC.Types.I# x2 ->
                                  case ww3 of wild4 { GHC.Types.I# y2 ->
                                  case GHC.Prim.==# x2 y2 of lwild1 {
                                    DEFAULT -> ww ww5 1# -> y } } } } } } },
                             Data.OldList.sortBy
                               @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                               (Lecture5.length3rd
                                  @ Lecture5.Row
                                  @ Lecture5.Column
                                  @ Lecture5.Value)
                               (Lecture5.prune (ww2, ww3, y) ww1 w))
                            (go1 ys) }
                 } in
                 go1 ww4) -}
c19d88e8c5dd5a613a80d8300b7b1e79
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (GHC.Magic.noinline
                    @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                    GHC.IO.failIO1
                      `cast`
                    (forall (a :: <*>_N).
                     <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                    @ Lecture5.Node
                    Lecture5.genNonSolvedSudoku3)
                   `cast`
                 (GHC.Types.N:IO[0] <Lecture5.Node>_R)
                   w) -}
ede38abae88b14e81ac23c17f80bb6a1
  $wfreeAtPos ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 Data.OldList.intersectBy
                   @ Lecture5.Value
                   GHC.Classes.eqInt
                   (Data.OldList.intersectBy
                      @ Lecture5.Value
                      GHC.Classes.eqInt
                      (Data.OldList.intersectBy
                         @ Lecture5.Value
                         GHC.Classes.eqInt
                         (Lecture5.freeInRow w ww)
                         (Lecture5.freeInColumn w ww1))
                      (Lecture5.freeAtPos'_go
                         (Lecture5.$wsubGrid w ww ww1)
                         Lecture5.positions))
                   (Lecture5.freeAtPos'_go
                      (Lecture5.$wnrcSubGrid w ww ww1)
                      Lecture5.positions)) -}
9504279e96d29c376280edcdba8e0f58
  $wfreePosTest :: Lecture5.Row -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Row) (ww1 :: Lecture5.Column) ->
                 GHC.Classes.$fEq[]_$s$c==
                   (Lecture5.freeAtPositions Lecture5.freePosTest1 (ww, ww1))
                   (Lecture5.$wfreeAtPos Lecture5.freePosTest1 ww ww1)) -}
b38c236d95b90933b4c02aff22576c43
  $wgenSudokuPositions ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Lecture5.Position
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Word#)
                   (ww2 :: GHC.Prim.Word#)
                   (ww3 :: GHC.Prim.Int#)
                   (ww4 :: GHC.Prim.Int#) ->
                 Test.QuickCheck.Gen.$wsuchThat
                   @ Lecture5.Position
                   Lecture5.genSudokuPositions3
                     `cast`
                   (Sym (Test.QuickCheck.Gen.N:Gen[0]
                             <(GHC.Types.Int, GHC.Types.Int)>_R))
                   Lecture5.genSudokuPositions2
                   ww
                   ww1
                   ww2
                   ww3
                   ww4) -}
0860021efc6e38b6fa80036308daca2d
  $wgenSudokuPositions1 ::
    Lecture5.Row -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Row) (ww1 :: Lecture5.Column) ->
                 case GHC.List.elem
                        @ Lecture5.Row
                        GHC.Classes.$fEqInt
                        ww
                        Lecture5.positions of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> GHC.List.elem
                        @ Lecture5.Column
                        GHC.Classes.$fEqInt
                        ww1
                        Lecture5.positions }) -}
d4120ffb2dc125b6b0713b0902ef96c2
  $wgenSudokuPositions2 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Word#
    -> GHC.Prim.Word#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> (# GHC.Types.Int, GHC.Types.Int #)
  {- Arity: 5, Strictness: <S,U><S,U><S,U><S,1*U><L,U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Word#)
                   (ww2 :: GHC.Prim.Word#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: GHC.Types.Int) ->
                 case System.Random.TF.Gen.$wtfGenSplit
                        ww
                        ww1
                        ww2
                        ww3 of ww7 { (#,#) ww8 ww9 ->
                 case ww9 of ww4 { System.Random.TF.Gen.TFGen ww5 ww6 ww10 ww11 ww12 ww13 ->
                 case System.Random.TF.Gen.$wtfGenSplit
                        ww5
                        ww6
                        ww10
                        ww11 of ww14 { (#,#) ww15 ww16 ->
                 (# Test.QuickCheck.Arbitrary.$fArbitrary1IntMap_$sarbitrarySizedIntegral
                      ww8 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))
                      w,
                    Test.QuickCheck.Arbitrary.$fArbitrary1IntMap_$sarbitrarySizedIntegral
                      ww15 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0]))
                      w #) } } }) -}
bc88e7a4bbcca252138e5c7da6a8ff58
  $wgenerateSudokuProblem ::
    GHC.Types.Int
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe (GHC.Types.IO Lecture5.Node) #)
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><S,U>, Inline: [0] -}
84166533ba9d718677fe6a60a07dcbbe
  $wgetPositionForBlock ::
    GHC.Prim.Int# -> (# Lecture5.Row, Lecture5.Column #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.<=# ww 0# of lwild {
                   DEFAULT
                   -> case GHC.Prim.<=# ww 3# of lwild1 {
                        DEFAULT
                        -> case GHC.Prim.<=# ww 6# of lwild2 {
                             DEFAULT
                             -> case GHC.Prim.<=# ww 9# of lwild3 {
                                  DEFAULT
                                  -> case Lecture5.getPositionForBlock2
                                     ret_ty (# Lecture5.Row, Lecture5.Column #)
                                     of {}
                                  1#
                                  -> (# case GHC.Classes.modInt#
                                               (GHC.Prim.-# ww 1#)
                                               3# of ww2 { DEFAULT ->
                                        GHC.Types.I# (GHC.Prim.+# 1# (GHC.Prim.*# 3# ww2)) },
                                        Lecture5.consistent3 #) }
                             1#
                             -> (# case GHC.Classes.modInt#
                                          (GHC.Prim.-# ww 1#)
                                          3# of ww2 { DEFAULT ->
                                   GHC.Types.I# (GHC.Prim.+# 1# (GHC.Prim.*# 3# ww2)) },
                                   Lecture5.consistent4 #) }
                        1#
                        -> (# case GHC.Classes.modInt#
                                     (GHC.Prim.-# ww 1#)
                                     3# of ww2 { DEFAULT ->
                              GHC.Types.I# (GHC.Prim.+# 1# (GHC.Prim.*# 3# ww2)) },
                              Lecture5.consistent5 #) }
                   1#
                   -> case Lecture5.getPositionForBlock1
                      ret_ty (# Lecture5.Row, Lecture5.Column #)
                      of {} }) -}
6a84b4d11a0ab2ca06807fa7a2dfe1f8
  $wgrid2sud ::
    Lecture5.Grid -> GHC.Prim.Int# -> GHC.Prim.Int# -> Lecture5.Value
  {- Arity: 3, Strictness: <S,1*U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Grid)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#) ->
                 GHC.List.$w!!
                   @ Lecture5.Value
                   (GHC.List.$w!! @ [Lecture5.Value] w (GHC.Prim.-# ww 1#))
                   (GHC.Prim.-# ww1 1#)) -}
464b69a55d0f6a716458e9e1e4ce6778
  $wgrow ::
    (node -> [node]) -> node -> (# node, [Lecture5.Tree node] #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><L,U>,
     Inline: [0] -}
5d43d0e49a29737f29ad6a6457764ea0
  $wlength3rd :: [c] -> [c] -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ @ a @ b @ c (ww :: [c]) (ww1 :: [c]) ->
                 case GHC.List.$wlenAcc @ c ww 0# of ww2 { DEFAULT ->
                 case GHC.List.$wlenAcc @ c ww1 0# of ww3 { DEFAULT ->
                 case GHC.Prim.<# ww2 ww3 of lwild {
                   DEFAULT
                   -> case GHC.Prim.==# ww2 ww3 of lwild1 {
                        DEFAULT -> GHC.Types.GT 1# -> GHC.Types.EQ }
                   1# -> GHC.Types.LT } } }) -}
15e149551bc8d3d37339c1627546084d
  $wnrcSameBlock ::
    GHC.Prim.Int#
    -> Lecture5.Column
    -> Lecture5.Row
    -> Lecture5.Column
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <S,1*U><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: Lecture5.Row)
                   (ww3 :: Lecture5.Column) ->
                 case ww of wild {
                   DEFAULT
                   -> case ww1 of wild1 { GHC.Types.I# x ->
                      case x of wild2 {
                        DEFAULT
                        -> case ww2 of wild3 { GHC.Types.I# x1 ->
                           case x1 of wild4 {
                             DEFAULT
                             -> case ww3 of wild5 { GHC.Types.I# x2 ->
                                case x2 of wild6 {
                                  DEFAULT
                                  -> case GHC.Classes.$fEq[]_$s$c==
                                            (Lecture5.nrcBl (GHC.Types.I# wild))
                                            (Lecture5.nrcBl wild3) of wild7 {
                                       GHC.Types.False -> GHC.Types.False
                                       GHC.Types.True
                                       -> GHC.Classes.$fEq[]_$s$c==
                                            (Lecture5.nrcBl wild1)
                                            (Lecture5.nrcBl wild5) }
                                  1# -> GHC.Types.False
                                  5# -> GHC.Types.False
                                  9# -> GHC.Types.False } }
                             1# -> GHC.Types.False
                             5# -> GHC.Types.False
                             9# -> GHC.Types.False } }
                        1# -> GHC.Types.False
                        5# -> GHC.Types.False
                        9# -> GHC.Types.False } }
                   1# -> GHC.Types.False
                   5# -> GHC.Types.False
                   9# -> GHC.Types.False }) -}
53584a014c0c491fd32da8c2539ffe5e
  $wnrcSubGrid ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   lvl46 :: [GHC.Types.Int] = Lecture5.nrcBl ww1
                 } in
                 letrec {
                   go1 :: [GHC.Types.Int] -> [Lecture5.Value]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Value
                       : y ys
                       -> let {
                            z :: [Lecture5.Value] = go1 ys
                          } in
                          letrec {
                            go2 :: [GHC.Types.Int] -> [Lecture5.Value]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1 -> GHC.Types.: @ Lecture5.Value (w (y, y1)) (go2 ys1) }
                          } in
                          go2 lvl46 }
                 } in
                 go1 (Lecture5.nrcBl ww)) -}
94f92eb877a18154eca2f8b46c958870
  $wnrcSubgridInjective ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   xs :: [Lecture5.Value]
                   = GHC.List.filter
                       @ GHC.Types.Int
                       Lecture5.consistent2
                       (Lecture5.$wnrcSubGrid w ww ww1)
                 } in
                 GHC.Classes.$fEq[]_$s$c==
                   (Data.OldList.nubBy @ Lecture5.Value GHC.Classes.eqInt xs)
                   xs) -}
a48eae98c35db839cb020d395ca5090b
  $wremoveBlocksFromSudoku ::
    GHC.Prim.Int#
    -> [GHC.Types.Int]
    -> GHC.Types.IO Lecture5.Node
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 4, Strictness: <S,1*U><L,U><C(S),1*C1(U(U,U(U,U)))><S,U>,
     Inline: [0] -}
e4526ea0cbef767d0169f073f253354c
  $wrsuccNode ::
    GHC.Types.Bool
    -> Lecture5.Sudoku
    -> [Lecture5.Constraint]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 4, Strictness: <L,U><L,C(U)><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Bool)
                   (ww :: Lecture5.Sudoku)
                   (ww1 :: [Lecture5.Constraint])
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genNonSolvedSudoku7 ww1 w1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> (# ipv, GHC.Types.[] @ Lecture5.Node #)
                   : ds2 ds3
                   -> (# ipv,
                         case ds2 of ww2 { (,,) ww3 ww4 ww5 ->
                         Lecture5.$wextendNode
                           ww
                           (Lecture5.genNonSolvedSudoku_go wild ww1)
                           ww3
                           ww4
                           ww5
                           w } #) } }) -}
79ce52c6cc42100fb60c5791c19b5c2b
  $wsameBlock ::
    Lecture5.Row
    -> Lecture5.Column
    -> Lecture5.Row
    -> Lecture5.Column
    -> GHC.Types.Bool
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column)
                   (ww2 :: Lecture5.Row)
                   (ww3 :: Lecture5.Column) ->
                 case GHC.Classes.$fEq[]_$s$c==
                        (Lecture5.bl ww)
                        (Lecture5.bl ww2) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> GHC.Classes.$fEq[]_$s$c==
                        (Lecture5.bl ww1)
                        (Lecture5.bl ww3) }) -}
390def26b60683e5365fc9575050ba0b
  $wsameLen :: [Lecture5.Value] -> [Lecture5.Value] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: [Lecture5.Value]) (ww1 :: [Lecture5.Value]) ->
                 case GHC.List.$wlenAcc @ GHC.Types.Int ww 0# of ww2 { DEFAULT ->
                 case GHC.List.$wlenAcc @ GHC.Types.Int ww1 0# of ww3 { DEFAULT ->
                 GHC.Prim.tagToEnum# @ GHC.Types.Bool (GHC.Prim.==# ww2 ww3) } }) -}
730b36c29b3d67b54cc0bc775e99e985
  $wshowVal :: GHC.Prim.Int# -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case ww of ds {
                   DEFAULT
                   -> case GHC.Show.$wshowSignedInt
                             0#
                             ds
                             (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                      GHC.Types.: @ GHC.Types.Char ww5 ww6 }
                   0# -> Lecture5.showVal1 }) -}
6e3eb176022730cff0e72f0652ca6835
  $wsubGrid ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   lvl46 :: [GHC.Types.Int] = Lecture5.bl ww1
                 } in
                 letrec {
                   go1 :: [GHC.Types.Int] -> [Lecture5.Value]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Value
                       : y ys
                       -> let {
                            z :: [Lecture5.Value] = go1 ys
                          } in
                          letrec {
                            go2 :: [GHC.Types.Int] -> [Lecture5.Value]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1 -> GHC.Types.: @ Lecture5.Value (w (y, y1)) (go2 ys1) }
                          } in
                          go2 lvl46 }
                 } in
                 go1 (Lecture5.bl ww)) -}
7a9c7caacb45ec8c1627ec15fcb91704
  $wsubgridInjective ::
    Lecture5.Sudoku
    -> Lecture5.Row -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 3, Strictness: <L,C(U)><L,U><L,U>, Inline: [0],
     Unfolding: (\ (w :: Lecture5.Sudoku)
                   (ww :: Lecture5.Row)
                   (ww1 :: Lecture5.Column) ->
                 let {
                   xs :: [Lecture5.Value]
                   = GHC.List.filter
                       @ GHC.Types.Int
                       Lecture5.consistent2
                       (Lecture5.$wsubGrid w ww ww1)
                 } in
                 GHC.Classes.$fEq[]_$s$c==
                   (Data.OldList.nubBy @ Lecture5.Value GHC.Classes.eqInt xs)
                   xs) -}
18e58c86bc85ab5e3336588e2792c4eb
  $wtakeT ::
    GHC.Prim.Int#
    -> a -> [Lecture5.Tree a] -> (# a, [Lecture5.Tree a] #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U><L,1*U>,
     Inline: [0] -}
c98309eca6ca30b06e6c5766bff78fa9
  $wtestIsMinimal ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S,U><S,U><S,U>, Inline: [0] -}
25d8bbb1961346a4d762b1b6fee64a1d
  type Column = GHC.Types.Int
f40e8d607585c1f0789630ff340aa80f
  type Constraint = (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
1d25a9f0a3710cc8e8f5395b8d8bdfaf
  type Constrnt = [[Lecture5.Position]]
9c0b60f99140a33c30cbff75b8488d1a
  type Grid = [[Lecture5.Value]]
cc584e322355f8115508dfa59b7192df
  type Node = (Lecture5.Sudoku, [Lecture5.Constraint])
a431caf604fb347e136a0d3c8fb3a69b
  type Position = (Lecture5.Row, Lecture5.Column)
8b54be91e21ace619aafd6de10418606
  type Row = GHC.Types.Int
977d8c5f5b671a22c8332a134939329e
  type Sudoku = (Lecture5.Row, Lecture5.Column) -> Lecture5.Value
d08eed8db65524a395f0f0bfb83d73e2
  data Tree a = T a [Lecture5.Tree a]
1b11e40a7ce70e3c8b21fbe0dfea5a4f
  type Value = GHC.Types.Int
853461b03b9a6055bbb0683d192be88a
  bl :: GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 letrec {
                   go1 :: [[GHC.Types.Int]] -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [[GHC.Types.Int]]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Int
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Int
                                 GHC.Classes.$fEqInt
                                 x
                                 y of wild1 {
                            GHC.Types.False -> go1 ys
                            GHC.Types.True -> GHC.Base.++ @ GHC.Types.Int y (go1 ys) } }
                 } in
                 go1 Lecture5.blocks) -}
4c3cbe4ab040ce7fbe3918ce2516d7f3
  blockConstrnt :: [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Unfolding: (Lecture5.blockConstrnt_go Lecture5.blocks) -}
95e0f2951655923f5319e7363bc2a3df
  blockConstrnt_go ::
    [[GHC.Types.Int]] -> [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Arity: 1, Strictness: <S,1*U> -}
ef3792ea5e60da6c4e30264dfad8a8c6
  blocks :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.blocks5
                   Lecture5.blocks1) -}
da14f1646ffc1de6a9f4ef26f9d4935e
  blocks1 :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.blocks4
                   Lecture5.blocks2) -}
3f18cbf36293c0c00e26595c64d4712a
  blocks2 :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.blocks3
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
323b7418bb7b73ef010750e191e747bf
  blocks3 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 7# 9#) -}
0cb483d416bf3ef01a39acb3d513c3ef
  blocks4 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 4# 6#) -}
2da786eedc8bbdd21c2e558d6d32a5a9
  blocks5 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1# 3#) -}
88f1662e851b4b5439268fdcbf4d2a7c
  checkAllErasedHints :: Lecture5.Node -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U(C(U(U)),A)>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.checkAllErasedHints1
                  `cast`
                (<Lecture5.Node>_R ->_R Data.Semigroup.Internal.N:All[0]) -}
2edb718dcf14dda41bcc054ab33f3ff7
  checkAllErasedHints1 ::
    Lecture5.Node -> Data.Semigroup.Internal.All
  {- Arity: 1, Strictness: <L,U(C(U(U)),A)>,
     Unfolding: (\ (node :: Lecture5.Node) ->
                 letrec {
                   go1 :: [(Lecture5.Row, Lecture5.Column)]
                          -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [(Lecture5.Row, Lecture5.Column)]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.True `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                       : y ys
                       -> case Lecture5.search
                                 @ Lecture5.Node
                                 Lecture5.checkAllErasedHints2
                                 Lecture5.solved
                                 (GHC.Types.:
                                    @ Lecture5.Node
                                    (Lecture5.eraseN node y)
                                    (GHC.Types.[] @ Lecture5.Node)) of wild1 {
                            [] -> go1 ys
                            : x ds1
                            -> case ds1 of wild2 {
                                 []
                                 -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                                 : y1 zs -> go1 ys } } }
                 } in
                 go1
                   (Lecture5.filledPositions
                      (case node of wild { (,) x ds1 -> x }))) -}
d62caa43834c07bd954ed771ad294aa7
  checkAllErasedHints2 ::
    (Lecture5.Sudoku, [Lecture5.Constraint]) -> [Lecture5.Node]
  {- Arity: 1, Strictness: <S(LS),1*U(C(U),1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: (Lecture5.Sudoku, [Lecture5.Constraint])) ->
                 case ds of wild { (,) s ds1 ->
                 case ds1 of wild1 {
                   [] -> GHC.Types.[] @ Lecture5.Node
                   : p ps -> Lecture5.extendNode (s, ps) p GHC.Types.True } }) -}
8ff779d28e83be271e44c8903ef3e732
  colInjective ::
    Lecture5.Sudoku -> Lecture5.Column -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,C(U(U))><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (c :: Lecture5.Column) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Int
                       : y ys
                       -> case s (y, c) of wild1 { GHC.Types.I# x ->
                          case x of wild2 {
                            DEFAULT -> GHC.Types.: @ GHC.Types.Int wild1 (go1 ys)
                            0# -> go1 ys } } }
                 } in
                 let {
                   xs :: [Lecture5.Value] = go1 Lecture5.positions
                 } in
                 GHC.Classes.$fEq[]_$s$c==
                   (Data.OldList.nubBy @ Lecture5.Value GHC.Classes.eqInt xs)
                   xs) -}
f9a0fbefe2ec471d2d5feab0bc0d53c2
  columnConstrnt :: [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Unfolding: (Lecture5.columnConstrnt_go Lecture5.positions) -}
1be4b7d2582d80095f6f7713389895d4
  columnConstrnt_go ::
    [GHC.Types.Int] -> [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Arity: 1, Strictness: <S,1*U> -}
2717aa2ac421a66b4a3c986e2ed244f8
  consistent :: Lecture5.Sudoku -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,C(U(U))>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.consistent1
                  `cast`
                (<Lecture5.Sudoku>_R ->_R Data.Semigroup.Internal.N:All[0]) -}
4f37361f82da34587960555d09ec2ce1
  consistent1 :: Lecture5.Sudoku -> Data.Semigroup.Internal.All
  {- Arity: 1, Strictness: <L,C(U(U))>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 let {
                   z :: Data.Semigroup.Internal.All <join 0>
                   = let {
                       exit :: Data.Semigroup.Internal.All <join 0>
                       = let {
                           c :: Lecture5.Row -> Data.Semigroup.Internal.All -> GHC.Types.Bool
                             {- Arity: 2, Strictness: <L,U><L,1*U> -}
                           = \ (ds :: Lecture5.Row)
                               (ds1 :: Data.Semigroup.Internal.All)[OneShot] ->
                             case Lecture5.$wsubgridInjective
                                    s
                                    ds
                                    Lecture5.consistent5 of wild {
                               GHC.Types.False -> GHC.Types.False
                               GHC.Types.True
                               -> case Lecture5.$wsubgridInjective
                                         s
                                         ds
                                         Lecture5.consistent4 of wild1 {
                                    GHC.Types.False -> GHC.Types.False
                                    GHC.Types.True
                                    -> case Lecture5.$wsubgridInjective
                                              s
                                              ds
                                              Lecture5.consistent3 of wild2 {
                                         GHC.Types.False -> GHC.Types.False
                                         GHC.Types.True
                                         -> ds1 `cast` (Data.Semigroup.Internal.N:All[0]) } } }
                         } in
                         (c Lecture5.consistent5
                            (c Lecture5.consistent4
                               (c Lecture5.consistent3
                                  (case Lecture5.$wnrcSubgridInjective
                                          s
                                          Lecture5.nrcConstrnt8
                                          Lecture5.nrcConstrnt8 of wild {
                                     GHC.Types.False
                                     -> GHC.Types.False
                                          `cast`
                                        (Sym (Data.Semigroup.Internal.N:All[0]))
                                     GHC.Types.True
                                     -> case Lecture5.$wnrcSubgridInjective
                                               s
                                               Lecture5.nrcConstrnt8
                                               Lecture5.nrcConstrnt6 of wild1 {
                                          GHC.Types.False
                                          -> GHC.Types.False
                                               `cast`
                                             (Sym (Data.Semigroup.Internal.N:All[0]))
                                          GHC.Types.True
                                          -> case Lecture5.$wnrcSubgridInjective
                                                    s
                                                    Lecture5.nrcConstrnt6
                                                    Lecture5.nrcConstrnt8 of wild2 {
                                               GHC.Types.False
                                               -> GHC.Types.False
                                                    `cast`
                                                  (Sym (Data.Semigroup.Internal.N:All[0]))
                                               GHC.Types.True
                                               -> (Lecture5.$wnrcSubgridInjective
                                                     s
                                                     Lecture5.nrcConstrnt6
                                                     Lecture5.nrcConstrnt6)
                                                    `cast`
                                                  (Sym (Data.Semigroup.Internal.N:All[0])) } } }))
                                 `cast`
                               (Sym (Data.Semigroup.Internal.N:All[0])))
                              `cast`
                            (Sym (Data.Semigroup.Internal.N:All[0])))
                           `cast`
                         (Sym (Data.Semigroup.Internal.N:All[0]))
                     } in
                     letrec {
                       go1 :: [GHC.Types.Int] -> Data.Semigroup.Internal.All
                         <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                       = \ (ds :: [GHC.Types.Int]) ->
                         case ds of wild {
                           [] -> exit
                           : y ys
                           -> case Lecture5.colInjective s y of wild1 {
                                GHC.Types.False
                                -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                                GHC.Types.True -> go1 ys } }
                     } in
                     go1 Lecture5.positions
                 } in
                 letrec {
                   go1 :: [GHC.Types.Int] -> Data.Semigroup.Internal.All
                     <join 1> {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> z
                       : y ys
                       -> case Lecture5.rowInjective s y of wild1 {
                            GHC.Types.False
                            -> GHC.Types.False `cast` (Sym (Data.Semigroup.Internal.N:All[0]))
                            GHC.Types.True -> go1 ys } }
                 } in
                 go1 Lecture5.positions) -}
af839a65d6e1eb752f7bfc60754f3e02
  consistent2 :: Lecture5.Value -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lecture5.Value) ->
                 case ds of wild { GHC.Types.I# x ->
                 case x of wild1 {
                   DEFAULT -> GHC.Types.True 0# -> GHC.Types.False } }) -}
6ab172684c8846060780d3b6cba56a37
  consistent3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 7#) -}
d5c806875dfc4d4a32a800e1c927ddf9
  consistent4 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 4#) -}
538ce2adb12e58233f1a35c3c00d8415
  consistent5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
14f6ec46bb7b47d386c05062b1acc33f
  constraints :: Lecture5.Sudoku -> [Lecture5.Constraint]
  {- Arity: 1, Strictness: <L,C(U(U))>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 letrec {
                   go1 :: [(Lecture5.Row, Lecture5.Column)]
                          -> [(Lecture5.Row, Lecture5.Column, [Lecture5.Value])]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [(Lecture5.Row, Lecture5.Column)]) ->
                     case ds of wild {
                       []
                       -> GHC.Types.[] @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                       : y ys
                       -> case y of wild1 { (,) r c ->
                          GHC.Types.:
                            @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                            (r, c, Lecture5.freeAtPositions s wild1)
                            (go1 ys) } }
                 } in
                 Data.OldList.sortBy
                   @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                   (Lecture5.length3rd
                      @ Lecture5.Row
                      @ Lecture5.Column
                      @ Lecture5.Value)
                   (go1 (Lecture5.openPositions s))) -}
7faa0351ef8ca096e012d2187c4252cf
  constrnts :: [[[(GHC.Types.Int, GHC.Types.Int)]]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [[(GHC.Types.Int, GHC.Types.Int)]]
                   Lecture5.rowConstrnt
                   Lecture5.constrnts1) -}
bb621be0f5d79ec95ea72b657165f071
  constrnts1 :: [[[(GHC.Types.Int, GHC.Types.Int)]]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [[(GHC.Types.Int, GHC.Types.Int)]]
                   Lecture5.columnConstrnt
                   Lecture5.constrnts2) -}
5b4c81d7bf9470f0c80ff2149754e982
  constrnts2 :: [[[(GHC.Types.Int, GHC.Types.Int)]]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [[(GHC.Types.Int, GHC.Types.Int)]]
                   Lecture5.blockConstrnt
                   Lecture5.constrnts3) -}
63e727420fbc115ed0f9d3ae619904ce
  constrnts3 :: [[[(GHC.Types.Int, GHC.Types.Int)]]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [[(GHC.Types.Int, GHC.Types.Int)]]
                   Lecture5.nrcConstrnt
                   (GHC.Types.[] @ [[(GHC.Types.Int, GHC.Types.Int)]])) -}
5744f9418de78c92524b1a5b0f228f33
  count :: Lecture5.Tree a -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: Lecture5.Tree a) ->
                 case w of ww { Lecture5.T ww1 ww2 ->
                 case Lecture5.count1 @ a ww2 0# of ww3 { DEFAULT ->
                 GHC.Types.I# ww3 } }) -}
88a247c277145d10cc72f35a96704c7b
  count1 :: [Lecture5.Tree a] -> GHC.Prim.Int# -> GHC.Prim.Int#
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,U>, Inline: [0] -}
a804c64eb342ccc245ad711128a2567e
  createBlock ::
    Lecture5.Position
    -> (GHC.Types.Int, GHC.Types.Int) -> [Lecture5.Position]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),U(U))><S(S(S)L),1*U(1*U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Position)
                   (w1 :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Lecture5.$wcreateBlock ww4 ww2 ww9 ww7 } } } }) -}
6f0adee7f68719507f4f4c3addf657cd
  deleteN :: GHC.Types.Int -> [a] -> [a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(1*U)><S,1*U> -}
052c605539ded329ff43baeadb82595b
  emptyN :: Lecture5.Node
  {- Strictness: m,
     Unfolding: ((Lecture5.emptyN2, Lecture5.emptyN1)) -}
5a00e4df5569a2fc30ee69daa6a49629
  emptyN1 :: [Lecture5.Constraint]
  {- Unfolding: (Lecture5.constraints Lecture5.emptyN2) -}
77c22a187f55150aef674b518fa8abae
  emptyN2 :: (Lecture5.Row, Lecture5.Column) -> Lecture5.Value
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: (Lecture5.Row, Lecture5.Column)) ->
                 Lecture5.$fShowTree1) -}
3107d28428ee2c09fc234892bc46f34a
  eraseN ::
    Lecture5.Node -> (Lecture5.Row, Lecture5.Column) -> Lecture5.Node
  {- Arity: 2, Strictness: <L,U(C(U(U)),A)><L,U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Node) (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case Lecture5.$weraseN w w1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
fb989f08e59262973da3c8eb8172ba71
  eraseN' ::
    Lecture5.Node -> [(Lecture5.Row, Lecture5.Column)] -> Lecture5.Node
  {- Arity: 2, Strictness: <L,1*U(1*U,A)><L,1*U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Node)
                   (w1 :: [(Lecture5.Row, Lecture5.Column)]) ->
                 case Lecture5.$weraseN' w w1 of ww { (#,#) ww1 ww2 ->
                 (ww1, ww2) }) -}
11806f4543a8f91c89b6fd6de49287a1
  eraseS ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> Lecture5.Sudoku
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U(U))><S(S(S)L),1*U(1*U(U),1*U(U))><S(S(S)L),1*U(1*U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column))
                   (w2 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w2 of ww5 { (,) ww6 ww7 ->
                 case ww6 of ww8 { GHC.Types.I# ww9 ->
                 Lecture5.$weraseS w ww4 ww2 ww9 ww7 } } } }) -}
73bb5e8f2b74b7f4d24c1fe16e04d128
  eraseS' ::
    Lecture5.Sudoku
    -> [(Lecture5.Row, Lecture5.Column)] -> Lecture5.Sudoku
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (GHC.Base.foldr
                   @ (Lecture5.Row, Lecture5.Column)
                   @ Lecture5.Sudoku
                   Lecture5.eraseS'1) -}
b8183c53f47342b7caef3f921cd51f53
  eraseS'1 ::
    (Lecture5.Row, Lecture5.Column)
    -> Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column)
    -> Lecture5.Value
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(S(S)L),1*U(1*U(U),1*U(U))><L,1*C1(U(U))><S(S(S)L),1*U(1*U(U),U(U))>,
     Unfolding: InlineRule (3, True, True)
                (\ (x :: (Lecture5.Row, Lecture5.Column))
                   (y :: Lecture5.Sudoku)
                   (eta :: (Lecture5.Row, Lecture5.Column)) ->
                 Lecture5.eraseS y x eta) -}
b475de6a92241346ead612ae073cc125
  example1 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example88
                   Lecture5.example7) -}
7e2939c8e4da9b404f572da73808103f
  example10 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example54
                   Lecture5.example11) -}
3b62cae0ed54b42c8955ce12805f683a
  example100 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example115
                   Lecture5.example101) -}
9ff2db13377ba08aa46bf15dc4e8cc7d
  example101 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example110
                   Lecture5.example102) -}
0ad4380eab064fbb207afdad0c7e47da
  example102 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example103
                   (GHC.Types.[] @ [Lecture5.Value])) -}
56d824570896599b48e886c2b718f6f2
  example103 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example104) -}
5825f1ba36ae2c284b34f50b8e6d30e3
  example104 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   Lecture5.example105) -}
3afbbea0e83b5d9744fc3b1f1ac3d151
  example105 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example106) -}
02cf132afc2ae37da72647d62158f11d
  example106 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example107) -}
7ac0fd8f4d86159bdfe69fddd05c6ade
  example107 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example108) -}
143cd958ce39aaf54cebb416e868f523
  example108 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example109) -}
ba3bd8f42b1c57106e8979039423b49f
  example109 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example87) -}
70d2896f5c5af6f97c446394ea01737c
  example11 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example45
                   Lecture5.example12) -}
02c61c41928bd936d53b78e0db390c01
  example110 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example111) -}
da5d373c5d174d47df84da814fbc8dbb
  example111 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example112) -}
1dfd469ef2d7f6ac357e123bfe5a375a
  example112 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example113) -}
032050f0b87fc2f26b274ecf1f2dd400
  example113 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example114) -}
961fac60f4052023ba46aee736c0440f
  example114 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example93) -}
09bb7bd3e1e521d146fbe67959e8593a
  example115 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example116) -}
1f782adf732bf3f1be00a6a7308ff6bb
  example116 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example117) -}
0bd17244c3b4828ec4d461dee2a3a5eb
  example117 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example118) -}
efe7e0084e784b74ce46fd0d5539786e
  example118 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   Lecture5.example92) -}
e79e0a3f9c27d2c2722b18374bdfbc0f
  example119 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example120) -}
4c88904e016ecb2d320106a2667a42e4
  example12 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example36
                   Lecture5.example13) -}
1f777deb083663666653d6ba56f0f2b0
  example120 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example121) -}
a9f4dd8639874c0e335dccb368072840
  example121 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example122) -}
b4da1ccbb20922c9da94e3915f1f46d0
  example122 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example123) -}
3ed4e0f4e383e0befb7cc12a1ae26552
  example123 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example124) -}
29bd20d1621273b32a0e4321b5293590
  example124 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example78) -}
def224ee42ca58dee6a36646c2597b4f
  example125 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example126) -}
ba86611fcfdb7bbb393d626625123a8b
  example126 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example127) -}
cc59ed10921c1ba395518a48b018ef64
  example127 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example128) -}
d323135057cbb18bd85a24c1a6d929d2
  example128 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example129) -}
0c43c78c41657ba056ef5d41d8714fb1
  example129 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example130) -}
efef6e657192f07cbcc0798938a6f215
  example13 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example26
                   Lecture5.example14) -}
7fc6e43f38e7a1a9b7e87483c288af07
  example130 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example131) -}
58f8e859f9581a017c4bc62187249727
  example131 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example132) -}
7ec913fe7e35641ff32ed11b8b81b600
  example132 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example133) -}
106ded0059ecf8eb9883d271ec4fe288
  example133 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   (GHC.Types.[] @ Lecture5.Value)) -}
7c7ec15a7f689619f781942a99331169
  example134 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example135) -}
b6767d71a3744a29dff87a075635030b
  example135 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example136) -}
344f716e0980f2071a58fcad9fb6729b
  example136 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example137) -}
46c4eb83dcc7f17de29288c77defa7c9
  example137 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example138) -}
56fff48fa5b13cfa1f3409b460a8fca4
  example138 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example139) -}
46aeab9bfd0b823fdfcffeaae9df16a5
  example139 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example140) -}
49c638acfa6c1e90718e78a55cd1c03c
  example14 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example15
                   (GHC.Types.[] @ [Lecture5.Value])) -}
2a34993aeea99e1d219f2471de9640ee
  example140 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example141) -}
a833e2ab2492338be8437f39676357f8
  example141 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example44) -}
90196dfd4df64cf935fede9786564aa8
  example142 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example143) -}
f597668e49b6d7c869d7e4f90916e36f
  example143 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example144) -}
7ca875532b2338ff67eaa6c543348f56
  example144 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example145) -}
e497b4dd731a80a9901bed53ef7344d3
  example145 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example146) -}
025751d70414815833bf3471eb96998c
  example146 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example147) -}
1733522c519bbb37558f18102496c094
  example147 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example148) -}
64b611dc917939d25a7388424d290413
  example148 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example149) -}
27e26ed3f7f3e92b27a5db68823d4de1
  example149 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example150) -}
eaf010495f4aaa31940e04c7d1d65369
  example15 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example16) -}
399bc92497154849539efea07fe1fd99
  example150 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   (GHC.Types.[] @ Lecture5.Value)) -}
785e289890f13e6bff4b6bd77c13babf
  example151 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example152) -}
581dcae09bf1fe4cfdcb0f243f03fd69
  example152 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example153) -}
ba6b9a9b70479067f4138bdf46b26a56
  example153 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example154) -}
ba414edbef7d70d4594c3fa217cadfef
  example154 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example155) -}
10fb59284fced367c087d5b8b4c6437e
  example155 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example68) -}
9d61bea7f1afd2e083c194d846bca1a8
  example156 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example157) -}
8d624252759cdcf8b8c8fbaacd824178
  example157 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example158) -}
3d7538a7e29522c08d12dc5ffda7ea1c
  example158 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example159) -}
44f23b022a777dbd91cf6e65a1020e90
  example159 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example160) -}
a533684e37426bf158e2faaf730c3e52
  example16 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example17) -}
c0ca025eebe9bd2437036639d0187d5e
  example160 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example161) -}
9bfae25d816b9cef9121a68afe1aca60
  example161 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example162) -}
e98c1e647c5482e4ba1653b2c1684073
  example162 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example163) -}
529917a9406ec8ffca5899b01f7181c7
  example163 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example164) -}
480c67f5fd45d74efa295b197831c286
  example164 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   (GHC.Types.[] @ Lecture5.Value)) -}
42b6bccfc4555b64237e6f67d38d481c
  example165 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example183
                   Lecture5.example166) -}
4d6abea38999542d3ff9b89ba2ddbf34
  example166 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example182
                   Lecture5.example167) -}
57579228d42125742e937f3f9f2b05f0
  example167 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example181
                   Lecture5.example168) -}
1bb9942c9defd99a6d26fb771a865ff8
  example168 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example180
                   Lecture5.example169) -}
31cb7d04194528b6cc608ed424799aea
  example169 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example179
                   Lecture5.example170) -}
7a5c6e06f4e249fd0ffbd51fcf112eaa
  example17 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example18) -}
2ce0003b2e40702a2b41220bc458afd9
  example170 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example178
                   Lecture5.example171) -}
10562dd4f84ebcc1fdf47069f61ca413
  example171 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example177
                   Lecture5.example172) -}
850d2b22c3be906207c85460a8ea3a6e
  example172 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example173
                   (GHC.Types.[] @ [Lecture5.Value])) -}
6c251360297e17905fb4806791bba641
  example173 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example174) -}
bef6eefa000975149e7a25f7a0578743
  example174 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example175) -}
38740a8c43c89ed8c0130374aafb4f24
  example175 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example176) -}
b868629bc9e79de53098cd9a3fc4af22
  example176 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example114) -}
36c9fcc81bbcab972440b9a74982f60e
  example177 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example174) -}
70a8468483d48525c4ca82101bc78abf
  example178 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example174) -}
62afe286678bf1e70afe6bdf7e38b9b0
  example179 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.example174) -}
8e6e29864a9c5d00f320234fa27f13c9
  example18 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example19) -}
dc68abcfcc1399d14874ed23e68f0c81
  example180 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example174) -}
b2b4c108aca319d94695ecdc3216b8be
  example181 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   Lecture5.example174) -}
c35fddedb089adc2fe8472c0f0ca00e3
  example182 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example174) -}
8d58fb5c05714e194819b770db95f710
  example183 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example174) -}
a1a842decd5e44d6e2d1d9904d6276e9
  example184 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example185) -}
14a5dfe98a387830b02bc00b9cd40f93
  example185 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example186) -}
973a7989cbfef82ec7faaa6de30ab43c
  example186 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example187) -}
ea913e9b623afbbbba3fce04df558b94
  example187 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   Lecture5.example188) -}
359bcdfea831164d889bd969da524070
  example188 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example189) -}
25489ba23f03acf6c1af2c3a42759745
  example189 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.example190) -}
6835047a08d22b60e176564f63b517ff
  example19 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example20) -}
72e185015223f3d0d9988e0b9e967e1d
  example190 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example191) -}
35beb6ea6d9e7c1d09d99ea111617b6c
  example191 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example23) -}
beddbebfed788725d0aeadf2e9b40f4c
  example192 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example239
                   Lecture5.example193) -}
9bc6bce373179741b14f4947556a7867
  example193 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example236
                   Lecture5.example194) -}
311a3fd3052ec5746e87cc03e985d9b6
  example194 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example232
                   Lecture5.example195) -}
a02636fe4e3306e42ac3bce841abf1f0
  example195 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example227
                   Lecture5.example196) -}
a23e44f45b416024cca5fb3143846c0e
  example196 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example221
                   Lecture5.example197) -}
c65963846d9d5d9be1543706e297b2d9
  example197 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example215
                   Lecture5.example198) -}
c0d7f4bf2add08d5c3bb8ab002375edf
  example198 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example208
                   Lecture5.example199) -}
e977d24c63a8a5d6c0e79eda9d72e9d8
  example199 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example200
                   (GHC.Types.[] @ [Lecture5.Value])) -}
9774ae2cac0f70eb55d37f8eb3d08c89
  example2 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example94
                   Lecture5.example7) -}
40a379b52038ba50bf57e636bee66e7a
  example20 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example21) -}
5524f9fd0d4d6eda24a31e1eb032dd03
  example200 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example201) -}
84c74d6e4190827fa4fc1ae5cbd8d05d
  example201 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example202) -}
0067b0dbd733e8fa24474c2becee66f9
  example202 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example203) -}
a6b544c5a9cebe9e40ce0d7c827256b0
  example203 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example204) -}
1453c2861322e097733e14a6f7cbf792
  example204 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example205) -}
2faa70f9f4848449e7a4b50f95aefd24
  example205 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example206) -}
f4ac49bd371332ab7c0aa71c7f43126f
  example206 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example207) -}
dfd01030cc46284d33c7953a0729987e
  example207 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example23) -}
b63b0b43ca80343a95e4cb1417fdc356
  example208 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example209) -}
1a8ec578ca9bdf32ca63dd2e9769be7f
  example209 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example210) -}
5d5822cd29e528d5d7304a2c8f52258b
  example21 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example22) -}
4fada279ccfa5e62176bbfaed50c3557
  example210 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example211) -}
98ce933ec93bfc7ce655628310595846
  example211 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example212) -}
150dc4d7f0d4dd8b300bf642f879d28a
  example212 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example213) -}
2de715dfdb5b964284be9d22b2d82da4
  example213 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example214) -}
793712c876460db4c54b87ae88d5179c
  example214 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example43) -}
b7355c0ae47d33bd4e7d38b6a8df0d19
  example215 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example216) -}
d8f8ca3ae5bdf83475725a6e71108c8f
  example216 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example217) -}
8728db9e400a6aeb663bc35e61a2cfad
  example217 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example218) -}
e577683754fd0e43428a09da0f8ea80a
  example218 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example219) -}
f5bef7b1f9f99bece1c93d2757dcf3e9
  example219 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example220) -}
0a19536cf9592e2e1ba8b7f22a8be968
  example22 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example23) -}
155c35a9f39dbbe6f4e30b2806016af8
  example220 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example109) -}
76e7b9bed6b92c2e12c89a86d7fa6d75
  example221 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example222) -}
1343756ffef33db26756d799b1dcbf8c
  example222 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example223) -}
b2b5177f3725e875b77fd1c39b14b304
  example223 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example224) -}
c5edf5cca9868f251ca47421dd81cdda
  example224 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example225) -}
708a51128b6ff7ba46007112458e177b
  example225 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example226) -}
d9e159ec33d719ca60ee0fbcf9aec4c3
  example226 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.example86) -}
50ac75c3409d9ab9323082f46b5111b9
  example227 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example228) -}
ba84454284cdc403428b5dfa17c2b6b6
  example228 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example229) -}
1bed9eaa1d985436faab0b1c0cfd6841
  example229 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example230) -}
5a7f2c9eba95f0bf7baac1f619831e72
  example23 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   (GHC.Types.[] @ Lecture5.Value)) -}
f5d60b7c735c6a84bd4364bede038195
  example230 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example231) -}
b2e166788440bbf61f8233fca6a4ba81
  example231 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example93) -}
c2951014edadc5e3b4fc07c05e914acc
  example232 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example233) -}
2572ee0b83e0853fcc2135f1df930e5b
  example233 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example234) -}
762698fb478606479d693dc32faf0ed3
  example234 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example235) -}
2cdb07bf2ead85dd86b6c4bff7d99e6c
  example235 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   Lecture5.example114) -}
af8b570c66ca46830b99fe09683fd756
  example236 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example237) -}
6fb87e4a41c1867a7f0ec126dbe30e63
  example237 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example238) -}
0b8c9c6c5a7efc52907905747817fd50
  example238 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example176) -}
3d09c655fad3d5b1f054a8c70d8b9857
  example239 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example240) -}
eb9969cdc31bcce210351dfaf750fc60
  example24 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 9#) -}
84f596961fd6a3b6d774011c6b0c3dd4
  example240 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example175) -}
4bff71abaa79531c24cdc4f1761e85f1
  example241 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example174) -}
996171cd9c6d53436c8a38c166f2bde0
  example25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 8#) -}
77b250f672efd005d32c575d16fffa7c
  example26 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example27) -}
53d09fca140cc1d80d6f1d4e73f9527a
  example27 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example28) -}
dceebee3ad16d20df68d33b89fa13f63
  example28 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example29) -}
9f1bf5d1632e200c0c6e081a97844134
  example29 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   Lecture5.example30) -}
fcf3f4274f68983ca12ccece4c7c7d72
  example3 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example156
                   Lecture5.example95) -}
256a1f06e79f58cfaec5964192420c6a
  example30 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example31) -}
bb4f042b687737a57ecff64f7db54d5d
  example31 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example32) -}
3af198d1acab0007cc7bb706b485e78b
  example32 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example33) -}
59b1b6b76d6f9ad41be02820d86635d9
  example33 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example34) -}
b89bc0cc764afd91df784b96fc859e29
  example34 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   (GHC.Types.[] @ Lecture5.Value)) -}
1cf4b0ff7b522bb0452e7ec0b40e828f
  example35 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 5#) -}
9c0258a950b504f1c9ff8683b3347e8b
  example36 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example37) -}
fbe9f7c007a91615da9833f284acd3d7
  example37 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.example38) -}
8aeaf03edcf7954054aeb733869ab4ae
  example38 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example39) -}
c1559d8ddf6bfaa03a1457238ef718c0
  example39 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example40) -}
a054d04187a145fc3a345bd1f1b8eea4
  example4 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example184
                   Lecture5.example165) -}
8e64de9f442e0e7433f84f30d3707e3a
  example40 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example41) -}
668fbc7a201d3f55a9205fcc0fd6ad2d
  example41 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example42) -}
705a93d7e53ffa96872cc5d4e2021947
  example42 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example43) -}
a0e7fbab809abf64c7fd46490a25aea9
  example43 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example44) -}
85c582674dca755fb32ad56e6271ba0e
  example44 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   (GHC.Types.[] @ Lecture5.Value)) -}
af8dac066a2ad28ec05e074007f863b7
  example45 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example46) -}
7370ebfd44a58c99baca1d15e2292ed9
  example46 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example47) -}
54e040af209b4c0dd0b5af2d43d5c81f
  example47 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example48) -}
81a78957c939ce66f73c4d150cca2fb1
  example48 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example49) -}
19ca8196a5c482f82654f41c3a277f94
  example49 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example50) -}
f8c092a196cc300c22538a85ba25950d
  example5 :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example241
                   Lecture5.example192) -}
96c9bf019680835e08da213d3e70976c
  example50 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example51) -}
3c32f312350980d608d9f0af6c1b37fd
  example51 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example52) -}
297809baffb93cf111e1d432d6477732
  example52 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example53) -}
6f8c4efd6ef9713c42081cbbaf7bec56
  example53 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   (GHC.Types.[] @ Lecture5.Value)) -}
35df300198eebe729429d3c1aa233e96
  example54 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   Lecture5.example55) -}
2952605813631fc14f8d02167c8bd16f
  example55 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example56) -}
9d4eabb5d316d7902952b9f3c064706d
  example56 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example57) -}
ba810dafdc39d443d7e3e65f63fde6d1
  example57 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example58) -}
f19cfabd5014d73a2bbb75fc683768e7
  example58 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example59) -}
457ee06b6e529455964a37355c6560cb
  example59 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example60) -}
15e3a27513f5b57a8e14b9dc1688b898
  example60 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example61) -}
2426c3d65971fffd35e44d826ca15d80
  example61 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example62) -}
949a557c2ab0bf8ffad1b05d06c440ba
  example62 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   (GHC.Types.[] @ Lecture5.Value)) -}
5b26291966ae96122190255595fbb94d
  example63 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example64) -}
4352f4ab3802e8dfe85cdb25ee2cfb01
  example64 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example65) -}
1232d4ca5dbbeec1be3da0ca55b234d2
  example65 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example66) -}
7f7c7b36f55d3251e110581f78d5ec4e
  example66 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example67) -}
00f88ff9d78d56952b3d655edaed9d78
  example67 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.example68) -}
821d0596b6f29f6acf0c34301221b927
  example68 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example69) -}
b4dbfa75bdb6bf77ae0d420f431950ac
  example69 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example70) -}
3b24778dac972a305137437d294d7dff
  example7 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example80
                   Lecture5.example8) -}
1320eebec644c424cdf56539ac04d0a1
  example70 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example71) -}
8c37b0be350ac9adbf905e6d645bb9ab
  example71 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   (GHC.Types.[] @ Lecture5.Value)) -}
d09b60a0bb8cf20e4af5bd1f8f34af45
  example72 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example73) -}
6fac9729d18f8f60fc05fdc695126bfb
  example73 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example74) -}
189648dd3252c076f889bc71994b4c10
  example74 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.example75) -}
2f80ad356435c6388ea3425f100c506f
  example75 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example76) -}
cf9eebca942f69fdee9759d0c2512fdd
  example76 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example77) -}
74203a39c412edce1038ebc2f64829b8
  example77 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example78) -}
c186f5a253ced6a73fe7c544f7175fa7
  example78 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example79) -}
46e55c5e743012e99ece07ac67893c9c
  example79 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.example44) -}
c54e8f22ca4e60cf88066754e7a43ea4
  example8 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example72
                   Lecture5.example9) -}
e3c5c903034c67e55a7700ad8b0dbdeb
  example80 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.example81) -}
6f6c49dcf15cb4697155ba11bfadcd49
  example81 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example82) -}
346a7825c7bcc030002bda05d109b9bf
  example82 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example83) -}
8f7ad319d5880b1928cd26565f5acf45
  example83 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.example84) -}
cc0f64d6ddab1c81092377bf75f3b6f1
  example84 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.example85) -}
ee0ad4f136528302b30c1889941be06c
  example85 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example86) -}
7e9b67ddbda5d275a28b5133388ba91e
  example86 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example87) -}
a87900269f2bcc632c91df52540b66ca
  example87 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example44) -}
56d51d3b3d033bd2eff1064d1162bfcc
  example88 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example35
                   Lecture5.example89) -}
7f625c979ae48d14ac7a00731f6a2f83
  example89 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example90) -}
41c49dc7e5c5424bd6282ca01b823166
  example9 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example63
                   Lecture5.example10) -}
986be15f52f0905d96fde3c363d5f40f
  example90 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example91) -}
5a060e9046fe1e9c42b0bd4fea708471
  example91 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example92) -}
6c3d09716589482768a5e79270fbc299
  example92 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.example93) -}
f6c80b3a0506fdc989231bb63da77827
  example93 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example86) -}
bf4c61074f36a4f1b06c5585c4c529cb
  example94 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example89) -}
6c090d768287b19f8da252678bd0c72e
  example95 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example151
                   Lecture5.example96) -}
27c3f7768c5821b0a67c01102923c900
  example96 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example142
                   Lecture5.example97) -}
99c816c68d75230268b321f8562b809f
  example97 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example134
                   Lecture5.example98) -}
703519e3f92189af49beca760bd66c33
  example98 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example125
                   Lecture5.example99) -}
db8d2bb443607df70f095db78a09efbd
  example99 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example119
                   Lecture5.example100) -}
58da13c4f1aa580d466fccc89517326a
  exmple1 :: Lecture5.Tree GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lecture5.T
                   @ GHC.Integer.Type.Integer
                   Lecture5.exmple10
                   Lecture5.exmple4) -}
53135d1b3f064880eb316166c449870b
  exmple10 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
c49edd4183f17446856fc42c879ca477
  exmple11 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple1
                   Lecture5.exmple12) -}
15632d54b695aabf778fcf22e02d90dd
  exmple12 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple1
                   Lecture5.exmple13) -}
bf2bc8d6da7cfbf31c0ce72580675522
  exmple13 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple1
                   (GHC.Types.[] @ (Lecture5.Tree GHC.Integer.Type.Integer))) -}
b651c311b1005e685a0b5910e0fd90b5
  exmple2 :: Lecture5.Tree GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lecture5.T
                   @ GHC.Integer.Type.Integer
                   Lecture5.exmple2_w2
                   Lecture5.exmple11) -}
cd85bd523e827b1e196d882585b1f4e0
  exmple2_w2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
51038b7e25d8f1e402205b447f6f6009
  exmple4 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple8
                   Lecture5.exmple5) -}
d88f7d1eda3d7057aefc01ccc33d329a
  exmple5 :: [Lecture5.Tree GHC.Integer.Type.Integer]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Lecture5.Tree GHC.Integer.Type.Integer)
                   Lecture5.exmple6
                   (GHC.Types.[] @ (Lecture5.Tree GHC.Integer.Type.Integer))) -}
9c21a87ebd85371629d52356c629aa0f
  exmple6 :: Lecture5.Tree GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lecture5.T
                   @ GHC.Integer.Type.Integer
                   Lecture5.exmple7
                   (GHC.Types.[] @ (Lecture5.Tree GHC.Integer.Type.Integer))) -}
3fbfe75663de692454d6a93380aa2a31
  exmple7 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (3) -}
3ca387d7ec85874b8f9905bb88de55fb
  exmple8 :: Lecture5.Tree GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Lecture5.T
                   @ GHC.Integer.Type.Integer
                   Lecture5.exmple9
                   (GHC.Types.[] @ (Lecture5.Tree GHC.Integer.Type.Integer))) -}
8548e11abeeeda2e203422d6f7b88bb7
  exmple9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
6edbac86109ade751b477779d4bfeb38
  extend ::
    Lecture5.Sudoku
    -> ((Lecture5.Row, Lecture5.Column), Lecture5.Value)
    -> Lecture5.Sudoku
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U(U))><S(S(S(S)L)L),1*U(1*U(1*U(U),1*U(U)),1*U(U))><S(S(S)L),1*U(1*U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: ((Lecture5.Row, Lecture5.Column), Lecture5.Value))
                   (w2 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { (,) ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.I# ww7 ->
                 case w2 of ww8 { (,) ww9 ww10 ->
                 case ww9 of ww11 { GHC.Types.I# ww12 ->
                 Lecture5.$wextend w ww7 ww5 ww2 ww12 ww10 } } } } }) -}
e9095a9c5b56ebd775150e88735712ae
  extendNode ::
    Lecture5.Node
    -> Lecture5.Constraint -> GHC.Types.Bool -> [Lecture5.Node]
  {- Arity: 3,
     Strictness: <S,1*U(C(U),U)><S(LLS),1*U(U(U),U(U),1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Lecture5.Node)
                   (w1 :: Lecture5.Constraint)
                   (w2 :: GHC.Types.Bool) ->
                 case w of ww { (,) ww1 ww2 ->
                 case w1 of ww3 { (,,) ww4 ww5 ww6 ->
                 Lecture5.$wextendNode ww1 ww2 ww4 ww5 ww6 w2 } }) -}
d7423e9d9ca1183455f25559c48d2467
  filledPositions ::
    Lecture5.Sudoku -> [(Lecture5.Row, Lecture5.Column)]
  {- Arity: 1, Strictness: <L,C(U(1*U))>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [(Lecture5.Row, Lecture5.Column)]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ (Lecture5.Row, Lecture5.Column)
                       : y ys
                       -> let {
                            z :: [(Lecture5.Row, Lecture5.Column)] = go1 ys
                          } in
                          letrec {
                            go2 :: [GHC.Types.Int] -> [(Lecture5.Row, Lecture5.Column)]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1
                                -> case s (y, y1) of wild2 { GHC.Types.I# x ->
                                   case x of wild3 {
                                     DEFAULT
                                     -> GHC.Types.:
                                          @ (Lecture5.Row, Lecture5.Column)
                                          (y, y1)
                                          (go2 ys1)
                                     0# -> go2 ys1 } } }
                          } in
                          go2 Lecture5.positions }
                 } in
                 go1 Lecture5.positions) -}
9769954d8ee2701e0ddf1740a514e28c
  freeAtPos ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 -> Lecture5.$wfreeAtPos w ww1 ww2 }) -}
c280265a97a44048f502db834d14af0d
  freeAtPos' ::
    Lecture5.Sudoku
    -> Lecture5.Position -> Lecture5.Constrnt -> [Lecture5.Value]
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,1*U>,
     Unfolding: (\ (s :: Lecture5.Sudoku)
                   (pos :: Lecture5.Position)
                   (xs :: Lecture5.Constrnt) ->
                 case GHC.List.filter
                        @ [Lecture5.Position]
                        (GHC.List.elem @ Lecture5.Position Lecture5.$s$fEq(,) pos)
                        xs of wild {
                   [] -> Lecture5.positions
                   : ds1 ds2
                   -> letrec {
                        go1 :: [[(Lecture5.Row, Lecture5.Column)]] -> [GHC.Types.Int]
                          {- Arity: 1, Strictness: <S,1*U> -}
                        = \ (ds :: [[(Lecture5.Row, Lecture5.Column)]]) ->
                          case ds of wild1 {
                            [] -> GHC.Types.[] @ GHC.Types.Int
                            : y ys
                            -> GHC.Base.++
                                 @ GHC.Types.Int
                                 (Lecture5.freeAtPos'_go
                                    (GHC.Base.map
                                       @ (Lecture5.Row, Lecture5.Column)
                                       @ GHC.Types.Int
                                       s
                                       y)
                                    Lecture5.positions)
                                 (go1 ys) }
                      } in
                      go1 wild }) -}
ce2fbd7bb64741c45a976229b659c7b0
  freeAtPos'_go ::
    [GHC.Types.Int] -> [GHC.Types.Int] -> [Lecture5.Value]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
fb18dc41060e98d2ea3dd601c5913466
  freeAtPositions ::
    Lecture5.Sudoku -> Lecture5.Position -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (pos :: Lecture5.Position) ->
                 case GHC.Base.map
                        @ [[Lecture5.Position]]
                        @ [Lecture5.Value]
                        (Lecture5.freeAtPos' s pos)
                        Lecture5.constrnts of wild {
                   [] -> GHC.List.foldl2 @ [Lecture5.Value]
                   : x xs -> Lecture5.freeAtPositions_go xs x }) -}
e074a46d860978a281342e08b7d54a4e
  freeAtPositions_go ::
    [[Lecture5.Value]] -> [Lecture5.Value] -> [Lecture5.Value]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
f4020cf605fbd83ef1373c5e358d1613
  freeInColumn ::
    Lecture5.Sudoku -> Lecture5.Column -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (c :: Lecture5.Column) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [Lecture5.Value]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Value
                       : y ys -> GHC.Types.: @ Lecture5.Value (s (y, c)) (go1 ys) }
                 } in
                 Lecture5.freeAtPos'_go
                   (go1 Lecture5.positions)
                   Lecture5.positions) -}
51e9be23e01e9332f930afbc19bb282d
  freeInNrcSubgrid ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (s :: Lecture5.Sudoku)
                   (ds :: (Lecture5.Row, Lecture5.Column)) ->
                 case ds of wild { (,) r c ->
                 Lecture5.freeAtPos'_go
                   (Lecture5.nrcSubGrid s (r, c))
                   Lecture5.positions }) -}
e60b9759aab50c33fe8db3b1199cc3cb
  freeInRow :: Lecture5.Sudoku -> Lecture5.Row -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (r :: Lecture5.Row) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [Lecture5.Value]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ Lecture5.Value
                       : y ys -> GHC.Types.: @ Lecture5.Value (s (r, y)) (go1 ys) }
                 } in
                 Lecture5.freeAtPos'_go
                   (go1 Lecture5.positions)
                   Lecture5.positions) -}
c1d0245e64198df7a626afa35414fbe3
  freeInSeq :: [Lecture5.Value] -> [Lecture5.Value]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (seq :: [Lecture5.Value]) ->
                 Lecture5.freeAtPos'_go seq Lecture5.positions) -}
5c102634fe071335da1b293ef488df37
  freeInSubgrid ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (s :: Lecture5.Sudoku)
                   (ds :: (Lecture5.Row, Lecture5.Column)) ->
                 case ds of wild { (,) r c ->
                 Lecture5.freeAtPos'_go
                   (Lecture5.subGrid s (r, c))
                   Lecture5.positions }) -}
b1c041eb64410e50e5c903ad94e8a22c
  freePosTest :: Lecture5.Position -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lecture5.Position) ->
                 case w of ww { (,) ww1 ww2 -> Lecture5.$wfreePosTest ww1 ww2 }) -}
353247b8d2bab8085aed8a85c276cd21
  freePosTest1 :: Lecture5.Sudoku
  {- Arity: 1, Strictness: <S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
     Unfolding: (\ (w :: (Lecture5.Row, Lecture5.Column)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 GHC.List.$w!!
                   @ Lecture5.Value
                   (GHC.List.$w!!
                      @ [Lecture5.Value]
                      Lecture5.nrcExample
                      (GHC.Prim.-# ww4 1#))
                   (GHC.Prim.-# ww6 1#) } } }) -}
475da86864f83dd55973a98828c6eb71
  genNonSolvedSudoku :: GHC.Types.IO Lecture5.Node
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genNonSolvedSudoku1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
894f3293ef6adfbd7535f552812a50e7
  genNonSolvedSudoku1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genNonSolvedSudoku10
                        @ Lecture5.Node
                        Lecture5.genNonSolvedSudoku6
                          `cast`
                        (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        Lecture5.solved
                        Lecture5.genNonSolvedSudoku5
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> case (GHC.Magic.noinline
                              @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                              GHC.IO.failIO1
                                `cast`
                              (forall (a :: <*>_N).
                               <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                              @ Lecture5.Node
                              Lecture5.genNonSolvedSudoku3)
                             `cast`
                           (GHC.Types.N:IO[0] <Lecture5.Node>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      Lecture5.genNonSolvedSudoku2 ipv2 ipv3 }
                   : r ds
                   -> case ds of wild1 {
                        [] -> Lecture5.genNonSolvedSudoku2 ipv r
                        : ipv2 ipv3
                        -> case (GHC.Magic.noinline
                                   @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                                   GHC.IO.failIO1
                                     `cast`
                                   (forall (a :: <*>_N).
                                    <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                   @ Lecture5.Node
                                   Lecture5.genNonSolvedSudoku3)
                                  `cast`
                                (GHC.Types.N:IO[0] <Lecture5.Node>_R)
                                  ipv of ds2 { (#,#) ipv4 ipv5 ->
                           Lecture5.genNonSolvedSudoku2 ipv4 ipv5 } } } }) -}
31b8af05c6ac1c27b31af442799947e5
  genNonSolvedSudoku10 ::
    (node -> GHC.Types.IO [node])
    -> (node -> GHC.Types.Bool)
    -> GHC.Types.IO [node]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [node] #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,1*U)))><L,C(U)><C(S(SS)),1*C1(U(U,1*U))><S,U> -}
b5df331087f88a31ccc3afba44d89ca3
  genNonSolvedSudoku2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> Lecture5.Node
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 2, Strictness: <S,U><L,U(U,U)>,
     Unfolding: (\ (ipv :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot]
                   (ipv1 :: Lecture5.Node)[OneShot] ->
                 case Lecture5.genNonSolvedSudoku_$srandomize
                        (Lecture5.filledPositions (case ipv1 of wild { (,) x ds1 -> x }))
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2, Lecture5.minimalize ipv1 ipv3 GHC.Types.True #) }) -}
03ff2dee08e216dd742ee0297c146496
  genNonSolvedSudoku3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Lecture5.genNonSolvedSudoku4) -}
d98142f43eb19a5f9d8912bc5011caea
  genNonSolvedSudoku4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Pattern match failure in do expression at Lecture5.hs:300:32-34"#) -}
092daf1b0a03a0e285fc25bfa1d5d348
  genNonSolvedSudoku5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 (# s,
                    GHC.Types.:
                      @ Lecture5.Node
                      Lecture5.emptyN
                      (GHC.Types.[] @ Lecture5.Node) #)) -}
68f16b242c0571acf6b16e43de1f7aae
  genNonSolvedSudoku6 ::
    (Lecture5.Sudoku, [Lecture5.Constraint])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 2, Strictness: <S(LS),1*U(C(U),U)><S,U>,
     Unfolding: (\ (w :: (Lecture5.Sudoku, [Lecture5.Constraint]))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { (,) ww1 ww2 ->
                 Lecture5.$wrsuccNode GHC.Types.False ww1 ww2 w1 }) -}
605d73f5c2ee1bed74c3ce233bf9b32a
  genNonSolvedSudoku7 ::
    [Lecture5.Constraint]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Constraint] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (cs :: [Lecture5.Constraint])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case cs of wild {
                   []
                   -> Lecture5.genNonSolvedSudoku8
                        @ Lecture5.Constraint
                        (GHC.Types.[] @ Lecture5.Constraint)
                        eta
                   : x xs
                   -> Lecture5.genNonSolvedSudoku8
                        @ Lecture5.Constraint
                        (GHC.List.takeWhile
                           @ (Lecture5.Row, Lecture5.Column, [Lecture5.Value])
                           (Lecture5.sameLen x)
                           wild)
                        eta }) -}
a189b806e71370f30504408f49d6b247
  genNonSolvedSudoku8 ::
    [a]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ @ a
                   (ds :: [a])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds of wild {
                   [] -> (# eta, GHC.Types.[] @ a #)
                   : ipv ipv1
                   -> case Lecture5.genNonSolvedSudoku9
                             (case GHC.List.$wlenAcc @ a wild 0# of ww2 { DEFAULT ->
                              GHC.Types.I# (GHC.Prim.-# ww2 1#) })
                             eta of ds1 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         GHC.Types.:
                           @ a
                           (case ipv3 of ww { GHC.Types.I# ww1 ->
                            GHC.List.$w!! @ a wild ww1 })
                           (GHC.Types.[] @ a) #) } }) -}
2190efe98aebf654f643de1f8526a87b
  genNonSolvedSudoku9 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>m,
     Unfolding: (\ (n :: GHC.Types.Int)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Random.theStdGen
                        `cast`
                      (GHC.IORef.N:IORef[0] <System.Random.StdGen>_N) of wild { GHC.STRef.STRef r# ->
                 let {
                   w1 :: GHC.Integer.Type.Integer
                   = case n of wild1 { GHC.Types.I# i ->
                     GHC.Integer.Type.smallInteger i }
                 } in
                 case GHC.Prim.atomicModifyMutVar#
                        @ GHC.Prim.RealWorld
                        @ System.Random.StdGen
                        @ (System.Random.StdGen, GHC.Types.Int)
                        @ GHC.Types.Int
                        r#
                        (\ (a1 :: System.Random.StdGen) ->
                         case System.Random.$wrandomIvalInteger
                                @ System.Random.StdGen
                                @ GHC.Types.Int
                                System.Random.$fRandomGenStdGen
                                GHC.Num.$fNumInt
                                Lecture5.exmple2_w2
                                w1
                                a1 of ww2 { (#,#) ww3 ww4 ->
                         case ww4 of a'1 { System.Random.StdGen ipv ipv1 -> (a'1, ww3) } })
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of b1 { GHC.Types.I# ipv2 -> ds1 } } }) -}
b80454c7183ab4c2d92badc2a66d4d8d
  genNonSolvedSudokuNRC :: GHC.Types.IO Lecture5.Node
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genNonSolvedSudokuNRC1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
7feaeaafa054b9b5bc77cfab906c6daf
  genNonSolvedSudokuNRC1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genNonSolvedSudoku10
                        @ Lecture5.Node
                        Lecture5.genNonSolvedSudokuNRC2
                          `cast`
                        (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        Lecture5.solved
                        Lecture5.genNonSolvedSudoku5
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> case (GHC.Magic.noinline
                              @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                              GHC.IO.failIO1
                                `cast`
                              (forall (a :: <*>_N).
                               <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                              @ Lecture5.Node
                              Lecture5.genNonSolvedSudoku3)
                             `cast`
                           (GHC.Types.N:IO[0] <Lecture5.Node>_R)
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      Lecture5.genNonSolvedSudoku2 ipv2 ipv3 }
                   : r ds
                   -> case ds of wild1 {
                        [] -> Lecture5.genNonSolvedSudoku2 ipv r
                        : ipv2 ipv3
                        -> case (GHC.Magic.noinline
                                   @ (forall a. [GHC.Types.Char] -> GHC.Types.IO a)
                                   GHC.IO.failIO1
                                     `cast`
                                   (forall (a :: <*>_N).
                                    <GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                                   @ Lecture5.Node
                                   Lecture5.genNonSolvedSudoku3)
                                  `cast`
                                (GHC.Types.N:IO[0] <Lecture5.Node>_R)
                                  ipv of ds2 { (#,#) ipv4 ipv5 ->
                           Lecture5.genNonSolvedSudoku2 ipv4 ipv5 } } } }) -}
3fe7a4003c50596944f2043aa03077c1
  genNonSolvedSudokuNRC2 ::
    (Lecture5.Sudoku, [Lecture5.Constraint])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 2, Strictness: <S(LS),1*U(C(U),U)><S,U>,
     Unfolding: (\ (w :: (Lecture5.Sudoku, [Lecture5.Constraint]))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { (,) ww1 ww2 ->
                 Lecture5.$wrsuccNode GHC.Types.True ww1 ww2 w1 }) -}
e732d9aa6c026bf847b2bbbf84cf55b1
  genNonSolvedSudoku_$srandomize ::
    [(Lecture5.Row, Lecture5.Column)]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [(Lecture5.Row, Lecture5.Column)] #)
  {- Arity: 2, Strictness: <S,U><S,U> -}
4393975a4d4f658f57b37e2616d92fb0
  genNonSolvedSudoku_go ::
    [Lecture5.Constraint]
    -> [Lecture5.Constraint] -> [Lecture5.Constraint]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
6ef4589cf507a1345c2e94754df6c7b5
  genNumHints :: GHC.Types.IO [GHC.Types.Int]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genNumHints1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[GHC.Types.Int]>_R)) -}
a1c387f83157da3ab6af46c82ba4ba70
  genNumHints1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Int] #)
  {- Arity: 1,
     Unfolding: (Lecture5.genNumHints2 Lecture5.exmple10) -}
150de766d1378d02bdf38fb22d072ad3
  genNumHints2 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Int] #)
  {- Arity: 2, Strictness: <S,U><S,U> -}
32f9dc1f96110f7e995c589b3f285817
  genNumHintsNRC :: GHC.Types.IO [GHC.Types.Int]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genNumHintsNRC1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <[GHC.Types.Int]>_R)) -}
8bbee73c74a1a1b6ef31a5319d7f737f
  genNumHintsNRC1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Int] #)
  {- Arity: 1,
     Unfolding: (Lecture5.genNumHintsNRC2 Lecture5.exmple10) -}
8a7b9188e47049d7f5cd58fdf6f754aa
  genNumHintsNRC2 ::
    GHC.Integer.Type.Integer
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [GHC.Types.Int] #)
  {- Arity: 2, Strictness: <S,U><S,U> -}
53e036b784ff98744b074306b54d532d
  genProblem :: Lecture5.Node -> GHC.Types.IO Lecture5.Node
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genProblem1
                  `cast`
                (<Lecture5.Node>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
21198d7a316350b3518d9c0ed4ab5ecb
  genProblem1 ::
    Lecture5.Node
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: Lecture5.Node)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genNonSolvedSudoku_$srandomize
                        (Lecture5.filledPositions (case n of wild { (,) x ds1 -> x }))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, Lecture5.minimalize n ipv1 GHC.Types.True #) }) -}
0b9d8f728834ded1db60f7b0ddf2a441
  genProblemType ::
    Lecture5.Node -> GHC.Types.Bool -> GHC.Types.IO Lecture5.Node
  {- Arity: 3, Strictness: <L,U(U,U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genProblemType1
                  `cast`
                (<Lecture5.Node>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
8cf34b896579a41df8c97551de95d85c
  genProblemType1 ::
    Lecture5.Node
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 3, Strictness: <L,U(U,U)><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (n :: Lecture5.Node)
                   (isNRC :: GHC.Types.Bool)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genNonSolvedSudoku_$srandomize
                        (Lecture5.filledPositions (case n of wild { (,) x ds1 -> x }))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, Lecture5.minimalize n ipv1 isNRC #) }) -}
14d70af0682b14318e766152f6be61f2
  genRandomSudoku :: GHC.Types.IO Lecture5.Node
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
1594dc13504e4d488e589a3f428d8681
  genRandomSudoku1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 1,
     Unfolding: (Lecture5.genRandomSudoku2 GHC.Types.True) -}
75241dc9e2a6adf3be3d2426913c1f71
  genRandomSudoku2 ::
    GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (isNrc :: GHC.Types.Bool)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genNonSolvedSudoku10
                        @ Lecture5.Node
                        (Lecture5.genRandomSudoku3 isNrc)
                          `cast`
                        (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        Lecture5.solved
                        Lecture5.genNonSolvedSudoku5
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> Lecture5.$wfail ipv
                   : r ds
                   -> case ds of wild1 {
                        [] -> (# ipv, r #) : ipv2 ipv3 -> Lecture5.$wfail ipv } } }) -}
7e7e46f636951d661d613d0c66dbacf7
  genRandomSudoku3 ::
    GHC.Types.Bool
    -> (Lecture5.Sudoku, [Lecture5.Constraint])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 3, Strictness: <L,U><S(LS),1*U(C(U),U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Bool)
                   (w1 :: (Lecture5.Sudoku, [Lecture5.Constraint]))
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wrsuccNode w ww1 ww2 w2 }) -}
eb8f77db855cae1f08a3f1fbf54ffa7f
  genRandomSudokuType :: GHC.Types.Bool -> GHC.Types.IO Lecture5.Node
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku2
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
2dc2f33ea1904cba57db08b4957a6c9d
  genSudokuPositions :: Test.QuickCheck.Gen.Gen Lecture5.Position
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genSudokuPositions1
                  `cast`
                (Sym (Test.QuickCheck.Gen.N:Gen[0] <Lecture5.Position>_R)) -}
247133598c3a1aba5477b81e9a9f7ae2
  genSudokuPositions1 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> Lecture5.Position
  {- Arity: 2,
     Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><S(S),1*U(U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 case w `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case w1 of ww7 { GHC.Types.I# ww8 ->
                 Lecture5.$wgenSudokuPositions ww1 ww2 ww3 ww4 ww8 } }) -}
f9c1d7e2c57b2c4ecf5fac84d1ed2b2e
  genSudokuPositions2 ::
    (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: (Lecture5.Row, Lecture5.Column)) ->
                 case w of ww { (,) ww1 ww2 ->
                 Lecture5.$wgenSudokuPositions1 ww1 ww2 }) -}
07e57a88238cf83c2481c55277a26917
  genSudokuPositions3 ::
    Test.QuickCheck.Random.QCGen
    -> GHC.Types.Int -> (GHC.Types.Int, GHC.Types.Int)
  {- Arity: 2, Strictness: <S(SSSSLL),1*U(U,U,U,1*U,A,A)><L,U(U)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 case w `cast`
                      (Test.QuickCheck.Random.N:QCGen[0]) of ww { System.Random.TF.Gen.TFGen ww1 ww2 ww3 ww4 ww5 ww6 ->
                 case Lecture5.$wgenSudokuPositions2
                        ww1
                        ww2
                        ww3
                        ww4
                        w1 of ww7 { (#,#) ww8 ww9 ->
                 (ww8, ww9) } }) -}
47e022ff491b6fc0159ca3d806b306aa
  generateSudokuProblem ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.IO (GHC.Base.Maybe (GHC.Types.IO Lecture5.Node))
  {- Arity: 3, Strictness: <L,1*U(U)><S(S),1*U(1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.generateSudokuProblem1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Base.Maybe (GHC.Types.IO Lecture5.Node)>_R)) -}
311b283d5aef783445381406c94956c4
  generateSudokuProblem1 ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe (GHC.Types.IO Lecture5.Node) #)
  {- Arity: 3, Strictness: <L,1*U(U)><S(S),1*U(1*U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Lecture5.$wgenerateSudokuProblem w ww1 w2 }) -}
c7728bdaac86dbbaefb7c4f9f95fd22e
  getPositionForBlock :: Lecture5.Value -> Lecture5.Position
  {- Arity: 1, Strictness: <S(S),1*U(U)>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lecture5.Value) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case Lecture5.$wgetPositionForBlock ww1 of ww2 { (#,#) ww3 ww4 ->
                 (ww3, ww4) } }) -}
085389c21f345047d32025bc07933ab7
  getPositionForBlock1 :: Lecture5.Position
  {- Strictness: x -}
9831231d7b9e29fdac1393d494fe39ef
  getPositionForBlock2 :: Lecture5.Position
  {- Strictness: x -}
38c98a0d50a976626c70d91a89ba9c64
  getRandomCnstr ::
    [Lecture5.Constraint] -> GHC.Types.IO [Lecture5.Constraint]
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genNonSolvedSudoku7
                  `cast`
                (<[Lecture5.Constraint]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Constraint]>_R)) -}
415eb9f1223f4b5659256585e109bc26
  getRandomInt :: GHC.Types.Int -> GHC.Types.IO GHC.Types.Int
  {- Arity: 2, Strictness: <L,1*U(U)><S,U>m,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genNonSolvedSudoku9
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Int>_R)) -}
78e0442659d0dfafaaeb6e8646b5968d
  getRandomItem :: [a] -> GHC.Types.IO [a]
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genNonSolvedSudoku8
                  `cast`
                (forall (a :: <*>_N).
                 <[a]>_R ->_R Sym (GHC.Types.N:IO[0] <[a]>_R)) -}
09ae6c40e251f2a29d31a0c9497b95ee
  grid2sud :: Lecture5.Grid -> Lecture5.Sudoku
  {- Arity: 2, Strictness: <S,1*U><S(S(S)S(S)),1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Grid) (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 Lecture5.$wgrid2sud w ww4 ww6 } } }) -}
812b3e203da143b3b54a082e3e885bc5
  grow :: (node -> [node]) -> node -> Lecture5.Tree node
  {- Arity: 2, HasNoCafRefs, Strictness: <L,C(U)><L,U>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ node (w :: node -> [node]) (w1 :: node) ->
                 case Lecture5.$wgrow @ node w w1 of ww { (#,#) ww1 ww2 ->
                 Lecture5.T @ node ww1 ww2 }) -}
b1a0a4da1e7381bfee5e261265bd77c8
  initNode :: Lecture5.Grid -> [Lecture5.Node]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (gr :: Lecture5.Grid) ->
                 let {
                   s :: Lecture5.Sudoku {- Arity: 1 -} = Lecture5.grid2sud gr
                 } in
                 case (Lecture5.consistent1 s)
                        `cast`
                      (Data.Semigroup.Internal.N:All[0]) of wild {
                   GHC.Types.False -> GHC.Types.[] @ Lecture5.Node
                   GHC.Types.True
                   -> GHC.Types.:
                        @ Lecture5.Node
                        (s, Lecture5.constraints s)
                        (GHC.Types.[] @ Lecture5.Node) }) -}
e2e5a7d260380220d6fbd2e4c32820de
  injective :: GHC.Classes.Eq a => [a] -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dEq :: GHC.Classes.Eq a) (xs :: [a]) ->
                 GHC.Classes.$fEq[]_$c==
                   @ a
                   $dEq
                   (Data.OldList.nubBy @ a (GHC.Classes.== @ a $dEq) xs)
                   xs) -}
61ab057d31a3634be175e3e98b31c687
  length3rd :: (a, b, [c]) -> (a, b, [c]) -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS),1*U(A,A,1*U)><S(LLS),1*U(A,A,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a @ b @ c (w :: (a, b, [c])) (w1 :: (a, b, [c])) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 case w1 of ww4 { (,,) ww5 ww6 ww7 ->
                 Lecture5.$wlength3rd @ a @ b @ c ww3 ww7 } }) -}
5ae254d0be9e567721986486951e3411
  minimalize ::
    Lecture5.Node
    -> [(Lecture5.Row, Lecture5.Column)]
    -> GHC.Types.Bool
    -> Lecture5.Node
  {- Arity: 3, Strictness: <L,U(U,U)><S,1*U><L,U> -}
19c0d0dbfb2dae36fddfdd41a6d7ab91
  nrcBl :: GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (x :: GHC.Types.Int) ->
                 letrec {
                   go1 :: [[GHC.Types.Int]] -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [[GHC.Types.Int]]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Int
                       : y ys
                       -> case GHC.List.elem
                                 @ GHC.Types.Int
                                 GHC.Classes.$fEqInt
                                 x
                                 y of wild1 {
                            GHC.Types.False -> go1 ys
                            GHC.Types.True -> GHC.Base.++ @ GHC.Types.Int y (go1 ys) } }
                 } in
                 go1 Lecture5.nrcBlocks) -}
66c6ffd3f9cdc312e8bea10460701ae8
  nrcBlocks :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.nrcBlocks3
                   Lecture5.nrcBlocks1) -}
e8716cf0dfb06c12876cef3776762fbb
  nrcBlocks1 :: [[GHC.Types.Int]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Int]
                   Lecture5.nrcBlocks2
                   (GHC.Types.[] @ [GHC.Types.Int])) -}
980cba81a6c10de3672f6412f273eb6f
  nrcBlocks2 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 6# 8#) -}
15918330cf838ed7ee3f9c9ca6cf35c9
  nrcBlocks3 :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 2# 4#) -}
d6d0e6476903087054cf0960b586de72
  nrcConstrnt :: [[Lecture5.Position]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Position]
                   Lecture5.nrcConstrnt10
                   Lecture5.nrcConstrnt1) -}
976243217425e3c158fb8808f579096a
  nrcConstrnt1 :: [[Lecture5.Position]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Position]
                   Lecture5.nrcConstrnt9
                   Lecture5.nrcConstrnt2) -}
3b4640e7d8131f5daa3e80b4dc4d196e
  nrcConstrnt10 :: [Lecture5.Position]
  {- Unfolding: (Lecture5.$wcreateBlock
                   2#
                   Lecture5.nrcConstrnt8
                   3#
                   Lecture5.nrcConstrnt5) -}
9301a33070bf8f8f560864958c96edc0
  nrcConstrnt2 :: [[Lecture5.Position]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Position]
                   Lecture5.nrcConstrnt7
                   Lecture5.nrcConstrnt3) -}
d834cf969b74cc9f6204699f4e9224ff
  nrcConstrnt3 :: [[Lecture5.Position]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Position]
                   Lecture5.nrcConstrnt4
                   (GHC.Types.[] @ [Lecture5.Position])) -}
539ed568eead8733e265fc9a101091ed
  nrcConstrnt4 :: [Lecture5.Position]
  {- Unfolding: (Lecture5.$wcreateBlock
                   6#
                   Lecture5.nrcConstrnt6
                   3#
                   Lecture5.nrcConstrnt5) -}
1a16f5acb38bd25ce2d9a08817b6463a
  nrcConstrnt5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3#) -}
b688985f7c00963ce049a700d8772749
  nrcConstrnt6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 6#) -}
43a895d4e4eeddf64c11e7462f183588
  nrcConstrnt7 :: [Lecture5.Position]
  {- Unfolding: (Lecture5.$wcreateBlock
                   6#
                   Lecture5.nrcConstrnt8
                   3#
                   Lecture5.nrcConstrnt5) -}
a58e656e85c3132821769852ff986580
  nrcConstrnt8 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
31d4fa93d47f381fd07fbb3ed630a89d
  nrcConstrnt9 :: [Lecture5.Position]
  {- Unfolding: (Lecture5.$wcreateBlock
                   2#
                   Lecture5.nrcConstrnt6
                   3#
                   Lecture5.nrcConstrnt5) -}
cb292d69ab70c72d317c9d9f15057ec8
  nrcExample :: Lecture5.Grid
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.example110
                   Lecture5.nrcExample1) -}
b5c2bcbc7e7cbbae85444beaf134f738
  nrcExample1 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample49
                   Lecture5.nrcExample2) -}
0febb2c70a912128ce25dffaf18b800c
  nrcExample10 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample11) -}
90c65f0c26c08fa6123ed0f9557b41d9
  nrcExample11 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example176) -}
c7d93e530b1dba9a301dafef871197a8
  nrcExample12 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample13) -}
1dfb75e5030b6015042976f176733897
  nrcExample13 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example25
                   Lecture5.nrcExample14) -}
49ad00c1547d6a6a9177a28a28808408
  nrcExample14 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample15) -}
4a9e13f29cc72a2757dfcdcf640b1614
  nrcExample15 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample16) -}
d08a432517bf2a65321e36e459666db4
  nrcExample16 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent4
                   Lecture5.example93) -}
280db92a59c58aa1d616957296737c54
  nrcExample17 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample18) -}
50b258224cabd246fd3d97149f174288
  nrcExample18 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample19) -}
c6bb4c9abd212194943ea479719e14e2
  nrcExample19 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample20) -}
45e94db22003ba9860381da44b973c0c
  nrcExample2 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample41
                   Lecture5.nrcExample3) -}
f31c901c1dc06c5248399365cd75f72d
  nrcExample20 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample21) -}
db6ec23c98fa5e095496ae4372148700
  nrcExample21 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample22) -}
cfe2b0731fcdbecbf6a70c0cee77b521
  nrcExample22 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample23) -}
4bc030e646a8029a5309a94031501a14
  nrcExample23 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample24) -}
aba8c2732a6068969c644f7218868d1e
  nrcExample24 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example62) -}
b3d7a0355b908b04aac5796cce641083
  nrcExample25 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.nrcExample26) -}
83f141461702c60cc59ea8aa1188f5e1
  nrcExample26 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample27) -}
0aec12b45e6c2b7b08d8fd09fdcc4e1d
  nrcExample27 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample28) -}
57c0a52711ade426cbcc68dc5336f22e
  nrcExample28 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample29) -}
82544e220d6e21ab7bf8ca8e51f4862d
  nrcExample29 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.nrcExample30) -}
c2bdef55b907b71ab1be77c8ea20ef80
  nrcExample3 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample36
                   Lecture5.nrcExample4) -}
2191c44b04cb1487199811ab6c1c331e
  nrcExample30 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.nrcExample31) -}
6d6d0a5129a8cb02e52ec4d9153cd4e4
  nrcExample31 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.example87) -}
b209d492f007e2bc2ba1af3eecae88a7
  nrcExample32 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample33) -}
b3c920c116be6caa3a75248910562f00
  nrcExample33 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.example24
                   Lecture5.nrcExample34) -}
5ed7e144636c044e1f6b95c452ce867c
  nrcExample34 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent5
                   Lecture5.nrcExample35) -}
7d82752254f5e3d8506f6f4c6ae7ccc0
  nrcExample35 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.example114) -}
b993f46e7c21065f13de97fe66834f9b
  nrcExample36 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample37) -}
9e8e2db18e8e9e19d3fffdd014201e79
  nrcExample37 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample38) -}
66a95edb7e94a250f875482afc1a4477
  nrcExample38 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt6
                   Lecture5.nrcExample39) -}
d9e4d88d39de364c969cc862e08917bb
  nrcExample39 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample40) -}
8053cf74cd387e03a001711ca67e142d
  nrcExample4 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample32
                   Lecture5.nrcExample5) -}
6592ebc34076eafbd0ad56c7803f5d3f
  nrcExample40 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example85) -}
3aea10bfee8847b1c58d99fc7888d8c4
  nrcExample41 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt8
                   Lecture5.nrcExample42) -}
362ac93414e99aa300e44a3fc471ef08
  nrcExample42 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample43) -}
450b719861b5990ae964a0d4fb0a4cae
  nrcExample43 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample44) -}
83f68a918c78949e819cbd17a8c73d9b
  nrcExample44 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample45) -}
4ed47712b87d97ae18faa7d0c66059d3
  nrcExample45 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample46) -}
50dbe5a4613428ee03457052dab6fae9
  nrcExample46 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample47) -}
427200e5f51b6d9946e035fcf657ffc1
  nrcExample47 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample48) -}
cec50b9966fb7f25b26b3b61f81bba3a
  nrcExample48 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.example150) -}
7798af233008d214fcb570ffdfadfd62
  nrcExample49 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample50) -}
b8daae447c5da83b0d307134d4136167
  nrcExample5 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample25
                   Lecture5.nrcExample6) -}
1e0227a6d77d15c7f55659d75cb76b31
  nrcExample50 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample51) -}
c8d951eecc11ae138ad511acb4e639d6
  nrcExample51 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample52) -}
8ce790e26d3a4761554880e301cbafd0
  nrcExample52 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.consistent3
                   Lecture5.nrcExample53) -}
5ff1145671757151de7ac55bab674a41
  nrcExample53 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample54) -}
89350e0acd5675094010d9aef44c7dce
  nrcExample54 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample55) -}
f61ea190c203f359fcc1983fc55db811
  nrcExample55 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.nrcConstrnt5
                   Lecture5.example87) -}
51b9db5a34f0f8638e4e7b745d9b2475
  nrcExample6 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample17
                   Lecture5.nrcExample7) -}
5850529eb9b07ff0c450b62a7a5e04e3
  nrcExample7 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample12
                   Lecture5.nrcExample8) -}
47151fe965598038d463bebf2ecc1e7e
  nrcExample8 :: [[Lecture5.Value]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [Lecture5.Value]
                   Lecture5.nrcExample9
                   (GHC.Types.[] @ [Lecture5.Value])) -}
34fcb31de97d8669f5a717ce0ee94010
  nrcExample9 :: [Lecture5.Value]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Lecture5.Value
                   Lecture5.$fShowTree1
                   Lecture5.nrcExample10) -}
3be90e571b565737c6b7652c6690496d
  nrcSameBlock ::
    (Lecture5.Row, Lecture5.Column)
    -> (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 2,
     Strictness: <S(S(S)L),1*U(1*U(1*U),1*U(U))><S,1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Lecture5.Row, Lecture5.Column))
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case w1 of ww5 { (,) ww6 ww7 ->
                 Lecture5.$wnrcSameBlock ww4 ww2 ww6 ww7 } } }) -}
254bc9be825d6c8fcf2e9593f39f0802
  nrcSubGrid ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wnrcSubGrid w ww1 ww2 }) -}
aad5763fe4cece09244f3c09f661b51c
  nrcSubgridInjective ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wnrcSubgridInjective w ww1 ww2 }) -}
0cc10e49e172188cd6f976167f4e6f5c
  openPositions ::
    Lecture5.Sudoku -> [(Lecture5.Row, Lecture5.Column)]
  {- Arity: 1, Strictness: <L,C(U(1*U))>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [(Lecture5.Row, Lecture5.Column)]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ (Lecture5.Row, Lecture5.Column)
                       : y ys
                       -> let {
                            z :: [(Lecture5.Row, Lecture5.Column)] = go1 ys
                          } in
                          letrec {
                            go2 :: [GHC.Types.Int] -> [(Lecture5.Row, Lecture5.Column)]
                              {- Arity: 1, Strictness: <S,1*U> -}
                            = \ (ds1 :: [GHC.Types.Int]) ->
                              case ds1 of wild1 {
                                [] -> z
                                : y1 ys1
                                -> case s (y, y1) of wild2 { GHC.Types.I# x ->
                                   case x of wild3 {
                                     DEFAULT -> go2 ys1
                                     0#
                                     -> GHC.Types.:
                                          @ (Lecture5.Row, Lecture5.Column)
                                          (y, y1)
                                          (go2 ys1) } } }
                          } in
                          go2 Lecture5.positions }
                 } in
                 go1 Lecture5.positions) -}
eb96e721ff771ee4d3230f1b96c26bcb
  positions :: [GHC.Types.Int]
  {- Unfolding: (GHC.Enum.eftInt 1# 9#) -}
2c95150d4468667637bba9fdb138917c
  prune ::
    (Lecture5.Row, Lecture5.Column, Lecture5.Value)
    -> [Lecture5.Constraint] -> GHC.Types.Bool -> [Lecture5.Constraint]
  {- Arity: 3, Strictness: <L,1*U(U(U),U(U),U)><S,1*U><L,1*U> -}
3c33f9e7deeca2f77112f82242eda15e
  randomS :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.randomS1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
8e08e4b7ab42894e2037d4ed626bbca5
  randomS1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Lecture5.genNonSolvedSudoku10
                        @ Lecture5.Node
                        (Lecture5.genRandomSudoku3 GHC.Types.True)
                          `cast`
                        (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        Lecture5.solved
                        Lecture5.genNonSolvedSudoku5
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> case Lecture5.$wfail ipv of ds2 { (#,#) ipv2 ipv3 ->
                      Lecture5.randomS2 ipv3 ipv2 }
                   : r ds
                   -> case ds of wild1 {
                        [] -> Lecture5.randomS2 r ipv
                        : ipv2 ipv3
                        -> case Lecture5.$wfail ipv of ds2 { (#,#) ipv4 ipv5 ->
                           Lecture5.randomS2 ipv5 ipv4 } } } }) -}
5e5b42064fae6b15ae009ad6022f53d6
  randomS2 ::
    (Lecture5.Sudoku, [Lecture5.Constraint])
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(1*C(U),A)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: (Lecture5.Sudoku, [Lecture5.Constraint]))
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lecture5.randomS3
                   (Lecture5.sud2grid (case x of wild { (,) x1 ds1 -> x1 }))
                   eta) -}
64e055688c6cff7c935247220fe9ab5b
  randomS3 ::
    [[Lecture5.Value]]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (ds :: [[Lecture5.Value]])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds of wild {
                   []
                   -> case Lecture5.randomS6
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : as ds1
                   -> case ds1 of wild1 {
                        []
                        -> case Lecture5.randomS6
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {}
                        : bs ds2
                        -> case ds2 of wild2 {
                             []
                             -> case Lecture5.randomS6
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                of {}
                             : cs ds3
                             -> case ds3 of wild3 {
                                  []
                                  -> case Lecture5.randomS6
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                     of {}
                                  : ds4 ds5
                                  -> case ds5 of wild4 {
                                       []
                                       -> case Lecture5.randomS6
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          of {}
                                       : es ds6
                                       -> case ds6 of wild5 {
                                            []
                                            -> case Lecture5.randomS6
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                               of {}
                                            : fs ds7
                                            -> case ds7 of wild6 {
                                                 []
                                                 -> case Lecture5.randomS6
                                                    ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                              () #)
                                                    of {}
                                                 : gs ds8
                                                 -> case ds8 of wild7 {
                                                      []
                                                      -> case Lecture5.randomS6
                                                         ret_ty (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   () #)
                                                         of {}
                                                      : hs ds9
                                                      -> case ds9 of wild8 {
                                                           []
                                                           -> case Lecture5.randomS6
                                                              ret_ty (# GHC.Prim.State#
                                                                          GHC.Prim.RealWorld,
                                                                        () #)
                                                              of {}
                                                           : is ds10
                                                           -> case ds10 of wild9 {
                                                                []
                                                                -> case GHC.IO.Handle.Text.hPutStr2
                                                                          GHC.IO.Handle.FD.stdout
                                                                          Lecture5.randomS4
                                                                          GHC.Types.True
                                                                          eta of ds11 { (#,#) ipv ipv1 ->
                                                                   case (Lecture5.showRow as)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv of ds12 { (#,#) ipv2 ipv3 ->
                                                                   case (Lecture5.showRow bs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv2 of ds13 { (#,#) ipv4 ipv5 ->
                                                                   case (Lecture5.showRow cs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv4 of ds14 { (#,#) ipv6 ipv7 ->
                                                                   case GHC.IO.Handle.Text.hPutStr2
                                                                          GHC.IO.Handle.FD.stdout
                                                                          Lecture5.randomS4
                                                                          GHC.Types.True
                                                                          ipv6 of ds15 { (#,#) ipv8 ipv9 ->
                                                                   case (Lecture5.showRow ds4)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv8 of ds16 { (#,#) ipv10 ipv11 ->
                                                                   case (Lecture5.showRow es)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv10 of ds17 { (#,#) ipv12 ipv13 ->
                                                                   case (Lecture5.showRow fs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv12 of ds18 { (#,#) ipv14 ipv15 ->
                                                                   case GHC.IO.Handle.Text.hPutStr2
                                                                          GHC.IO.Handle.FD.stdout
                                                                          Lecture5.randomS4
                                                                          GHC.Types.True
                                                                          ipv14 of ds19 { (#,#) ipv16 ipv17 ->
                                                                   case (Lecture5.showRow gs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv16 of ds20 { (#,#) ipv18 ipv19 ->
                                                                   case (Lecture5.showRow hs)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv18 of ds21 { (#,#) ipv20 ipv21 ->
                                                                   case (Lecture5.showRow is)
                                                                          `cast`
                                                                        (GHC.Types.N:IO[0] <()>_R)
                                                                          ipv20 of ds22 { (#,#) ipv22 ipv23 ->
                                                                   GHC.IO.Handle.Text.hPutStr2
                                                                     GHC.IO.Handle.FD.stdout
                                                                     Lecture5.randomS4
                                                                     GHC.Types.True
                                                                     ipv22 } } } } } } } } } } } }
                                                                : ipv ipv1
                                                                -> case Lecture5.randomS6
                                                                   ret_ty (# GHC.Prim.State#
                                                                               GHC.Prim.RealWorld,
                                                                             () #)
                                                                   of {} } } } } } } } } } }) -}
0e0c9dc0333bf278bfbe0376a01e9b3c
  randomS4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lecture5.randomS5) -}
22e547ad6a832e40bac01e1f198e2a3c
  randomS5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("+-------+-------+-------+"#) -}
072db1c152bf0df1333ac8a434cf3c97
  randomS6 :: GHC.Types.IO ()
  {- Strictness: x -}
53102c6f01bc49682c051f43b4a2bebf
  randomize :: GHC.Classes.Eq a => [a] -> GHC.Types.IO [a]
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A)><S,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.randomize1
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Classes.Eq a>_R
                 ->_R <[a]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[a]>_R)) -}
f20b444a74d06aaed952c63a3adda3c9
  randomize1 ::
    GHC.Classes.Eq a =>
    [a]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A)><S,U><S,U> -}
92e0c5818afb0cea49ce825610331557
  removeBlocksFromSudoku ::
    GHC.Types.Int
    -> [GHC.Types.Int]
    -> GHC.Types.IO Lecture5.Node
    -> GHC.Types.IO Lecture5.Node
  {- Arity: 4,
     Strictness: <S(S),1*U(1*U)><L,U><C(S),1*C1(U(U,U(U,U)))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.removeBlocksFromSudoku1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <[GHC.Types.Int]>_R
                 ->_R <GHC.Types.IO Lecture5.Node>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Lecture5.Node>_R)) -}
d5f483f24abc2d8d544ea50699f02a6b
  removeBlocksFromSudoku1 ::
    GHC.Types.Int
    -> [GHC.Types.Int]
    -> GHC.Types.IO Lecture5.Node
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Lecture5.Node #)
  {- Arity: 4,
     Strictness: <S(S),1*U(1*U)><L,U><C(S),1*C1(U(U,U(U,U)))><S,U>,
     Inline: [0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: [GHC.Types.Int])
                   (w2 :: GHC.Types.IO Lecture5.Node)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Lecture5.$wremoveBlocksFromSudoku ww1 w1 w2 w3 }) -}
26ce75c2ea76fa5249b741f06386fddd
  rowConstrnt :: [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Unfolding: (Lecture5.rowConstrnt_go Lecture5.positions) -}
7fca9a91104c9d3c2ca3517ccc4c4769
  rowConstrnt_go ::
    [GHC.Types.Int] -> [[(GHC.Types.Int, GHC.Types.Int)]]
  {- Arity: 1, Strictness: <S,1*U> -}
ab85abc49486f3f895c96a2b89085fe7
  rowInjective :: Lecture5.Sudoku -> Lecture5.Row -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,C(U(U))><L,U>,
     Unfolding: (\ (s :: Lecture5.Sudoku) (r :: Lecture5.Row) ->
                 letrec {
                   go1 :: [GHC.Types.Int] -> [GHC.Types.Int]
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (ds :: [GHC.Types.Int]) ->
                     case ds of wild {
                       [] -> GHC.Types.[] @ GHC.Types.Int
                       : y ys
                       -> case s (r, y) of wild1 { GHC.Types.I# x ->
                          case x of wild2 {
                            DEFAULT -> GHC.Types.: @ GHC.Types.Int wild1 (go1 ys)
                            0# -> go1 ys } } }
                 } in
                 let {
                   xs :: [Lecture5.Value] = go1 Lecture5.positions
                 } in
                 GHC.Classes.$fEq[]_$s$c==
                   (Data.OldList.nubBy @ Lecture5.Value GHC.Classes.eqInt xs)
                   xs) -}
e511e4d0aa44ca88329ef17027373632
  rsearch ::
    (node -> GHC.Types.IO [node])
    -> (node -> GHC.Types.Bool)
    -> GHC.Types.IO [node]
    -> GHC.Types.IO [node]
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,C(C1(U(U,1*U)))><L,C(U)><C(S(SS)),1*C1(U(U,1*U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genNonSolvedSudoku10
                  `cast`
                (forall (node :: <*>_N).
                 <node -> GHC.Types.IO [node]>_R
                 ->_R <node -> GHC.Types.Bool>_R
                 ->_R <GHC.Types.IO [node]>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[node]>_R)) -}
876cd1315f2db887742469d5a78c92d7
  rsolveNs ::
    [Lecture5.Node] -> GHC.Types.Bool -> GHC.Types.IO [Lecture5.Node]
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.rsolveNs1
                  `cast`
                (<[Lecture5.Node]>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R)) -}
95f010804d7045b16eba2c3bd6a79403
  rsolveNs1 ::
    [Lecture5.Node]
    -> GHC.Types.Bool
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [Lecture5.Node] #)
  {- Arity: 3, Strictness: <S,1*U><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ns :: [Lecture5.Node])
                   (isNRC :: GHC.Types.Bool)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lecture5.genNonSolvedSudoku10
                   @ Lecture5.Node
                   (Lecture5.genRandomSudoku3 isNRC)
                     `cast`
                   (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                    ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                   Lecture5.solved
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# s, ns #))
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R))
                   eta) -}
6e8d4089af73538b36843e1db3722e2a
  rsuccNode ::
    GHC.Types.Bool -> Lecture5.Node -> GHC.Types.IO [Lecture5.Node]
  {- Arity: 3, Strictness: <L,U><S(LS),1*U(C(U),U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.genRandomSudoku3
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R <(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                 ->_R Sym (GHC.Types.N:IO[0] <[Lecture5.Node]>_R)) -}
7bb5e46da24cc4025765ca93eedd59a0
  sameBlock ::
    (Lecture5.Row, Lecture5.Column)
    -> (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U(U,U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: (Lecture5.Row, Lecture5.Column))
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w of ww { (,) ww1 ww2 ->
                 case w1 of ww3 { (,) ww4 ww5 ->
                 Lecture5.$wsameBlock ww1 ww2 ww4 ww5 } }) -}
b6218ff423df2dcac333724411e2f46d
  sameLen ::
    Lecture5.Constraint -> Lecture5.Constraint -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLS),1*U(A,A,1*U)><S(LLS),1*U(A,A,1*U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Constraint) (w1 :: Lecture5.Constraint) ->
                 case w of ww { (,,) ww1 ww2 ww3 ->
                 case w1 of ww4 { (,,) ww5 ww6 ww7 ->
                 Lecture5.$wsameLen ww3 ww7 } }) -}
a9f91518ac6bab7927918debfbfc4733
  search ::
    (node -> [node]) -> (node -> GHC.Types.Bool) -> [node] -> [node]
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,C(U)><S,1*U> -}
3fb73e48d6de545ad5e49120cdf40133
  showGrid :: Lecture5.Grid -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.randomS3
                  `cast`
                (<[[Lecture5.Value]]>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
54c9093a7f186b07532c581589c7941f
  showNode :: Lecture5.Node -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(1*C(U),A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.randomS2
                  `cast`
                (<(Lecture5.Sudoku, [Lecture5.Constraint])>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
d2e71026d52ba47b06540ff7906bdcd5
  showRow :: [Lecture5.Value] -> GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,1*U> -}
d9c8bc4093146cbea740cc83720592dd
  showSudoku :: Lecture5.Sudoku -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,C(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.showSudoku1
                  `cast`
                (<Lecture5.Sudoku>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
b9cad0d2b57883d907bbf824f2b3ccf1
  showSudoku1 ::
    Lecture5.Sudoku
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,C(U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Lecture5.Sudoku)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lecture5.randomS3 (Lecture5.sud2grid x) eta) -}
cf0101f8f7d7145db240498970898242
  showVal :: Lecture5.Value -> GHC.Base.String
  {- Arity: 1, Strictness: <S(S),1*U(1*U)>, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Lecture5.Value) ->
                 case w of ww { GHC.Types.I# ww1 -> Lecture5.$wshowVal ww1 }) -}
562a41945a907c753ad968a58a817c5d
  showVal1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Lecture5.showVal2) -}
48c0139f39ba489287acc30fdd30ce12
  showVal2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: (" "#) -}
9ebf77650bc8256969b6a8d9fbb34337
  solveAndShow :: Lecture5.Grid -> GHC.Types.IO [()]
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.solveAndShow1
                  `cast`
                (<Lecture5.Grid>_R ->_R Sym (GHC.Types.N:IO[0] <[()]>_R)) -}
0d871e167e0103c0591e360bf15492e9
  solveAndShow1 ::
    Lecture5.Grid
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (gr :: Lecture5.Grid)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 let {
                   s :: Lecture5.Sudoku {- Arity: 1 -} = Lecture5.grid2sud gr
                 } in
                 case (Lecture5.consistent1 s)
                        `cast`
                      (Data.Semigroup.Internal.N:All[0]) of wild {
                   GHC.Types.False
                   -> Lecture5.solveAndShow3 Lecture5.solveAndShow2 eta
                   GHC.Types.True
                   -> Lecture5.solveAndShow3
                        (Lecture5.search
                           @ Lecture5.Node
                           Lecture5.checkAllErasedHints2
                           Lecture5.solved
                           (GHC.Types.:
                              @ Lecture5.Node
                              (s, Lecture5.constraints s)
                              (GHC.Types.[] @ Lecture5.Node)))
                        eta }) -}
9332e53d679fe1a88b76f525c4eb4e41
  solveAndShow2 :: [Lecture5.Node]
  {- Unfolding: (Lecture5.search
                   @ Lecture5.Node
                   Lecture5.checkAllErasedHints2
                   Lecture5.solved
                   (GHC.Types.[] @ Lecture5.Node)) -}
cebdf78c7b7bae464c2c3b32c7fdb07c
  solveAndShow3 ::
    [Lecture5.Node]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
da7ac1a0ecdbe2c28fa801699f14c996
  solveNs :: [Lecture5.Node] -> GHC.Types.Bool -> [Lecture5.Node]
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (n :: [Lecture5.Node]) (isNRC :: GHC.Types.Bool) ->
                 Lecture5.search
                   @ Lecture5.Node
                   (Lecture5.succNode isNRC)
                   Lecture5.solved
                   n) -}
ead4e738824684852e6d0be108665dcf
  solveNs' :: [Lecture5.Node] -> [Lecture5.Node]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (n :: [Lecture5.Node]) ->
                 Lecture5.search
                   @ Lecture5.Node
                   Lecture5.checkAllErasedHints2
                   Lecture5.solved
                   n) -}
bb4b3aa67fa26acfad89e97b490baea7
  solveShowNs :: [Lecture5.Node] -> GHC.Types.IO [()]
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.solveShowNs1
                  `cast`
                (<[Lecture5.Node]>_R ->_R Sym (GHC.Types.N:IO[0] <[()]>_R)) -}
01f042ad47a5ceb6bb6f078a42f993c3
  solveShowNs1 ::
    [Lecture5.Node]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, [()] #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (x :: [Lecture5.Node])
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Lecture5.solveAndShow3
                   (Lecture5.search
                      @ Lecture5.Node
                      Lecture5.checkAllErasedHints2
                      Lecture5.solved
                      x)
                   eta) -}
a48772541d3c5ca4885c383fd4273635
  solved :: Lecture5.Node -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: (Lecture5.Sudoku, [Lecture5.Constraint])) ->
                 case x of wild { (,) ds1 y ->
                 case y of wild1 {
                   [] -> GHC.Types.True : ds2 ds3 -> GHC.Types.False } }) -}
3858fcea35f013dc6cf2d7cb9ea88d39
  subGrid ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> [Lecture5.Value]
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 -> Lecture5.$wsubGrid w ww1 ww2 }) -}
ca1bd19a2626179673245957339e630b
  subgridInjective ::
    Lecture5.Sudoku
    -> (Lecture5.Row, Lecture5.Column) -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,C(U)><S,1*U(U,U)>, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Lecture5.Sudoku)
                   (w1 :: (Lecture5.Row, Lecture5.Column)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 Lecture5.$wsubgridInjective w ww1 ww2 }) -}
8a24822d18a702d3e261023f32bc4748
  succNode :: GHC.Types.Bool -> Lecture5.Node -> [Lecture5.Node]
  {- Arity: 2, Strictness: <L,U><S(LS),1*U(C(U),1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (isNRC :: GHC.Types.Bool)
                   (ds :: (Lecture5.Sudoku, [Lecture5.Constraint])) ->
                 case ds of wild { (,) s ds1 ->
                 case ds1 of wild1 {
                   [] -> GHC.Types.[] @ Lecture5.Node
                   : p ps -> Lecture5.extendNode (s, ps) p isNRC } }) -}
f2af699618ecf9c765352b36ea28425f
  sud2grid :: Lecture5.Sudoku -> Lecture5.Grid
  {- Arity: 1, HasNoCafRefs, Strictness: <L,C(U)>,
     Unfolding: (\ (s :: Lecture5.Sudoku) ->
                 letrec {
                   go1 :: GHC.Prim.Int# -> [[Lecture5.Value]]
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ (x :: GHC.Prim.Int#) ->
                     GHC.Types.:
                       @ [Lecture5.Value]
                       (let {
                          ds :: Lecture5.Row = GHC.Types.I# x
                        } in
                        letrec {
                          go2 :: GHC.Prim.Int# -> [Lecture5.Value]
                            {- Arity: 1, Strictness: <L,U> -}
                          = \ (x1 :: GHC.Prim.Int#) ->
                            GHC.Types.:
                              @ Lecture5.Value
                              (s (ds, GHC.Types.I# x1))
                              (case x1 of wild {
                                 DEFAULT -> go2 (GHC.Prim.+# wild 1#)
                                 9# -> GHC.Types.[] @ Lecture5.Value })
                        } in
                        go2 1#)
                       (case x of wild {
                          DEFAULT -> go1 (GHC.Prim.+# wild 1#)
                          9# -> GHC.Types.[] @ [Lecture5.Value] })
                 } in
                 go1 1#) -}
dfc4741deee89cd7b85e56d5d97b3ceb
  takeT :: GHC.Types.Int -> Lecture5.Tree a -> Lecture5.Tree a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S,1*U(U,1*U)>m, Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: Lecture5.Tree a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Lecture5.T ww3 ww4 ->
                 case Lecture5.$wtakeT @ a ww1 ww3 ww4 of ww5 { (#,#) ww6 ww7 ->
                 Lecture5.T @ a ww6 ww7 } } }) -}
f9b75e2f27e58e63b5411d5204ee404b
  testIsMinimal :: GHC.Types.Int -> GHC.Types.Int -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lecture5.testIsMinimal1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
0b592d70b3eaf14cc30f5a0a9866361c
  testIsMinimal1 ::
    GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <S(S),1*U(U)><S(S),1*U(U)><S,U>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GHC.Types.I# ww3 ->
                 Lecture5.$wtestIsMinimal ww1 ww3 w2 } }) -}
8099a20776e42dbc5d7844bea97d0fac
  uniqueSol :: Lecture5.Node -> GHC.Types.Bool
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (node :: Lecture5.Node) ->
                 Lecture5.uniqueSol' node GHC.Types.True) -}
a0e101669f7851e3cc6817b4f8ff6ada
  uniqueSol' :: Lecture5.Node -> GHC.Types.Bool -> GHC.Types.Bool
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (node :: Lecture5.Node) (isNRC :: GHC.Types.Bool) ->
                 case Lecture5.search
                        @ Lecture5.Node
                        (Lecture5.succNode isNRC)
                        Lecture5.solved
                        (GHC.Types.:
                           @ Lecture5.Node
                           node
                           (GHC.Types.[] @ Lecture5.Node)) of wild {
                   [] -> GHC.Types.False
                   : x ds
                   -> case ds of wild1 {
                        [] -> GHC.Types.True : y zs -> GHC.Types.False } }) -}
d3244ce4833cb8b2467a914bdff76532
  update :: GHC.Classes.Eq a => (a -> b) -> (a, b) -> a -> b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*C1(U)><S,1*U(U,1*U)><L,U>,
     Unfolding: InlineRule (4, True, False)
                (\ @ a
                   @ b
                   ($dEq :: GHC.Classes.Eq a)
                   (f :: a -> b)
                   (ds :: (a, b))
                   (x :: a) ->
                 case ds of wild { (,) y z ->
                 case GHC.Classes.== @ a $dEq x y of wild1 {
                   GHC.Types.False -> f x GHC.Types.True -> z } }) -}
7fdf92bca77b3523b219d2985349772f
  values :: [GHC.Types.Int]
  {- Unfolding: (Lecture5.positions) -}
instance GHC.Classes.Eq [Lecture5.Tree] = Lecture5.$fEqTree
instance GHC.Classes.Ord [Lecture5.Tree] = Lecture5.$fOrdTree
instance GHC.Show.Show [Lecture5.Tree] = Lecture5.$fShowTree
"SPEC randomize @ (Row, Column)" forall ($dEq :: GHC.Classes.Eq
                                                   (Lecture5.Row, Lecture5.Column))
  Lecture5.randomize1 @ (Lecture5.Row, Lecture5.Column) $dEq
  = Lecture5.genNonSolvedSudoku_$srandomize
"SPEC/Lecture5 $fEq(,) @ Int @ Int" [orphan] forall (v1 :: GHC.Classes.Eq
                                                             GHC.Types.Int)
                                                    (v :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,) @ GHC.Types.Int @ GHC.Types.Int v v1
  = Lecture5.$s$fEq(,)
"SPEC/Lecture5 $fEq(,)_$c/= @ Int @ Int" [orphan] forall ($dEq1 :: GHC.Classes.Eq
                                                                     GHC.Types.Int)
                                                         ($dEq :: GHC.Classes.Eq GHC.Types.Int)
  GHC.Classes.$fEq(,)_$c/= @ GHC.Types.Int @ GHC.Types.Int $dEq $dEq1
  = Lecture5.$s$fEq(,)_$s$fEq(,)_$c/=
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

